{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Copy of NYC_Airbnb_ML2",
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "4e61b01d79a748138ff0a57ae98cd036": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_b912e18879bd49fc830954739b43e3a9",
            "_dom_classes": [],
            "description": "Processing: ",
            "_model_name": "IntProgressModel",
            "bar_style": "",
            "max": 3,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 3,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2387d52524e942eea64deeb4241bffeb"
          }
        },
        "b912e18879bd49fc830954739b43e3a9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2387d52524e942eea64deeb4241bffeb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "18b95d05864d446eb0717039e91bf9ea": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "TextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "TextView",
            "style": "IPY_MODEL_7fedd176274e4bcb9b821830e3feef14",
            "_dom_classes": [],
            "description": "",
            "_model_name": "TextModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "Following data types have been inferred automatically, if they are correct press enter to continue or type 'quit' otherwise.",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "continuous_update": true,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4641e402dd7149c8890588c611355bb8"
          }
        },
        "7fedd176274e4bcb9b821830e3feef14": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4641e402dd7149c8890588c611355bb8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": "100%",
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2e8ab5ca3ed44cbabb59784e534bdcd0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_e39ac459e5ef456da9415d4144d3d3bb",
            "_dom_classes": [],
            "description": "Processing: ",
            "_model_name": "IntProgressModel",
            "bar_style": "",
            "max": 39,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 39,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_64c4910097e4482bbcdf74a1165e0895"
          }
        },
        "e39ac459e5ef456da9415d4144d3d3bb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "64c4910097e4482bbcdf74a1165e0895": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1019ec912ba74fb4a4aa4859f94f2362": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_33cec5a8b1724163a919c906225bbb37",
            "_dom_classes": [],
            "description": "Processing: ",
            "_model_name": "IntProgressModel",
            "bar_style": "",
            "max": 3,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 3,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9accf28856114e22ad9840de53894788"
          }
        },
        "33cec5a8b1724163a919c906225bbb37": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9accf28856114e22ad9840de53894788": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5a2a0b8c4d8a499ba69f879de82432dd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "TextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "TextView",
            "style": "IPY_MODEL_07201278b7174d0481341f7ccdb1a973",
            "_dom_classes": [],
            "description": "",
            "_model_name": "TextModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "Following data types have been inferred automatically, if they are correct press enter to continue or type 'quit' otherwise.",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "continuous_update": true,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_980b62def5c949c6b07509a4d647071f"
          }
        },
        "07201278b7174d0481341f7ccdb1a973": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "980b62def5c949c6b07509a4d647071f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": "100%",
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4337628a58ab4da0b595521197f4501f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_0c35fdc9b3c34308a469db2ce6b296c2",
            "_dom_classes": [],
            "description": "Processing: ",
            "_model_name": "IntProgressModel",
            "bar_style": "",
            "max": 39,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 39,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f0eaa58c18104a89a2c76f4414d9fa4f"
          }
        },
        "0c35fdc9b3c34308a469db2ce6b296c2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f0eaa58c18104a89a2c76f4414d9fa4f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f3d182e38a934f7f8e8511273f6d5fc7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_137fa0b5232f4a31909df52a11f9ff5b",
            "_dom_classes": [],
            "description": "Processing: ",
            "_model_name": "IntProgressModel",
            "bar_style": "",
            "max": 3,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 3,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_682529f04f4d4305b16e5709ef05e622"
          }
        },
        "137fa0b5232f4a31909df52a11f9ff5b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "682529f04f4d4305b16e5709ef05e622": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "fd4b4236eda44f0296787e4362675190": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "TextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "TextView",
            "style": "IPY_MODEL_bc3f8b2277f94ace8cb81421aaa8f3f3",
            "_dom_classes": [],
            "description": "",
            "_model_name": "TextModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "Following data types have been inferred automatically, if they are correct press enter to continue or type 'quit' otherwise.",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "continuous_update": true,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_7a77777cea4f4556b17af0a96b7b770a"
          }
        },
        "bc3f8b2277f94ace8cb81421aaa8f3f3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "7a77777cea4f4556b17af0a96b7b770a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": "100%",
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "600f9cbfd74247dd8aa76f566aacffb0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_6f97e01e07a646639220c4e6d4719392",
            "_dom_classes": [],
            "description": "Processing: ",
            "_model_name": "IntProgressModel",
            "bar_style": "",
            "max": 39,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 39,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_fe1ebf2267a5471fa0060d0ae467ca97"
          }
        },
        "6f97e01e07a646639220c4e6d4719392": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "fe1ebf2267a5471fa0060d0ae467ca97": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9a8a3a4d7c7f4fe18532e983f82b8490": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_581dcc927bae42fa8dff7aa45d1a8ff3",
            "_dom_classes": [],
            "description": "Processing: ",
            "_model_name": "IntProgressModel",
            "bar_style": "",
            "max": 3,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 3,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b0f951dab0524252ab4afe4847bd1056"
          }
        },
        "581dcc927bae42fa8dff7aa45d1a8ff3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b0f951dab0524252ab4afe4847bd1056": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1ec42cd29bcc41d0ba68c53878e0572d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "TextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "TextView",
            "style": "IPY_MODEL_c0be71279420403e9c0085f324bece43",
            "_dom_classes": [],
            "description": "",
            "_model_name": "TextModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "Following data types have been inferred automatically, if they are correct press enter to continue or type 'quit' otherwise.",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "continuous_update": true,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ce6f64f8088446a998f5baac00d31fb5"
          }
        },
        "c0be71279420403e9c0085f324bece43": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ce6f64f8088446a998f5baac00d31fb5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": "100%",
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "dc5c1a91620147b0a7bab2000d2bc09f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_2b42b12f51f743389dc31fd88f232345",
            "_dom_classes": [],
            "description": "Processing: ",
            "_model_name": "IntProgressModel",
            "bar_style": "",
            "max": 39,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 39,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_0aa722f2ba4e4ecaaff16aad4cb8e727"
          }
        },
        "2b42b12f51f743389dc31fd88f232345": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "0aa722f2ba4e4ecaaff16aad4cb8e727": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b071dc35d33743159b36702da20c82f5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_ea1b3b4daf2444b4b84034d62dc4ec9b",
            "_dom_classes": [],
            "description": "Processing: ",
            "_model_name": "IntProgressModel",
            "bar_style": "",
            "max": 4,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 4,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_efa2966c005147028f31b99fc4af33cb"
          }
        },
        "ea1b3b4daf2444b4b84034d62dc4ec9b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "efa2966c005147028f31b99fc4af33cb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b3cced2c3ff740459509a2023ec9f204": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_a08c8ca9e1b7453f94800592302e67e5",
            "_dom_classes": [],
            "description": "Processing: ",
            "_model_name": "IntProgressModel",
            "bar_style": "",
            "max": 7,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 7,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b5c11eca01b1412eb8ed765313beaad1"
          }
        },
        "a08c8ca9e1b7453f94800592302e67e5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b5c11eca01b1412eb8ed765313beaad1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f8c2b3e87a3b434a98afeb09ba979830": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_233110c4811e4aad9481db4336cbeb97",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_d2b23e601b6b4fbe83f61b895a11867f",
              "IPY_MODEL_224e7ffc724b453a8a8dfc5d15e0e4fb"
            ]
          }
        },
        "233110c4811e4aad9481db4336cbeb97": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d2b23e601b6b4fbe83f61b895a11867f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ToggleButtonsModel",
          "model_module_version": "1.5.0",
          "state": {
            "_options_labels": [
              "Hyperparameters",
              "Residuals",
              "Prediction Error",
              "Cooks Distance",
              "Feature Selection",
              "Learning Curve",
              "Manifold Learning",
              "Validation Curve",
              "Feature Importance",
              "Feature Importance (All)",
              "Decision Tree",
              "Interactive Residuals"
            ],
            "_view_name": "ToggleButtonsView",
            "style": "IPY_MODEL_82cc9f3fc03f46d8b9ed7630f35938b7",
            "_dom_classes": [],
            "description": "Plot Type:",
            "_model_name": "ToggleButtonsModel",
            "tooltips": [],
            "index": 0,
            "button_style": "",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "icons": [
              ""
            ],
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2576d58ccfdc4e93a7d6462cc7120bdc"
          }
        },
        "224e7ffc724b453a8a8dfc5d15e0e4fb": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [
              {
                "output_type": "display_data",
                "data": {
                  "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Parameters</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>alpha</th>\n      <td>0.7</td>\n    </tr>\n    <tr>\n      <th>epsilon</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>fit_intercept</th>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>max_iter</th>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>tol</th>\n      <td>1e-05</td>\n    </tr>\n    <tr>\n      <th>warm_start</th>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
                  "text/plain": "              Parameters\nalpha                0.7\nepsilon                1\nfit_intercept      False\nmax_iter             100\ntol                1e-05\nwarm_start         False"
                },
                "metadata": {}
              }
            ],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_81ec63da42b541bea580950bc55da154",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "82cc9f3fc03f46d8b9ed7630f35938b7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ToggleButtonsStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "button_width": "",
            "_model_name": "ToggleButtonsStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "font_weight": "",
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2576d58ccfdc4e93a7d6462cc7120bdc": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "81ec63da42b541bea580950bc55da154": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8dd4c1344b064adfb2875d94604334f8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_2207686824b4436fbd32cdf6fd618649",
            "_dom_classes": [],
            "description": "Processing: ",
            "_model_name": "IntProgressModel",
            "bar_style": "",
            "max": 5,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 3,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a9ebf10849d741589325676669cd4049"
          }
        },
        "2207686824b4436fbd32cdf6fd618649": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a9ebf10849d741589325676669cd4049": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gVzTE78UPE3O"
      },
      "source": [
        "New York City Airbnb Open Data\n",
        "\n",
        "Airbnb listings and metrics in NYC, NY, USA (2019)\n",
        "\n",
        "https://www.kaggle.com/dgomonov/new-york-city-airbnb-open-data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rfEGOEvXQPMe",
        "outputId": "ee4df635-ce93-45fb-d6e5-44a48daab92c"
      },
      "source": [
        "!pip3 install pycaret\n",
        "!pip3 install shap\n",
        "!pip install pyyaml==5.4.1"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting pycaret\n",
            "  Downloading pycaret-2.3.5-py3-none-any.whl (288 kB)\n",
            "\u001b[?25l\r\u001b[K     |█▏                              | 10 kB 23.6 MB/s eta 0:00:01\r\u001b[K     |██▎                             | 20 kB 29.0 MB/s eta 0:00:01\r\u001b[K     |███▍                            | 30 kB 25.0 MB/s eta 0:00:01\r\u001b[K     |████▌                           | 40 kB 19.4 MB/s eta 0:00:01\r\u001b[K     |█████▊                          | 51 kB 16.6 MB/s eta 0:00:01\r\u001b[K     |██████▉                         | 61 kB 13.9 MB/s eta 0:00:01\r\u001b[K     |████████                        | 71 kB 13.6 MB/s eta 0:00:01\r\u001b[K     |█████████                       | 81 kB 14.9 MB/s eta 0:00:01\r\u001b[K     |██████████▏                     | 92 kB 15.4 MB/s eta 0:00:01\r\u001b[K     |███████████▍                    | 102 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |████████████▌                   | 112 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |█████████████▋                  | 122 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |██████████████▊                 | 133 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |████████████████                | 143 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |█████████████████               | 153 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |██████████████████▏             | 163 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |███████████████████▎            | 174 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |████████████████████▍           | 184 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▋          | 194 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▊         | 204 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▉        | 215 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 225 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▏     | 235 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▎    | 245 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▍   | 256 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▌  | 266 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▋ | 276 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▉| 286 kB 14.3 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 288 kB 14.3 MB/s \n",
            "\u001b[?25hRequirement already satisfied: wordcloud in /usr/local/lib/python3.7/dist-packages (from pycaret) (1.5.0)\n",
            "Collecting pyod\n",
            "  Downloading pyod-0.9.5.tar.gz (113 kB)\n",
            "\u001b[K     |████████████████████████████████| 113 kB 59.7 MB/s \n",
            "\u001b[?25hCollecting mlxtend>=0.17.0\n",
            "  Downloading mlxtend-0.19.0-py2.py3-none-any.whl (1.3 MB)\n",
            "\u001b[K     |████████████████████████████████| 1.3 MB 51.3 MB/s \n",
            "\u001b[?25hRequirement already satisfied: scipy<=1.5.4 in /usr/local/lib/python3.7/dist-packages (from pycaret) (1.4.1)\n",
            "Requirement already satisfied: numpy==1.19.5 in /usr/local/lib/python3.7/dist-packages (from pycaret) (1.19.5)\n",
            "Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from pycaret) (1.1.0)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from pycaret) (3.2.2)\n",
            "Requirement already satisfied: yellowbrick>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from pycaret) (1.3.post1)\n",
            "Requirement already satisfied: spacy<2.4.0 in /usr/local/lib/python3.7/dist-packages (from pycaret) (2.2.4)\n",
            "Requirement already satisfied: IPython in /usr/local/lib/python3.7/dist-packages (from pycaret) (5.5.0)\n",
            "Collecting pandas-profiling>=2.8.0\n",
            "  Downloading pandas_profiling-3.1.0-py2.py3-none-any.whl (261 kB)\n",
            "\u001b[K     |████████████████████████████████| 261 kB 61.2 MB/s \n",
            "\u001b[?25hRequirement already satisfied: ipywidgets in /usr/local/lib/python3.7/dist-packages (from pycaret) (7.6.5)\n",
            "Requirement already satisfied: seaborn in /usr/local/lib/python3.7/dist-packages (from pycaret) (0.11.2)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from pycaret) (1.1.5)\n",
            "Collecting scikit-plot\n",
            "  Downloading scikit_plot-0.3.7-py3-none-any.whl (33 kB)\n",
            "Requirement already satisfied: textblob in /usr/local/lib/python3.7/dist-packages (from pycaret) (0.15.3)\n",
            "Requirement already satisfied: gensim<4.0.0 in /usr/local/lib/python3.7/dist-packages (from pycaret) (3.6.0)\n",
            "Collecting umap-learn\n",
            "  Downloading umap-learn-0.5.2.tar.gz (86 kB)\n",
            "\u001b[K     |████████████████████████████████| 86 kB 4.0 MB/s \n",
            "\u001b[?25hRequirement already satisfied: nltk in /usr/local/lib/python3.7/dist-packages (from pycaret) (3.2.5)\n",
            "Collecting Boruta\n",
            "  Downloading Boruta-0.3-py3-none-any.whl (56 kB)\n",
            "\u001b[K     |████████████████████████████████| 56 kB 4.5 MB/s \n",
            "\u001b[?25hCollecting kmodes>=0.10.1\n",
            "  Downloading kmodes-0.11.1-py2.py3-none-any.whl (19 kB)\n",
            "Collecting mlflow\n",
            "  Downloading mlflow-1.22.0-py3-none-any.whl (15.5 MB)\n",
            "\u001b[K     |████████████████████████████████| 15.5 MB 58.5 MB/s \n",
            "\u001b[?25hCollecting scikit-learn==0.23.2\n",
            "  Downloading scikit_learn-0.23.2-cp37-cp37m-manylinux1_x86_64.whl (6.8 MB)\n",
            "\u001b[K     |████████████████████████████████| 6.8 MB 47.2 MB/s \n",
            "\u001b[?25hRequirement already satisfied: cufflinks>=0.17.0 in /usr/local/lib/python3.7/dist-packages (from pycaret) (0.17.3)\n",
            "Collecting pyLDAvis\n",
            "  Downloading pyLDAvis-3.3.1.tar.gz (1.7 MB)\n",
            "\u001b[K     |████████████████████████████████| 1.7 MB 36.3 MB/s \n",
            "\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n",
            "  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n",
            "  Installing backend dependencies ... \u001b[?25l\u001b[?25hdone\n",
            "    Preparing wheel metadata ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting lightgbm>=2.3.1\n",
            "  Downloading lightgbm-3.3.1-py3-none-manylinux1_x86_64.whl (2.0 MB)\n",
            "\u001b[K     |████████████████████████████████| 2.0 MB 54.3 MB/s \n",
            "\u001b[?25hRequirement already satisfied: plotly>=4.4.1 in /usr/local/lib/python3.7/dist-packages (from pycaret) (4.4.1)\n",
            "Collecting imbalanced-learn==0.7.0\n",
            "  Downloading imbalanced_learn-0.7.0-py3-none-any.whl (167 kB)\n",
            "\u001b[K     |████████████████████████████████| 167 kB 66.1 MB/s \n",
            "\u001b[?25hRequirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn==0.23.2->pycaret) (3.0.0)\n",
            "Requirement already satisfied: colorlover>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from cufflinks>=0.17.0->pycaret) (0.3.0)\n",
            "Requirement already satisfied: setuptools>=34.4.1 in /usr/local/lib/python3.7/dist-packages (from cufflinks>=0.17.0->pycaret) (57.4.0)\n",
            "Requirement already satisfied: six>=1.9.0 in /usr/local/lib/python3.7/dist-packages (from cufflinks>=0.17.0->pycaret) (1.15.0)\n",
            "Requirement already satisfied: smart-open>=1.2.1 in /usr/local/lib/python3.7/dist-packages (from gensim<4.0.0->pycaret) (5.2.1)\n",
            "Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from IPython->pycaret) (0.7.5)\n",
            "Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from IPython->pycaret) (2.6.1)\n",
            "Requirement already satisfied: traitlets>=4.2 in /usr/local/lib/python3.7/dist-packages (from IPython->pycaret) (5.1.1)\n",
            "Requirement already satisfied: pexpect in /usr/local/lib/python3.7/dist-packages (from IPython->pycaret) (4.8.0)\n",
            "Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from IPython->pycaret) (4.4.2)\n",
            "Requirement already satisfied: prompt-toolkit<2.0.0,>=1.0.4 in /usr/local/lib/python3.7/dist-packages (from IPython->pycaret) (1.0.18)\n",
            "Requirement already satisfied: simplegeneric>0.8 in /usr/local/lib/python3.7/dist-packages (from IPython->pycaret) (0.8.1)\n",
            "Requirement already satisfied: widgetsnbextension~=3.5.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->pycaret) (3.5.2)\n",
            "Requirement already satisfied: nbformat>=4.2.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->pycaret) (5.1.3)\n",
            "Requirement already satisfied: ipykernel>=4.5.1 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->pycaret) (4.10.1)\n",
            "Requirement already satisfied: ipython-genutils~=0.2.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->pycaret) (0.2.0)\n",
            "Requirement already satisfied: jupyterlab-widgets>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->pycaret) (1.0.2)\n",
            "Requirement already satisfied: jupyter-client in /usr/local/lib/python3.7/dist-packages (from ipykernel>=4.5.1->ipywidgets->pycaret) (5.3.5)\n",
            "Requirement already satisfied: tornado>=4.0 in /usr/local/lib/python3.7/dist-packages (from ipykernel>=4.5.1->ipywidgets->pycaret) (5.1.1)\n",
            "Requirement already satisfied: wheel in /usr/local/lib/python3.7/dist-packages (from lightgbm>=2.3.1->pycaret) (0.37.0)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->pycaret) (2.8.2)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib->pycaret) (0.11.0)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->pycaret) (1.3.2)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->pycaret) (3.0.6)\n",
            "Requirement already satisfied: jsonschema!=2.5.0,>=2.4 in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.2.0->ipywidgets->pycaret) (2.6.0)\n",
            "Requirement already satisfied: jupyter-core in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.2.0->ipywidgets->pycaret) (4.9.1)\n",
            "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas->pycaret) (2018.9)\n",
            "Collecting phik>=0.11.1\n",
            "  Downloading phik-0.12.0-cp37-cp37m-manylinux2010_x86_64.whl (675 kB)\n",
            "\u001b[K     |████████████████████████████████| 675 kB 68.1 MB/s \n",
            "\u001b[?25hCollecting requests>=2.24.0\n",
            "  Downloading requests-2.26.0-py2.py3-none-any.whl (62 kB)\n",
            "\u001b[K     |████████████████████████████████| 62 kB 791 kB/s \n",
            "\u001b[?25hCollecting joblib\n",
            "  Downloading joblib-1.0.1-py3-none-any.whl (303 kB)\n",
            "\u001b[K     |████████████████████████████████| 303 kB 58.8 MB/s \n",
            "\u001b[?25hCollecting htmlmin>=0.1.12\n",
            "  Downloading htmlmin-0.1.12.tar.gz (19 kB)\n",
            "Collecting visions[type_image_path]==0.7.4\n",
            "  Downloading visions-0.7.4-py3-none-any.whl (102 kB)\n",
            "\u001b[K     |████████████████████████████████| 102 kB 9.6 MB/s \n",
            "\u001b[?25hRequirement already satisfied: missingno>=0.4.2 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling>=2.8.0->pycaret) (0.5.0)\n",
            "Requirement already satisfied: tqdm>=4.48.2 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling>=2.8.0->pycaret) (4.62.3)\n",
            "Collecting pydantic>=1.8.1\n",
            "  Downloading pydantic-1.8.2-cp37-cp37m-manylinux2014_x86_64.whl (10.1 MB)\n",
            "\u001b[K     |████████████████████████████████| 10.1 MB 55.7 MB/s \n",
            "\u001b[?25hCollecting multimethod>=1.4\n",
            "  Downloading multimethod-1.6-py3-none-any.whl (9.4 kB)\n",
            "Requirement already satisfied: jinja2>=2.11.1 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling>=2.8.0->pycaret) (2.11.3)\n",
            "Collecting tangled-up-in-unicode==0.1.0\n",
            "  Downloading tangled_up_in_unicode-0.1.0-py3-none-any.whl (3.1 MB)\n",
            "\u001b[K     |████████████████████████████████| 3.1 MB 30.8 MB/s \n",
            "\u001b[?25hRequirement already satisfied: markupsafe~=2.0.1 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling>=2.8.0->pycaret) (2.0.1)\n",
            "Collecting PyYAML>=5.0.0\n",
            "  Downloading PyYAML-6.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (596 kB)\n",
            "\u001b[K     |████████████████████████████████| 596 kB 44.5 MB/s \n",
            "\u001b[?25hRequirement already satisfied: networkx>=2.4 in /usr/local/lib/python3.7/dist-packages (from visions[type_image_path]==0.7.4->pandas-profiling>=2.8.0->pycaret) (2.6.3)\n",
            "Requirement already satisfied: attrs>=19.3.0 in /usr/local/lib/python3.7/dist-packages (from visions[type_image_path]==0.7.4->pandas-profiling>=2.8.0->pycaret) (21.2.0)\n",
            "Collecting imagehash\n",
            "  Downloading ImageHash-4.2.1.tar.gz (812 kB)\n",
            "\u001b[K     |████████████████████████████████| 812 kB 70.6 MB/s \n",
            "\u001b[?25hRequirement already satisfied: Pillow in /usr/local/lib/python3.7/dist-packages (from visions[type_image_path]==0.7.4->pandas-profiling>=2.8.0->pycaret) (7.1.2)\n",
            "Collecting scipy<=1.5.4\n",
            "  Downloading scipy-1.5.4-cp37-cp37m-manylinux1_x86_64.whl (25.9 MB)\n",
            "\u001b[K     |████████████████████████████████| 25.9 MB 63.2 MB/s \n",
            "\u001b[?25hRequirement already satisfied: retrying>=1.3.3 in /usr/local/lib/python3.7/dist-packages (from plotly>=4.4.1->pycaret) (1.3.3)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->IPython->pycaret) (0.2.5)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.7/dist-packages (from pydantic>=1.8.1->pandas-profiling>=2.8.0->pycaret) (3.10.0.2)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.24.0->pandas-profiling>=2.8.0->pycaret) (2021.10.8)\n",
            "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.24.0->pandas-profiling>=2.8.0->pycaret) (1.24.3)\n",
            "Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.7/dist-packages (from requests>=2.24.0->pandas-profiling>=2.8.0->pycaret) (2.0.8)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.24.0->pandas-profiling>=2.8.0->pycaret) (2.10)\n",
            "Requirement already satisfied: wasabi<1.1.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret) (0.8.2)\n",
            "Requirement already satisfied: thinc==7.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret) (7.4.0)\n",
            "Requirement already satisfied: srsly<1.1.0,>=1.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret) (1.0.5)\n",
            "Requirement already satisfied: blis<0.5.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret) (0.4.1)\n",
            "Requirement already satisfied: plac<1.2.0,>=0.9.6 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret) (1.1.3)\n",
            "Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret) (1.0.6)\n",
            "Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret) (2.0.6)\n",
            "Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret) (3.0.6)\n",
            "Requirement already satisfied: catalogue<1.1.0,>=0.0.7 in /usr/local/lib/python3.7/dist-packages (from spacy<2.4.0->pycaret) (1.0.0)\n",
            "Requirement already satisfied: importlib-metadata>=0.20 in /usr/local/lib/python3.7/dist-packages (from catalogue<1.1.0,>=0.0.7->spacy<2.4.0->pycaret) (4.8.2)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=0.20->catalogue<1.1.0,>=0.0.7->spacy<2.4.0->pycaret) (3.6.0)\n",
            "Requirement already satisfied: notebook>=4.4.1 in /usr/local/lib/python3.7/dist-packages (from widgetsnbextension~=3.5.0->ipywidgets->pycaret) (5.3.1)\n",
            "Requirement already satisfied: terminado>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets->pycaret) (0.12.1)\n",
            "Requirement already satisfied: nbconvert in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets->pycaret) (5.6.1)\n",
            "Requirement already satisfied: Send2Trash in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets->pycaret) (1.8.0)\n",
            "Requirement already satisfied: pyzmq>=13 in /usr/local/lib/python3.7/dist-packages (from jupyter-client->ipykernel>=4.5.1->ipywidgets->pycaret) (22.3.0)\n",
            "Requirement already satisfied: ptyprocess in /usr/local/lib/python3.7/dist-packages (from terminado>=0.8.1->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets->pycaret) (0.7.0)\n",
            "Requirement already satisfied: PyWavelets in /usr/local/lib/python3.7/dist-packages (from imagehash->visions[type_image_path]==0.7.4->pandas-profiling>=2.8.0->pycaret) (1.2.0)\n",
            "Collecting databricks-cli>=0.8.7\n",
            "  Downloading databricks-cli-0.16.2.tar.gz (58 kB)\n",
            "\u001b[K     |████████████████████████████████| 58 kB 4.2 MB/s \n",
            "\u001b[?25hRequirement already satisfied: Flask in /usr/local/lib/python3.7/dist-packages (from mlflow->pycaret) (1.1.4)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from mlflow->pycaret) (21.3)\n",
            "Requirement already satisfied: sqlparse>=0.3.1 in /usr/local/lib/python3.7/dist-packages (from mlflow->pycaret) (0.4.2)\n",
            "Requirement already satisfied: protobuf>=3.7.0 in /usr/local/lib/python3.7/dist-packages (from mlflow->pycaret) (3.17.3)\n",
            "Collecting alembic<=1.4.1\n",
            "  Downloading alembic-1.4.1.tar.gz (1.1 MB)\n",
            "\u001b[K     |████████████████████████████████| 1.1 MB 44.0 MB/s \n",
            "\u001b[?25hRequirement already satisfied: cloudpickle in /usr/local/lib/python3.7/dist-packages (from mlflow->pycaret) (1.3.0)\n",
            "Requirement already satisfied: sqlalchemy in /usr/local/lib/python3.7/dist-packages (from mlflow->pycaret) (1.4.27)\n",
            "Requirement already satisfied: click>=7.0 in /usr/local/lib/python3.7/dist-packages (from mlflow->pycaret) (7.1.2)\n",
            "Collecting docker>=4.0.0\n",
            "  Downloading docker-5.0.3-py2.py3-none-any.whl (146 kB)\n",
            "\u001b[K     |████████████████████████████████| 146 kB 68.7 MB/s \n",
            "\u001b[?25hCollecting gitpython>=2.1.0\n",
            "  Downloading GitPython-3.1.24-py3-none-any.whl (180 kB)\n",
            "\u001b[K     |████████████████████████████████| 180 kB 75.2 MB/s \n",
            "\u001b[?25hCollecting prometheus-flask-exporter\n",
            "  Downloading prometheus_flask_exporter-0.18.6-py3-none-any.whl (17 kB)\n",
            "Requirement already satisfied: entrypoints in /usr/local/lib/python3.7/dist-packages (from mlflow->pycaret) (0.3)\n",
            "Collecting querystring-parser\n",
            "  Downloading querystring_parser-1.2.4-py2.py3-none-any.whl (7.9 kB)\n",
            "Collecting gunicorn\n",
            "  Downloading gunicorn-20.1.0-py3-none-any.whl (79 kB)\n",
            "\u001b[K     |████████████████████████████████| 79 kB 8.3 MB/s \n",
            "\u001b[?25hCollecting Mako\n",
            "  Downloading Mako-1.1.6-py2.py3-none-any.whl (75 kB)\n",
            "\u001b[K     |████████████████████████████████| 75 kB 4.2 MB/s \n",
            "\u001b[?25hCollecting python-editor>=0.3\n",
            "  Downloading python_editor-1.0.4-py3-none-any.whl (4.9 kB)\n",
            "Requirement already satisfied: tabulate>=0.7.7 in /usr/local/lib/python3.7/dist-packages (from databricks-cli>=0.8.7->mlflow->pycaret) (0.8.9)\n",
            "Collecting websocket-client>=0.32.0\n",
            "  Downloading websocket_client-1.2.1-py2.py3-none-any.whl (52 kB)\n",
            "\u001b[K     |████████████████████████████████| 52 kB 1.2 MB/s \n",
            "\u001b[?25hCollecting gitdb<5,>=4.0.1\n",
            "  Downloading gitdb-4.0.9-py3-none-any.whl (63 kB)\n",
            "\u001b[K     |████████████████████████████████| 63 kB 1.4 MB/s \n",
            "\u001b[?25hCollecting smmap<6,>=3.0.1\n",
            "  Downloading smmap-5.0.0-py3-none-any.whl (24 kB)\n",
            "Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.7/dist-packages (from sqlalchemy->mlflow->pycaret) (1.1.2)\n",
            "Requirement already satisfied: itsdangerous<2.0,>=0.24 in /usr/local/lib/python3.7/dist-packages (from Flask->mlflow->pycaret) (1.1.0)\n",
            "Requirement already satisfied: Werkzeug<2.0,>=0.15 in /usr/local/lib/python3.7/dist-packages (from Flask->mlflow->pycaret) (1.0.1)\n",
            "Requirement already satisfied: testpath in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets->pycaret) (0.5.0)\n",
            "Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets->pycaret) (0.8.4)\n",
            "Requirement already satisfied: defusedxml in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets->pycaret) (0.7.1)\n",
            "Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets->pycaret) (1.5.0)\n",
            "Requirement already satisfied: bleach in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets->pycaret) (4.1.0)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.7/dist-packages (from bleach->nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets->pycaret) (0.5.1)\n",
            "Requirement already satisfied: prometheus-client in /usr/local/lib/python3.7/dist-packages (from prometheus-flask-exporter->mlflow->pycaret) (0.12.0)\n",
            "Requirement already satisfied: future in /usr/local/lib/python3.7/dist-packages (from pyLDAvis->pycaret) (0.16.0)\n",
            "Collecting funcy\n",
            "  Downloading funcy-1.16-py2.py3-none-any.whl (32 kB)\n",
            "Collecting pandas\n",
            "  Downloading pandas-1.3.4-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.3 MB)\n",
            "\u001b[K     |████████████████████████████████| 11.3 MB 61.6 MB/s \n",
            "\u001b[?25hRequirement already satisfied: sklearn in /usr/local/lib/python3.7/dist-packages (from pyLDAvis->pycaret) (0.0)\n",
            "Collecting pyLDAvis\n",
            "  Downloading pyLDAvis-3.3.0.tar.gz (1.7 MB)\n",
            "\u001b[K     |████████████████████████████████| 1.7 MB 66.2 MB/s \n",
            "\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n",
            "  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n",
            "  Installing backend dependencies ... \u001b[?25l\u001b[?25hdone\n",
            "    Preparing wheel metadata ... \u001b[?25l\u001b[?25hdone\n",
            "  Downloading pyLDAvis-3.2.2.tar.gz (1.7 MB)\n",
            "\u001b[K     |████████████████████████████████| 1.7 MB 48.9 MB/s \n",
            "\u001b[?25hRequirement already satisfied: numexpr in /usr/local/lib/python3.7/dist-packages (from pyLDAvis->pycaret) (2.7.3)\n",
            "Requirement already satisfied: numba>=0.35 in /usr/local/lib/python3.7/dist-packages (from pyod->pycaret) (0.51.2)\n",
            "Requirement already satisfied: statsmodels in /usr/local/lib/python3.7/dist-packages (from pyod->pycaret) (0.10.2)\n",
            "Requirement already satisfied: llvmlite<0.35,>=0.34.0.dev0 in /usr/local/lib/python3.7/dist-packages (from numba>=0.35->pyod->pycaret) (0.34.0)\n",
            "Requirement already satisfied: patsy>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from statsmodels->pyod->pycaret) (0.5.2)\n",
            "Collecting pynndescent>=0.5\n",
            "  Downloading pynndescent-0.5.5.tar.gz (1.1 MB)\n",
            "\u001b[K     |████████████████████████████████| 1.1 MB 49.1 MB/s \n",
            "\u001b[?25hBuilding wheels for collected packages: htmlmin, imagehash, alembic, databricks-cli, pyLDAvis, pyod, umap-learn, pynndescent\n",
            "  Building wheel for htmlmin (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for htmlmin: filename=htmlmin-0.1.12-py3-none-any.whl size=27098 sha256=c1ca47073f3899fa03c1d61f134f6015b56e81b22d406559e8af509114cb437a\n",
            "  Stored in directory: /root/.cache/pip/wheels/70/e1/52/5b14d250ba868768823940c3229e9950d201a26d0bd3ee8655\n",
            "  Building wheel for imagehash (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for imagehash: filename=ImageHash-4.2.1-py2.py3-none-any.whl size=295207 sha256=7087fbdf67b88728808f3fcd07c1387cb82baa56a357f061e40bd4ba29fcfa31\n",
            "  Stored in directory: /root/.cache/pip/wheels/4c/d5/59/5e3e297533ddb09407769762985d134135064c6831e29a914e\n",
            "  Building wheel for alembic (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for alembic: filename=alembic-1.4.1-py2.py3-none-any.whl size=158172 sha256=fd22e46d07d72660fe9580562b88793fd2371971faa93bad53175a86bafff43f\n",
            "  Stored in directory: /root/.cache/pip/wheels/be/5d/0a/9e13f53f4f5dfb67cd8d245bb7cdffe12f135846f491a283e3\n",
            "  Building wheel for databricks-cli (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for databricks-cli: filename=databricks_cli-0.16.2-py3-none-any.whl size=106811 sha256=8051f44fd8871632adc2ac03c9ade165a03f654c8e520f04198ffbe8f98dd46d\n",
            "  Stored in directory: /root/.cache/pip/wheels/f4/5c/ed/e1ce20a53095f63b27b4964abbad03e59cf3472822addf7d29\n",
            "  Building wheel for pyLDAvis (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pyLDAvis: filename=pyLDAvis-3.2.2-py2.py3-none-any.whl size=135618 sha256=26977432ed4bf530300894b7d9a5d1f55cd1f080379285fa30fd488759d6dcb3\n",
            "  Stored in directory: /root/.cache/pip/wheels/f8/b1/9b/560ac1931796b7303f7b517b949d2d31a4fbc512aad3b9f284\n",
            "  Building wheel for pyod (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pyod: filename=pyod-0.9.5-py3-none-any.whl size=132699 sha256=2e97578eb1b6c8fc8751cb224d4afbffa64bc02654beeec5ae7ac60b3501b50c\n",
            "  Stored in directory: /root/.cache/pip/wheels/3d/bb/b7/62b60fb451b33b0df1ab8006697fba7a6a49709a629055cf77\n",
            "  Building wheel for umap-learn (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for umap-learn: filename=umap_learn-0.5.2-py3-none-any.whl size=82709 sha256=f52d0f9dbe49ebdd8ec8fed1d61dae99370a0bc711efc7e25451761b9b61528d\n",
            "  Stored in directory: /root/.cache/pip/wheels/84/1b/c6/aaf68a748122632967cef4dffef68224eb16798b6793257d82\n",
            "  Building wheel for pynndescent (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pynndescent: filename=pynndescent-0.5.5-py3-none-any.whl size=52603 sha256=300d476a0a828eac6a07a02270c11573df95ea33d3bf8a308bb28e64d866dc73\n",
            "  Stored in directory: /root/.cache/pip/wheels/af/e9/33/04db1436df0757c42fda8ea6796d7a8586e23c85fac355f476\n",
            "Successfully built htmlmin imagehash alembic databricks-cli pyLDAvis pyod umap-learn pynndescent\n",
            "Installing collected packages: tangled-up-in-unicode, smmap, scipy, multimethod, joblib, websocket-client, visions, scikit-learn, requests, python-editor, Mako, imagehash, gitdb, querystring-parser, PyYAML, pynndescent, pydantic, prometheus-flask-exporter, phik, htmlmin, gunicorn, gitpython, funcy, docker, databricks-cli, alembic, umap-learn, scikit-plot, pyod, pyLDAvis, pandas-profiling, mlxtend, mlflow, lightgbm, kmodes, imbalanced-learn, Boruta, pycaret\n",
            "  Attempting uninstall: scipy\n",
            "    Found existing installation: scipy 1.4.1\n",
            "    Uninstalling scipy-1.4.1:\n",
            "      Successfully uninstalled scipy-1.4.1\n",
            "  Attempting uninstall: joblib\n",
            "    Found existing installation: joblib 1.1.0\n",
            "    Uninstalling joblib-1.1.0:\n",
            "      Successfully uninstalled joblib-1.1.0\n",
            "  Attempting uninstall: scikit-learn\n",
            "    Found existing installation: scikit-learn 1.0.1\n",
            "    Uninstalling scikit-learn-1.0.1:\n",
            "      Successfully uninstalled scikit-learn-1.0.1\n",
            "  Attempting uninstall: requests\n",
            "    Found existing installation: requests 2.23.0\n",
            "    Uninstalling requests-2.23.0:\n",
            "      Successfully uninstalled requests-2.23.0\n",
            "  Attempting uninstall: PyYAML\n",
            "    Found existing installation: PyYAML 3.13\n",
            "    Uninstalling PyYAML-3.13:\n",
            "      Successfully uninstalled PyYAML-3.13\n",
            "  Attempting uninstall: pandas-profiling\n",
            "    Found existing installation: pandas-profiling 1.4.1\n",
            "    Uninstalling pandas-profiling-1.4.1:\n",
            "      Successfully uninstalled pandas-profiling-1.4.1\n",
            "  Attempting uninstall: mlxtend\n",
            "    Found existing installation: mlxtend 0.14.0\n",
            "    Uninstalling mlxtend-0.14.0:\n",
            "      Successfully uninstalled mlxtend-0.14.0\n",
            "  Attempting uninstall: lightgbm\n",
            "    Found existing installation: lightgbm 2.2.3\n",
            "    Uninstalling lightgbm-2.2.3:\n",
            "      Successfully uninstalled lightgbm-2.2.3\n",
            "  Attempting uninstall: imbalanced-learn\n",
            "    Found existing installation: imbalanced-learn 0.8.1\n",
            "    Uninstalling imbalanced-learn-0.8.1:\n",
            "      Successfully uninstalled imbalanced-learn-0.8.1\n",
            "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
            "google-colab 1.0.0 requires requests~=2.23.0, but you have requests 2.26.0 which is incompatible.\n",
            "datascience 0.10.6 requires folium==0.2.1, but you have folium 0.8.3 which is incompatible.\n",
            "albumentations 0.1.12 requires imgaug<0.2.7,>=0.2.5, but you have imgaug 0.2.9 which is incompatible.\u001b[0m\n",
            "Successfully installed Boruta-0.3 Mako-1.1.6 PyYAML-6.0 alembic-1.4.1 databricks-cli-0.16.2 docker-5.0.3 funcy-1.16 gitdb-4.0.9 gitpython-3.1.24 gunicorn-20.1.0 htmlmin-0.1.12 imagehash-4.2.1 imbalanced-learn-0.7.0 joblib-1.0.1 kmodes-0.11.1 lightgbm-3.3.1 mlflow-1.22.0 mlxtend-0.19.0 multimethod-1.6 pandas-profiling-3.1.0 phik-0.12.0 prometheus-flask-exporter-0.18.6 pyLDAvis-3.2.2 pycaret-2.3.5 pydantic-1.8.2 pynndescent-0.5.5 pyod-0.9.5 python-editor-1.0.4 querystring-parser-1.2.4 requests-2.26.0 scikit-learn-0.23.2 scikit-plot-0.3.7 scipy-1.5.4 smmap-5.0.0 tangled-up-in-unicode-0.1.0 umap-learn-0.5.2 visions-0.7.4 websocket-client-1.2.1\n",
            "Collecting shap\n",
            "  Downloading shap-0.40.0.tar.gz (371 kB)\n",
            "\u001b[K     |████████████████████████████████| 371 kB 14.8 MB/s \n",
            "\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n",
            "  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n",
            "    Preparing wheel metadata ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: packaging>20.9 in /usr/local/lib/python3.7/dist-packages (from shap) (21.3)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from shap) (1.5.4)\n",
            "Requirement already satisfied: scikit-learn in /usr/local/lib/python3.7/dist-packages (from shap) (0.23.2)\n",
            "Collecting slicer==0.0.7\n",
            "  Downloading slicer-0.0.7-py3-none-any.whl (14 kB)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from shap) (1.1.5)\n",
            "Requirement already satisfied: cloudpickle in /usr/local/lib/python3.7/dist-packages (from shap) (1.3.0)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from shap) (1.19.5)\n",
            "Requirement already satisfied: numba in /usr/local/lib/python3.7/dist-packages (from shap) (0.51.2)\n",
            "Requirement already satisfied: tqdm>4.25.0 in /usr/local/lib/python3.7/dist-packages (from shap) (4.62.3)\n",
            "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>20.9->shap) (3.0.6)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from numba->shap) (57.4.0)\n",
            "Requirement already satisfied: llvmlite<0.35,>=0.34.0.dev0 in /usr/local/lib/python3.7/dist-packages (from numba->shap) (0.34.0)\n",
            "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas->shap) (2018.9)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas->shap) (2.8.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas->shap) (1.15.0)\n",
            "Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn->shap) (1.0.1)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn->shap) (3.0.0)\n",
            "Building wheels for collected packages: shap\n",
            "  Building wheel for shap (PEP 517) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for shap: filename=shap-0.40.0-cp37-cp37m-linux_x86_64.whl size=509233 sha256=9fdea370fd534363ef9803a4e0c953403ebff177c57a60dc5c7ea5fc02c9df52\n",
            "  Stored in directory: /root/.cache/pip/wheels/ec/35/84/e304841ac4b910bc95fe9a6e5302eb2507b4333728851dcbfb\n",
            "Successfully built shap\n",
            "Installing collected packages: slicer, shap\n",
            "Successfully installed shap-0.40.0 slicer-0.0.7\n",
            "Collecting pyyaml==5.4.1\n",
            "  Downloading PyYAML-5.4.1-cp37-cp37m-manylinux1_x86_64.whl (636 kB)\n",
            "\u001b[K     |████████████████████████████████| 636 kB 12.0 MB/s \n",
            "\u001b[?25hInstalling collected packages: pyyaml\n",
            "  Attempting uninstall: pyyaml\n",
            "    Found existing installation: PyYAML 6.0\n",
            "    Uninstalling PyYAML-6.0:\n",
            "      Successfully uninstalled PyYAML-6.0\n",
            "Successfully installed pyyaml-5.4.1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dbJxLbqAMp2L",
        "outputId": "c7a2acab-10c2-4cef-d39d-938f558daffe"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nRYr8T4KNBJO",
        "outputId": "87fe9a89-d3de-401d-e47a-c8531615e5ff"
      },
      "source": [
        "import os\n",
        "os.listdir('/content/drive')"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['MyDrive', '.shortcut-targets-by-id', '.file-revisions-by-id', '.Trash-0']"
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mUhxGJPWNE_k"
      },
      "source": [
        "file_path = '/content/drive/MyDrive/Colab Notebooks/NYCAnB_cleaned.csv'\n",
        "#/content/drive/MyDrive/Colab Notebooks/AB_NYC_2019.csv"
      ],
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BTrZqmtxNQrO"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import plotly.express as px\n",
        "\n",
        "df = pd.read_csv(file_path)"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 326
        },
        "id": "odialF6XNu8y",
        "outputId": "057c62e9-4734-4127-f358-2aaf2bcfd433"
      },
      "source": [
        "df.head()"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>index</th>\n",
              "      <th>host_id</th>\n",
              "      <th>host_name</th>\n",
              "      <th>neighbourhood_group</th>\n",
              "      <th>neighbourhood</th>\n",
              "      <th>latitude</th>\n",
              "      <th>longitude</th>\n",
              "      <th>room_type</th>\n",
              "      <th>price</th>\n",
              "      <th>minimum_nights</th>\n",
              "      <th>number_of_reviews</th>\n",
              "      <th>last_review</th>\n",
              "      <th>reviews_per_month</th>\n",
              "      <th>calculated_host_listings_count</th>\n",
              "      <th>availability_365</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2787</td>\n",
              "      <td>John</td>\n",
              "      <td>Brooklyn</td>\n",
              "      <td>Kensington</td>\n",
              "      <td>40.64749</td>\n",
              "      <td>-73.97237</td>\n",
              "      <td>Private room</td>\n",
              "      <td>149</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "      <td>2018-10-19</td>\n",
              "      <td>0.21</td>\n",
              "      <td>6</td>\n",
              "      <td>365</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2845</td>\n",
              "      <td>Jennifer</td>\n",
              "      <td>Manhattan</td>\n",
              "      <td>Midtown</td>\n",
              "      <td>40.75362</td>\n",
              "      <td>-73.98377</td>\n",
              "      <td>Entire home/apt</td>\n",
              "      <td>225</td>\n",
              "      <td>1</td>\n",
              "      <td>45</td>\n",
              "      <td>2019-05-21</td>\n",
              "      <td>0.38</td>\n",
              "      <td>2</td>\n",
              "      <td>355</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>4869</td>\n",
              "      <td>LisaRoxanne</td>\n",
              "      <td>Brooklyn</td>\n",
              "      <td>Clinton Hill</td>\n",
              "      <td>40.68514</td>\n",
              "      <td>-73.95976</td>\n",
              "      <td>Entire home/apt</td>\n",
              "      <td>89</td>\n",
              "      <td>1</td>\n",
              "      <td>270</td>\n",
              "      <td>2019-07-05</td>\n",
              "      <td>4.64</td>\n",
              "      <td>1</td>\n",
              "      <td>194</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>7192</td>\n",
              "      <td>Laura</td>\n",
              "      <td>Manhattan</td>\n",
              "      <td>East Harlem</td>\n",
              "      <td>40.79851</td>\n",
              "      <td>-73.94399</td>\n",
              "      <td>Entire home/apt</td>\n",
              "      <td>80</td>\n",
              "      <td>10</td>\n",
              "      <td>9</td>\n",
              "      <td>2018-11-19</td>\n",
              "      <td>0.10</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>7322</td>\n",
              "      <td>Chris</td>\n",
              "      <td>Manhattan</td>\n",
              "      <td>Murray Hill</td>\n",
              "      <td>40.74767</td>\n",
              "      <td>-73.97500</td>\n",
              "      <td>Entire home/apt</td>\n",
              "      <td>200</td>\n",
              "      <td>3</td>\n",
              "      <td>74</td>\n",
              "      <td>2019-06-22</td>\n",
              "      <td>0.59</td>\n",
              "      <td>1</td>\n",
              "      <td>129</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Unnamed: 0  index  ...  calculated_host_listings_count availability_365\n",
              "0           0      0  ...                               6              365\n",
              "1           1      1  ...                               2              355\n",
              "2           3      3  ...                               1              194\n",
              "3           4      4  ...                               1                0\n",
              "4           5      5  ...                               1              129\n",
              "\n",
              "[5 rows x 16 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "k7YSDdgvaAM5",
        "outputId": "c6008371-7ece-4874-9210-f11b46874151"
      },
      "source": [
        "fig = px.histogram(df,x='price',nbins=1000)\n",
        "fig.show()"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>\n",
              "            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>\n",
              "                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>    \n",
              "            <div id=\"d0d882f7-3e9c-479a-9850-0885287e1ba1\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n",
              "            <script type=\"text/javascript\">\n",
              "                \n",
              "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
              "                    \n",
              "                if (document.getElementById(\"d0d882f7-3e9c-479a-9850-0885287e1ba1\")) {\n",
              "                    Plotly.newPlot(\n",
              "                        'd0d882f7-3e9c-479a-9850-0885287e1ba1',\n",
              "                        [{\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"price=%{x}<br>count=%{y}\", \"legendgroup\": \"\", \"marker\": {\"color\": \"#636efa\"}, \"name\": \"\", \"nbinsx\": 1000, \"offsetgroup\": \"\", \"orientation\": \"v\", \"showlegend\": false, \"type\": \"histogram\", \"x\": [149, 225, 89, 80, 200, 79, 79, 150, 135, 85, 89, 85, 140, 215, 140, 99, 299, 130, 80, 110, 120, 60, 150, 44, 180, 50, 52, 55, 50, 70, 89, 85, 40, 68, 120, 120, 135, 150, 150, 130, 110, 115, 80, 80, 151, 228, 144, 200, 150, 110, 69, 49, 180, 80, 250, 200, 55, 52, 225, 80, 275, 99, 225, 230, 51, 65, 105, 190, 200, 70, 95, 150, 145, 110, 285, 130, 94, 105, 60, 50, 85, 65, 131, 98, 250, 100, 105, 140, 89, 98, 125, 60, 175, 65, 500, 101, 220, 80, 100, 200, 59, 125, 140, 120, 350, 199, 325, 235, 225, 99, 170, 400, 170, 100, 75, 90, 150, 85, 70, 120, 89, 185, 50, 105, 130, 115, 77, 76, 125, 135, 250, 199, 140, 140, 115, 160, 195, 195, 80, 44, 156, 85, 125, 115, 69, 125, 219, 475, 99, 69, 79, 135, 250, 250, 250, 80, 70, 165, 70, 50, 40, 150, 125, 196, 110, 170, 165, 150, 100, 65, 350, 99, 200, 150, 90, 120, 75, 175, 125, 275, 299, 135, 83, 123, 55, 195, 80, 98, 140, 265, 249, 105, 100, 121, 45, 100, 140, 71, 130, 199, 69, 68, 130, 195, 64, 140, 159, 189, 250, 239, 305, 155, 60, 135, 120, 150, 140, 135, 250, 250, 500, 225, 125, 92, 175, 99, 195, 140, 135, 500, 80, 120, 65, 99, 36, 37, 37, 175, 205, 285, 59, 36, 99, 39, 60, 105, 135, 390, 70, 60, 100, 70, 110, 60, 90, 68, 115, 75, 129, 130, 95, 75, 175, 190, 49, 212, 95, 140, 135, 150, 190, 124, 135, 122, 109, 85, 145, 195, 250, 125, 150, 70, 90, 65, 500, 250, 125, 200, 229, 90, 110, 59, 195, 169, 113, 250, 115, 55, 69, 150, 169, 179, 150, 135, 350, 120, 71, 349, 349, 165, 249, 100, 200, 169, 185, 65, 130, 199, 225, 179, 150, 139, 95, 79, 150, 90, 120, 80, 175, 120, 140, 200, 165, 125, 130, 65, 123, 67, 50, 130, 100, 212, 190, 249, 70, 100, 60, 135, 175, 120, 169, 165, 90, 225, 95, 55, 85, 199, 211, 145, 65, 99, 110, 80, 150, 110, 290, 190, 200, 165, 110, 395, 99, 39, 189, 85, 260, 122, 165, 97, 170, 125, 130, 225, 50, 170, 132, 250, 141, 64, 249, 79, 185, 120, 495, 375, 175, 150, 259, 96, 145, 95, 250, 295, 175, 451, 165, 77, 250, 129, 98, 95, 55, 300, 42, 125, 175, 75, 72, 165, 165, 75, 130, 139, 88, 80, 150, 200, 200, 42, 90, 295, 450, 130, 89, 198, 99, 46, 140, 500, 75, 250, 60, 75, 350, 205, 219, 60, 185, 190, 105, 250, 65, 75, 37, 85, 79, 85, 170, 115, 89, 49, 91, 400, 150, 97, 100, 179, 500, 429, 189, 120, 300, 107, 95, 199, 120, 199, 125, 70, 75, 100, 99, 250, 350, 170, 165, 99, 255, 169, 99, 169, 160, 215, 130, 110, 150, 65, 75, 149, 89, 50, 43, 42, 85, 139, 105, 265, 149, 68, 99, 75, 100, 160, 190, 67, 190, 248, 100, 95, 150, 145, 41, 120, 50, 157, 195, 70, 185, 145, 50, 185, 250, 230, 100, 40, 200, 80, 79, 95, 300, 100, 80, 110, 172, 199, 199, 100, 55, 75, 146, 116, 150, 120, 199, 150, 69, 230, 125, 79, 130, 239, 75, 220, 80, 288, 135, 225, 110, 100, 130, 89, 200, 80, 50, 135, 90, 270, 110, 145, 179, 55, 110, 325, 75, 300, 130, 190, 200, 180, 350, 195, 300, 75, 100, 85, 80, 55, 438, 110, 200, 279, 137, 280, 199, 71, 42, 180, 226, 85, 135, 79, 154, 199, 246, 100, 295, 119, 125, 129, 140, 115, 200, 199, 199, 199, 69, 185, 81, 199, 199, 199, 199, 199, 349, 249, 299, 179, 54, 110, 220, 89, 170, 495, 80, 98, 125, 64, 154, 139, 75, 325, 58, 250, 125, 70, 189, 130, 145, 101, 95, 375, 153, 92, 80, 300, 145, 88, 155, 73, 225, 85, 99, 200, 485, 310, 109, 167, 147, 195, 199, 65, 55, 50, 60, 99, 130, 290, 350, 50, 96, 45, 85, 34, 250, 190, 75, 93, 60, 65, 300, 150, 299, 60, 88, 60, 99, 110, 135, 110, 165, 402, 85, 75, 139, 70, 50, 250, 64, 300, 100, 250, 200, 140, 130, 90, 90, 97, 91, 125, 180, 100, 175, 65, 240, 300, 385, 47, 110, 75, 100, 165, 300, 140, 120, 175, 275, 179, 189, 219, 450, 249, 65, 250, 139, 209, 120, 70, 90, 199, 157, 199, 192, 199, 150, 199, 199, 199, 105, 135, 199, 125, 60, 85, 300, 75, 55, 44, 55, 35, 70, 130, 52, 250, 100, 130, 140, 75, 150, 90, 150, 180, 135, 65, 99, 149, 59, 75, 75, 75, 109, 225, 86, 52, 100, 99, 89, 135, 199, 89, 110, 120, 59, 49, 79, 135, 185, 225, 245, 115, 325, 95, 120, 499, 75, 109, 160, 219, 159, 180, 150, 106, 299, 179, 165, 500, 250, 87, 79, 75, 200, 80, 115, 115, 120, 125, 387, 95, 99, 121, 350, 75, 95, 89, 195, 70, 100, 140, 189, 178, 145, 125, 265, 77, 60, 129, 199, 92, 185, 110, 65, 135, 115, 175, 72, 80, 125, 120, 94, 56, 549, 190, 129, 85, 145, 200, 125, 50, 160, 180, 100, 70, 120, 110, 105, 250, 165, 99, 125, 75, 45, 159, 45, 104, 225, 100, 90, 75, 135, 125, 225, 85, 200, 250, 90, 130, 90, 298, 300, 125, 145, 147, 123, 88, 215, 225, 269, 145, 75, 229, 300, 100, 75, 225, 120, 160, 125, 95, 119, 275, 160, 500, 175, 87, 160, 125, 90, 200, 250, 99, 325, 99, 325, 129, 130, 190, 55, 60, 250, 275, 125, 150, 70, 138, 265, 145, 208, 200, 110, 58, 55, 350, 150, 77, 125, 395, 189, 49, 90, 100, 299, 75, 69, 90, 94, 80, 100, 39, 250, 55, 200, 142, 70, 260, 225, 59, 65, 99, 239, 50, 65, 139, 174, 315, 75, 210, 55, 229, 150, 129, 100, 200, 89, 65, 68, 235, 100, 311, 39, 100, 210, 55, 65, 165, 89, 500, 145, 110, 180, 115, 82, 70, 155, 100, 89, 89, 99, 155, 85, 80, 135, 150, 380, 450, 145, 80, 225, 99, 125, 80, 100, 55, 328, 142, 350, 300, 105, 125, 225, 92, 185, 226, 50, 80, 99, 68, 102, 220, 199, 165, 150, 385, 499, 85, 160, 249, 80, 120, 35, 169, 220, 85, 79, 90, 99, 50, 46, 325, 68, 198, 100, 175, 130, 180, 209, 150, 104, 175, 80, 68, 72, 107, 150, 45, 49, 349, 185, 145, 96, 120, 160, 349, 350, 125, 350, 150, 200, 99, 130, 150, 90, 95, 70, 82, 250, 90, 75, 160, 115, 150, 89, 69, 170, 375, 118, 135, 250, 200, 150, 50, 100, 265, 90, 36, 250, 220, 93, 275, 109, 450, 165, 80, 295, 280, 300, 99, 175, 225, 230, 90, 102, 59, 195, 150, 170, 217, 185, 58, 189, 88, 195, 110, 79, 110, 200, 69, 55, 135, 500, 135, 90, 160, 65, 210, 399, 300, 185, 220, 121, 120, 152, 250, 99, 104, 120, 295, 90, 197, 145, 90, 125, 190, 76, 50, 107, 80, 150, 151, 130, 180, 95, 79, 60, 133, 120, 120, 165, 165, 100, 80, 96, 159, 50, 75, 155, 150, 92, 75, 69, 115, 120, 215, 195, 175, 80, 48, 200, 275, 72, 250, 75, 125, 229, 175, 140, 54, 75, 110, 165, 55, 55, 300, 275, 77, 60, 129, 100, 120, 500, 179, 149, 180, 100, 180, 128, 260, 65, 200, 249, 300, 120, 120, 125, 99, 115, 275, 198, 199, 125, 80, 130, 35, 90, 250, 200, 64, 65, 90, 50, 136, 400, 125, 165, 105, 148, 120, 99, 175, 85, 80, 119, 89, 195, 225, 165, 60, 165, 80, 52, 160, 110, 60, 299, 200, 120, 65, 263, 120, 150, 60, 350, 71, 433, 79, 140, 61, 100, 250, 145, 45, 73, 150, 234, 150, 65, 195, 90, 109, 200, 90, 100, 85, 87, 95, 349, 99, 160, 149, 60, 285, 72, 150, 200, 79, 197, 75, 127, 110, 69, 99, 139, 113, 250, 295, 220, 75, 100, 199, 200, 140, 50, 45, 109, 108, 42, 141, 355, 80, 250, 75, 88, 65, 58, 75, 100, 167, 65, 125, 95, 54, 89, 92, 199, 179, 65, 55, 129, 134, 35, 250, 249, 62, 119, 179, 220, 198, 155, 199, 95, 550, 60, 380, 84, 165, 105, 134, 68, 73, 150, 100, 75, 120, 85, 55, 95, 72, 69, 78, 220, 230, 150, 80, 150, 150, 130, 70, 120, 75, 100, 69, 399, 299, 100, 68, 175, 330, 425, 240, 75, 210, 175, 85, 120, 120, 75, 495, 65, 39, 93, 146, 120, 79, 100, 120, 150, 144, 350, 85, 195, 200, 169, 95, 375, 168, 50, 129, 245, 199, 199, 99, 160, 65, 70, 80, 100, 70, 200, 66, 200, 95, 140, 65, 106, 249, 120, 52, 75, 195, 171, 185, 55, 50, 120, 210, 133, 73, 350, 259, 97, 199, 125, 100, 39, 125, 150, 170, 199, 125, 155, 120, 220, 90, 61, 179, 108, 99, 175, 110, 250, 100, 200, 89, 400, 149, 500, 95, 125, 80, 105, 39, 49, 187, 55, 250, 125, 100, 175, 50, 133, 155, 140, 80, 103, 70, 75, 55, 50, 390, 82, 52, 115, 299, 175, 45, 165, 105, 200, 65, 100, 312, 195, 100, 155, 165, 120, 38, 90, 85, 55, 350, 59, 280, 69, 230, 200, 150, 75, 120, 140, 200, 225, 145, 60, 119, 189, 190, 69, 70, 155, 149, 160, 100, 220, 85, 135, 45, 225, 100, 145, 210, 195, 95, 140, 95, 295, 250, 60, 150, 159, 78, 210, 60, 220, 350, 65, 225, 82, 75, 105, 115, 150, 65, 150, 101, 130, 175, 115, 128, 116, 192, 150, 163, 40, 200, 158, 115, 85, 173, 250, 465, 275, 195, 63, 36, 130, 200, 85, 45, 45, 79, 149, 200, 85, 60, 160, 95, 80, 250, 349, 165, 119, 240, 79, 215, 49, 190, 99, 68, 185, 225, 81, 199, 55, 340, 135, 85, 65, 100, 109, 290, 148, 57, 150, 60, 60, 45, 60, 125, 60, 75, 121, 89, 300, 110, 99, 170, 90, 179, 80, 65, 69, 42, 70, 155, 135, 120, 135, 47, 69, 100, 51, 60, 70, 130, 70, 200, 150, 130, 68, 79, 149, 250, 175, 40, 55, 99, 240, 400, 235, 130, 96, 63, 150, 200, 90, 269, 80, 400, 349, 495, 85, 85, 109, 175, 150, 80, 150, 175, 107, 80, 75, 130, 260, 36, 140, 145, 120, 75, 60, 69, 95, 300, 131, 120, 100, 100, 160, 60, 75, 45, 65, 120, 80, 100, 250, 235, 85, 195, 145, 289, 120, 149, 100, 166, 99, 150, 44, 195, 100, 60, 62, 99, 90, 88, 125, 74, 176, 62, 51, 249, 200, 240, 100, 125, 149, 170, 150, 125, 68, 90, 65, 50, 65, 200, 65, 58, 65, 185, 115, 115, 140, 62, 95, 100, 113, 108, 62, 95, 200, 165, 60, 80, 100, 110, 50, 79, 140, 339, 55, 81, 191, 139, 500, 120, 60, 295, 100, 49, 150, 120, 175, 107, 98, 47, 170, 150, 63, 110, 329, 49, 49, 165, 160, 38, 170, 105, 50, 100, 160, 145, 51, 150, 180, 225, 250, 56, 70, 70, 125, 399, 157, 145, 75, 280, 220, 190, 200, 77, 35, 199, 140, 124, 295, 160, 349, 98, 76, 230, 60, 118, 125, 195, 85, 55, 155, 99, 140, 85, 75, 53, 150, 179, 135, 200, 200, 100, 134, 100, 50, 50, 400, 115, 235, 125, 250, 97, 189, 100, 49, 84, 165, 120, 195, 89, 62, 130, 75, 64, 150, 100, 190, 98, 150, 99, 159, 70, 91, 325, 149, 200, 169, 249, 85, 81, 199, 88, 170, 130, 135, 65, 165, 78, 350, 160, 225, 170, 349, 65, 420, 119, 97, 191, 187, 172, 275, 99, 334, 60, 145, 75, 130, 295, 300, 120, 50, 56, 191, 135, 195, 75, 99, 350, 40, 130, 225, 225, 38, 200, 235, 75, 249, 120, 50, 85, 78, 110, 50, 52, 75, 69, 125, 85, 499, 60, 95, 105, 55, 289, 70, 130, 125, 150, 46, 100, 90, 90, 130, 499, 45, 70, 59, 160, 195, 96, 75, 195, 200, 139, 190, 95, 350, 80, 120, 42, 116, 60, 425, 225, 159, 150, 199, 70, 110, 60, 50, 120, 60, 145, 83, 100, 200, 50, 70, 175, 149, 125, 58, 160, 150, 131, 250, 70, 149, 109, 185, 138, 150, 80, 75, 300, 176, 47, 40, 89, 75, 110, 85, 72, 85, 325, 125, 200, 195, 189, 182, 105, 240, 185, 160, 250, 35, 85, 550, 80, 175, 95, 158, 85, 209, 150, 70, 73, 85, 95, 125, 89, 50, 75, 60, 45, 130, 70, 125, 140, 120, 99, 300, 47, 115, 90, 199, 110, 100, 90, 40, 133, 130, 79, 200, 175, 200, 300, 135, 189, 65, 179, 49, 140, 115, 190, 99, 110, 109, 64, 175, 47, 60, 48, 100, 105, 138, 129, 170, 139, 94, 115, 499, 79, 200, 152, 50, 212, 108, 89, 89, 65, 239, 99, 80, 55, 160, 100, 225, 275, 200, 190, 117, 80, 99, 70, 44, 125, 130, 130, 125, 199, 155, 248, 85, 85, 80, 79, 55, 65, 285, 119, 137, 190, 80, 120, 95, 90, 75, 103, 125, 150, 148, 120, 99, 69, 200, 55, 175, 240, 95, 150, 150, 179, 105, 90, 53, 41, 135, 84, 290, 35, 110, 350, 60, 275, 142, 38, 200, 225, 135, 72, 59, 350, 75, 70, 99, 42, 60, 125, 99, 99, 165, 250, 135, 58, 95, 125, 147, 300, 350, 102, 95, 65, 165, 181, 110, 65, 155, 50, 85, 120, 75, 55, 200, 75, 150, 60, 240, 150, 269, 112, 250, 350, 80, 295, 160, 399, 150, 60, 219, 119, 190, 140, 125, 144, 100, 115, 110, 140, 94, 50, 131, 175, 299, 145, 145, 175, 109, 150, 399, 48, 75, 55, 75, 465, 151, 199, 45, 160, 36, 235, 225, 300, 35, 79, 82, 82, 215, 147, 145, 65, 78, 120, 120, 95, 90, 95, 100, 350, 188, 80, 175, 495, 250, 115, 55, 93, 199, 70, 125, 169, 150, 61, 40, 150, 65, 190, 79, 225, 185, 100, 85, 75, 85, 98, 262, 145, 280, 210, 70, 100, 59, 199, 219, 100, 175, 220, 40, 140, 105, 110, 131, 265, 54, 53, 99, 65, 120, 180, 67, 111, 90, 259, 89, 129, 69, 75, 250, 120, 129, 199, 450, 350, 160, 45, 70, 260, 100, 125, 195, 58, 75, 200, 75, 95, 99, 275, 162, 285, 120, 120, 210, 160, 110, 138, 90, 45, 80, 72, 95, 75, 70, 160, 175, 110, 175, 99, 100, 144, 171, 99, 270, 160, 65, 99, 125, 300, 112, 100, 60, 232, 140, 168, 100, 95, 175, 220, 178, 85, 35, 129, 55, 69, 68, 69, 300, 175, 59, 59, 169, 120, 155, 165, 60, 190, 150, 150, 120, 349, 59, 99, 59, 110, 73, 179, 102, 62, 140, 300, 299, 104, 49, 80, 89, 125, 345, 150, 100, 120, 149, 145, 390, 60, 190, 80, 55, 275, 250, 100, 66, 65, 220, 159, 70, 49, 47, 299, 79, 115, 229, 115, 165, 67, 68, 85, 170, 95, 45, 178, 140, 149, 89, 108, 138, 115, 69, 269, 160, 150, 121, 95, 99, 40, 89, 50, 55, 224, 120, 59, 135, 175, 250, 156, 75, 79, 104, 280, 80, 136, 550, 190, 199, 75, 100, 125, 75, 99, 35, 51, 188, 90, 279, 350, 125, 85, 48, 56, 84, 155, 300, 140, 120, 99, 240, 72, 45, 250, 100, 175, 200, 59, 420, 120, 295, 48, 99, 129, 160, 142, 120, 130, 85, 69, 150, 87, 249, 65, 175, 79, 194, 150, 241, 80, 120, 155, 150, 140, 90, 150, 135, 140, 130, 150, 115, 130, 380, 115, 125, 65, 110, 135, 200, 212, 40, 80, 95, 185, 100, 149, 139, 226, 74, 195, 275, 310, 145, 75, 99, 250, 104, 250, 150, 195, 350, 75, 80, 96, 90, 79, 224, 35, 70, 85, 110, 65, 200, 249, 62, 50, 62, 50, 71, 75, 115, 82, 75, 60, 200, 215, 100, 38, 159, 64, 125, 120, 76, 175, 110, 75, 80, 110, 89, 110, 96, 75, 185, 49, 440, 220, 99, 85, 98, 84, 65, 160, 115, 59, 119, 120, 439, 99, 199, 99, 195, 180, 100, 115, 115, 180, 45, 300, 140, 123, 200, 100, 250, 85, 100, 109, 159, 260, 87, 43, 199, 90, 195, 185, 400, 200, 100, 225, 450, 80, 89, 179, 90, 35, 86, 95, 116, 80, 110, 390, 55, 75, 120, 143, 250, 99, 150, 55, 175, 69, 184, 145, 100, 44, 225, 199, 60, 175, 199, 65, 190, 107, 150, 75, 45, 179, 110, 245, 100, 61, 275, 250, 120, 135, 199, 75, 75, 75, 90, 80, 115, 60, 175, 125, 185, 56, 64, 300, 455, 37, 193, 53, 161, 99, 420, 195, 81, 65, 70, 400, 170, 175, 41, 149, 87, 300, 139, 90, 118, 125, 122, 280, 215, 130, 201, 119, 103, 72, 169, 240, 180, 150, 120, 345, 95, 150, 95, 90, 225, 240, 150, 44, 299, 120, 525, 88, 200, 100, 209, 240, 90, 73, 90, 200, 94, 199, 85, 195, 173, 159, 85, 120, 225, 175, 130, 38, 53, 125, 160, 58, 149, 200, 100, 50, 97, 84, 275, 99, 70, 149, 399, 145, 59, 70, 249, 70, 45, 75, 70, 159, 499, 55, 228, 67, 119, 189, 450, 45, 175, 83, 120, 35, 140, 45, 90, 79, 100, 66, 140, 98, 140, 195, 60, 150, 40, 130, 75, 248, 450, 120, 250, 80, 140, 120, 45, 100, 175, 130, 175, 85, 175, 105, 80, 150, 195, 249, 140, 180, 90, 120, 85, 174, 150, 295, 180, 172, 130, 52, 220, 37, 85, 249, 150, 119, 90, 200, 97, 399, 151, 200, 82, 130, 69, 150, 150, 100, 195, 251, 200, 100, 140, 146, 250, 499, 80, 220, 102, 120, 170, 149, 180, 89, 199, 72, 80, 99, 125, 150, 106, 250, 150, 100, 189, 120, 100, 149, 480, 100, 142, 135, 135, 80, 80, 87, 450, 275, 150, 50, 79, 60, 45, 120, 145, 175, 137, 86, 345, 250, 105, 130, 90, 150, 150, 225, 80, 150, 120, 53, 115, 175, 150, 162, 95, 55, 117, 175, 75, 189, 150, 45, 190, 130, 79, 150, 100, 115, 300, 39, 200, 250, 120, 105, 100, 85, 320, 149, 400, 72, 115, 325, 100, 150, 95, 290, 75, 140, 100, 80, 125, 250, 50, 395, 100, 79, 52, 98, 120, 345, 50, 350, 57, 120, 125, 145, 164, 210, 115, 199, 272, 75, 69, 179, 106, 60, 120, 80, 75, 88, 45, 75, 79, 55, 45, 80, 110, 199, 94, 400, 60, 175, 100, 50, 199, 54, 130, 151, 80, 110, 60, 110, 73, 177, 90, 190, 105, 150, 65, 35, 185, 128, 299, 169, 109, 99, 239, 100, 124, 69, 225, 119, 220, 150, 51, 150, 91, 100, 60, 255, 94, 179, 135, 50, 350, 150, 375, 150, 170, 275, 150, 140, 200, 99, 195, 89, 65, 210, 159, 55, 129, 300, 79, 64, 110, 55, 55, 85, 130, 50, 100, 145, 100, 200, 80, 200, 120, 180, 379, 199, 149, 98, 250, 60, 149, 85, 90, 47, 180, 110, 170, 210, 65, 225, 170, 62, 125, 106, 93, 85, 224, 145, 40, 135, 97, 225, 215, 99, 60, 303, 111, 60, 320, 185, 100, 150, 130, 130, 125, 190, 70, 80, 100, 200, 60, 100, 90, 61, 100, 340, 75, 130, 140, 112, 160, 165, 80, 160, 150, 49, 150, 79, 225, 90, 285, 300, 55, 80, 90, 325, 55, 208, 156, 85, 200, 180, 325, 160, 130, 110, 150, 149, 215, 155, 50, 65, 112, 250, 65, 99, 395, 185, 45, 55, 165, 285, 220, 75, 120, 100, 95, 119, 200, 48, 65, 79, 105, 420, 95, 290, 180, 380, 45, 300, 110, 105, 45, 80, 89, 129, 250, 250, 175, 40, 85, 219, 130, 149, 100, 289, 67, 221, 75, 112, 175, 120, 150, 369, 81, 89, 199, 45, 149, 65, 150, 199, 395, 130, 175, 90, 350, 250, 250, 180, 49, 91, 100, 152, 110, 135, 75, 250, 200, 75, 88, 305, 220, 150, 49, 140, 86, 225, 75, 150, 199, 95, 200, 200, 175, 129, 200, 60, 115, 135, 59, 196, 128, 200, 180, 60, 40, 250, 80, 85, 70, 55, 100, 73, 65, 162, 275, 200, 250, 500, 120, 55, 59, 99, 155, 200, 60, 85, 150, 45, 200, 120, 195, 76, 500, 179, 200, 50, 40, 62, 239, 179, 250, 400, 98, 89, 185, 125, 180, 60, 115, 200, 179, 109, 124, 159, 85, 109, 110, 65, 112, 79, 200, 55, 50, 129, 195, 79, 65, 123, 70, 100, 69, 450, 125, 75, 154, 60, 279, 80, 84, 180, 100, 86, 189, 150, 149, 100, 145, 133, 75, 100, 99, 132, 72, 125, 102, 129, 107, 250, 90, 90, 200, 160, 124, 95, 129, 110, 92, 175, 134, 400, 169, 95, 90, 60, 180, 84, 98, 90, 134, 119, 141, 199, 108, 150, 175, 90, 45, 63, 100, 110, 395, 70, 399, 145, 59, 50, 145, 245, 149, 50, 150, 60, 165, 53, 38, 49, 47, 120, 175, 129, 105, 275, 210, 65, 52, 100, 91, 124, 550, 70, 150, 176, 99, 130, 109, 75, 95, 50, 100, 68, 104, 65, 55, 250, 85, 90, 90, 90, 199, 275, 150, 140, 60, 36, 85, 85, 45, 92, 75, 99, 100, 115, 175, 112, 450, 103, 150, 129, 145, 90, 100, 41, 145, 139, 117, 50, 80, 100, 225, 70, 80, 70, 40, 290, 235, 200, 110, 120, 142, 105, 100, 102, 152, 150, 95, 67, 65, 79, 55, 200, 160, 80, 159, 90, 45, 100, 125, 80, 90, 140, 52, 200, 40, 55, 69, 200, 100, 53, 425, 40, 40, 65, 109, 60, 180, 95, 140, 155, 105, 45, 330, 100, 49, 65, 70, 180, 130, 225, 85, 99, 95, 400, 99, 85, 90, 85, 130, 95, 149, 225, 135, 140, 200, 159, 200, 155, 71, 75, 275, 250, 200, 90, 50, 124, 50, 75, 90, 130, 140, 200, 350, 100, 225, 65, 145, 189, 265, 409, 95, 175, 55, 200, 200, 69, 135, 325, 95, 117, 59, 85, 55, 80, 115, 78, 150, 195, 142, 55, 97, 70, 70, 155, 68, 68, 150, 150, 100, 110, 150, 218, 430, 79, 120, 200, 120, 200, 75, 175, 76, 75, 400, 75, 189, 55, 80, 69, 100, 100, 300, 53, 179, 130, 120, 150, 105, 150, 200, 39, 67, 200, 129, 55, 100, 240, 150, 299, 160, 199, 100, 45, 44, 185, 100, 111, 99, 75, 103, 130, 109, 100, 155, 60, 195, 69, 72, 300, 119, 100, 199, 75, 100, 125, 95, 295, 149, 150, 100, 385, 87, 180, 59, 95, 130, 120, 113, 60, 40, 250, 149, 169, 105, 42, 200, 160, 155, 151, 200, 80, 119, 45, 115, 65, 87, 110, 80, 63, 200, 185, 250, 130, 185, 75, 240, 65, 195, 200, 120, 180, 53, 200, 100, 86, 225, 40, 70, 35, 250, 255, 290, 115, 299, 160, 175, 120, 179, 74, 68, 235, 100, 270, 200, 60, 155, 95, 125, 118, 80, 210, 150, 135, 118, 110, 70, 43, 140, 116, 159, 135, 39, 59, 66, 130, 100, 50, 185, 54, 100, 180, 115, 350, 165, 350, 200, 175, 50, 190, 110, 414, 150, 175, 155, 129, 50, 499, 80, 47, 95, 249, 150, 77, 70, 100, 87, 245, 300, 55, 120, 40, 115, 37, 240, 70, 149, 100, 200, 99, 220, 250, 103, 108, 75, 78, 75, 152, 150, 320, 220, 99, 120, 100, 199, 100, 75, 84, 100, 75, 93, 140, 200, 200, 200, 100, 120, 109, 126, 50, 325, 135, 52, 124, 59, 215, 240, 150, 83, 160, 200, 50, 87, 250, 162, 147, 149, 65, 250, 160, 150, 64, 500, 150, 110, 145, 95, 185, 500, 115, 195, 105, 67, 75, 100, 125, 350, 150, 200, 270, 184, 275, 171, 200, 165, 85, 170, 70, 125, 275, 120, 225, 119, 175, 155, 100, 70, 95, 450, 215, 60, 75, 99, 300, 175, 195, 50, 175, 120, 54, 345, 225, 151, 110, 280, 99, 350, 120, 89, 120, 85, 220, 125, 189, 81, 45, 62, 330, 80, 65, 125, 165, 90, 120, 115, 55, 55, 400, 200, 111, 175, 150, 52, 88, 425, 175, 105, 265, 60, 45, 89, 200, 149, 80, 125, 78, 65, 350, 289, 158, 50, 234, 69, 135, 89, 300, 250, 70, 140, 175, 160, 57, 90, 89, 90, 200, 100, 68, 170, 40, 500, 145, 250, 288, 245, 80, 125, 166, 330, 60, 130, 45, 165, 155, 158, 169, 139, 125, 70, 135, 99, 250, 100, 128, 121, 160, 275, 180, 189, 99, 200, 145, 100, 240, 90, 220, 100, 59, 78, 75, 78, 250, 44, 69, 90, 125, 78, 99, 74, 130, 105, 145, 90, 215, 100, 92, 185, 160, 300, 75, 370, 425, 200, 125, 179, 46, 150, 52, 80, 120, 300, 110, 200, 75, 200, 300, 129, 125, 185, 158, 316, 175, 97, 175, 72, 175, 85, 150, 225, 400, 125, 200, 89, 165, 285, 150, 70, 300, 220, 249, 69, 120, 69, 54, 50, 51, 99, 290, 49, 115, 78, 125, 135, 205, 95, 55, 47, 39, 349, 250, 290, 85, 170, 146, 99, 150, 240, 500, 48, 129, 180, 70, 240, 100, 122, 400, 47, 140, 55, 110, 175, 80, 150, 200, 50, 99, 60, 225, 175, 60, 255, 75, 190, 495, 98, 215, 200, 100, 110, 115, 75, 289, 95, 197, 375, 56, 225, 70, 264, 199, 149, 142, 299, 50, 160, 127, 110, 69, 175, 179, 144, 150, 109, 75, 135, 38, 195, 146, 318, 140, 85, 170, 100, 350, 199, 77, 80, 79, 550, 155, 275, 119, 85, 90, 135, 90, 150, 38, 87, 210, 80, 250, 175, 65, 140, 129, 159, 249, 151, 79, 125, 135, 151, 59, 273, 70, 95, 399, 96, 110, 69, 85, 150, 170, 125, 130, 145, 500, 95, 150, 56, 60, 85, 80, 100, 54, 113, 200, 75, 200, 110, 500, 200, 200, 140, 45, 200, 308, 270, 365, 99, 175, 220, 80, 230, 60, 120, 45, 100, 100, 230, 225, 120, 99, 122, 150, 140, 150, 38, 200, 50, 45, 90, 85, 108, 129, 275, 148, 160, 130, 180, 50, 145, 94, 180, 80, 97, 90, 70, 120, 120, 59, 91, 184, 45, 150, 139, 65, 65, 150, 115, 299, 80, 80, 135, 80, 69, 75, 94, 192, 50, 58, 120, 69, 50, 125, 50, 85, 59, 130, 104, 95, 199, 105, 34, 120, 87, 125, 170, 250, 55, 80, 95, 150, 140, 150, 159, 159, 65, 100, 85, 175, 175, 260, 80, 69, 100, 85, 95, 160, 49, 65, 150, 115, 113, 110, 75, 250, 50, 81, 69, 125, 65, 175, 49, 191, 250, 216, 119, 118, 95, 110, 170, 99, 172, 75, 50, 77, 125, 75, 350, 55, 99, 545, 70, 150, 55, 100, 100, 95, 200, 190, 65, 400, 95, 197, 395, 100, 200, 165, 145, 75, 180, 73, 87, 74, 65, 199, 160, 175, 195, 99, 175, 99, 100, 199, 199, 100, 45, 72, 129, 100, 85, 70, 100, 160, 185, 162, 80, 45, 129, 55, 68, 120, 55, 50, 150, 140, 136, 125, 82, 150, 90, 117, 71, 390, 58, 50, 150, 150, 80, 115, 95, 85, 180, 149, 200, 69, 85, 117, 219, 100, 320, 95, 110, 105, 134, 45, 200, 110, 150, 149, 85, 200, 170, 40, 95, 95, 350, 165, 120, 130, 40, 130, 120, 90, 120, 115, 150, 170, 124, 104, 99, 158, 115, 55, 72, 170, 150, 39, 49, 39, 200, 185, 200, 110, 275, 105, 260, 175, 90, 125, 239, 195, 53, 99, 325, 135, 85, 68, 45, 87, 89, 150, 124, 125, 145, 75, 87, 50, 150, 95, 200, 120, 325, 165, 140, 169, 190, 39, 165, 79, 125, 349, 40, 76, 45, 80, 265, 65, 90, 115, 45, 50, 72, 50, 57, 225, 120, 249, 225, 95, 90, 101, 246, 120, 150, 119, 150, 80, 189, 90, 200, 120, 149, 130, 35, 139, 100, 65, 200, 99, 115, 149, 135, 150, 105, 75, 175, 135, 97, 98, 87, 150, 50, 185, 225, 151, 75, 150, 145, 250, 170, 145, 200, 50, 250, 229, 129, 168, 80, 104, 100, 95, 95, 200, 100, 195, 299, 45, 200, 70, 50, 42, 116, 200, 129, 125, 55, 200, 165, 199, 150, 90, 120, 40, 75, 68, 75, 45, 45, 65, 75, 84, 130, 50, 150, 95, 300, 113, 145, 90, 95, 118, 75, 225, 81, 190, 75, 59, 99, 275, 120, 125, 75, 117, 80, 60, 103, 65, 45, 70, 90, 225, 125, 175, 195, 130, 96, 129, 200, 95, 189, 450, 264, 45, 150, 540, 230, 65, 160, 138, 155, 39, 115, 110, 100, 225, 125, 150, 199, 250, 210, 180, 129, 90, 50, 140, 150, 233, 170, 60, 200, 150, 140, 60, 130, 89, 150, 240, 88, 75, 500, 125, 75, 130, 170, 300, 115, 93, 119, 180, 226, 155, 115, 50, 200, 157, 145, 95, 115, 65, 250, 95, 185, 55, 350, 170, 100, 36, 60, 125, 120, 90, 129, 78, 99, 50, 47, 150, 200, 125, 60, 100, 99, 75, 140, 90, 59, 111, 80, 50, 300, 90, 119, 69, 185, 100, 85, 135, 169, 38, 90, 45, 149, 200, 65, 174, 89, 150, 58, 103, 383, 40, 76, 170, 45, 199, 99, 39, 60, 130, 200, 105, 115, 145, 75, 250, 80, 120, 100, 125, 132, 225, 175, 225, 215, 300, 130, 110, 75, 36, 299, 200, 110, 160, 152, 145, 120, 84, 160, 150, 180, 68, 155, 75, 80, 72, 52, 125, 85, 58, 100, 65, 300, 40, 110, 85, 158, 100, 64, 395, 120, 51, 149, 65, 70, 170, 150, 75, 100, 38, 200, 145, 150, 200, 125, 175, 180, 175, 175, 50, 109, 67, 57, 77, 80, 85, 86, 120, 140, 300, 90, 70, 90, 200, 135, 37, 60, 419, 130, 180, 160, 125, 65, 79, 115, 100, 90, 135, 50, 71, 80, 103, 250, 219, 225, 99, 35, 90, 47, 75, 170, 150, 119, 40, 85, 99, 79, 60, 115, 90, 65, 65, 131, 150, 55, 70, 160, 95, 99, 500, 35, 50, 77, 380, 199, 150, 145, 70, 120, 86, 139, 85, 94, 116, 72, 200, 72, 100, 80, 92, 50, 135, 160, 129, 75, 119, 99, 120, 73, 500, 225, 275, 50, 40, 115, 150, 200, 75, 98, 199, 109, 110, 59, 95, 159, 225, 195, 96, 73, 88, 90, 99, 35, 175, 395, 195, 49, 250, 150, 100, 55, 275, 80, 89, 280, 70, 75, 80, 41, 195, 250, 96, 98, 140, 175, 120, 89, 178, 210, 150, 149, 225, 63, 106, 165, 75, 39, 39, 70, 100, 125, 110, 145, 112, 69, 300, 260, 49, 215, 200, 120, 310, 70, 195, 110, 75, 45, 165, 150, 80, 180, 80, 60, 149, 53, 200, 160, 140, 199, 190, 125, 145, 150, 95, 99, 130, 56, 450, 75, 240, 129, 45, 259, 75, 37, 210, 199, 189, 58, 60, 190, 139, 125, 94, 100, 128, 160, 160, 110, 285, 75, 133, 149, 200, 110, 375, 95, 94, 120, 150, 160, 132, 102, 85, 142, 70, 199, 100, 123, 175, 100, 57, 39, 107, 69, 137, 65, 66, 77, 110, 64, 90, 146, 189, 285, 140, 97, 180, 199, 220, 180, 88, 170, 120, 105, 110, 55, 150, 180, 110, 160, 215, 75, 120, 198, 60, 170, 248, 100, 180, 60, 83, 45, 135, 230, 180, 175, 110, 160, 115, 169, 87, 75, 130, 115, 50, 200, 55, 125, 160, 39, 89, 85, 50, 229, 130, 149, 120, 45, 56, 75, 115, 90, 109, 49, 100, 295, 245, 79, 60, 125, 55, 425, 150, 49, 97, 115, 200, 250, 200, 160, 90, 239, 290, 150, 55, 380, 120, 103, 64, 195, 70, 150, 150, 105, 360, 165, 325, 105, 100, 129, 229, 64, 100, 99, 300, 84, 125, 200, 80, 180, 105, 100, 90, 160, 250, 115, 130, 159, 110, 60, 57, 180, 250, 92, 195, 47, 175, 165, 79, 345, 80, 300, 195, 165, 65, 149, 225, 495, 200, 125, 95, 135, 120, 160, 139, 69, 100, 71, 250, 70, 170, 125, 139, 199, 175, 120, 100, 100, 130, 50, 80, 227, 300, 130, 225, 149, 75, 115, 97, 275, 163, 55, 75, 247, 69, 150, 140, 205, 148, 299, 49, 150, 80, 68, 72, 97, 170, 80, 120, 250, 200, 180, 53, 200, 165, 45, 80, 125, 90, 40, 39, 125, 85, 39, 150, 100, 99, 167, 109, 127, 220, 45, 75, 120, 120, 108, 200, 55, 205, 150, 65, 150, 65, 75, 85, 58, 90, 120, 115, 105, 69, 125, 90, 125, 215, 107, 89, 175, 450, 98, 39, 160, 299, 75, 99, 165, 145, 239, 76, 60, 50, 250, 140, 125, 150, 220, 180, 260, 50, 400, 225, 100, 110, 95, 150, 100, 69, 110, 44, 155, 300, 67, 175, 149, 75, 100, 129, 150, 219, 185, 65, 55, 170, 150, 172, 79, 100, 272, 85, 249, 180, 60, 85, 260, 140, 185, 126, 399, 100, 225, 85, 147, 90, 500, 72, 41, 180, 67, 122, 105, 95, 100, 130, 107, 100, 85, 175, 125, 35, 119, 150, 55, 115, 99, 84, 129, 44, 100, 65, 99, 100, 225, 120, 139, 142, 140, 325, 350, 175, 89, 69, 40, 65, 160, 135, 109, 85, 189, 125, 140, 160, 115, 80, 198, 230, 450, 170, 120, 140, 70, 70, 45, 140, 79, 55, 275, 60, 195, 50, 125, 145, 99, 130, 115, 60, 199, 170, 385, 37, 80, 65, 56, 70, 105, 70, 150, 112, 80, 99, 110, 70, 140, 46, 180, 250, 75, 250, 250, 60, 95, 138, 550, 145, 100, 119, 48, 200, 64, 120, 50, 190, 235, 70, 60, 90, 125, 120, 55, 150, 175, 112, 200, 105, 70, 115, 99, 120, 90, 70, 52, 150, 170, 132, 90, 525, 249, 160, 125, 150, 50, 250, 40, 82, 93, 100, 65, 250, 130, 37, 69, 109, 200, 95, 50, 60, 44, 110, 65, 85, 175, 93, 375, 100, 258, 75, 118, 120, 154, 150, 150, 145, 250, 100, 155, 75, 50, 125, 200, 90, 125, 199, 89, 298, 110, 239, 300, 73, 70, 63, 200, 220, 95, 127, 195, 50, 58, 80, 73, 91, 100, 52, 70, 150, 107, 62, 49, 50, 129, 198, 185, 130, 100, 75, 90, 110, 65, 49, 400, 70, 250, 235, 35, 65, 180, 81, 225, 100, 75, 85, 99, 175, 125, 165, 200, 110, 315, 148, 150, 175, 59, 139, 50, 250, 105, 75, 130, 149, 200, 149, 60, 43, 145, 85, 275, 100, 105, 250, 175, 95, 150, 119, 165, 80, 149, 195, 130, 95, 125, 95, 50, 85, 80, 320, 90, 95, 85, 79, 54, 129, 90, 254, 159, 90, 85, 45, 275, 38, 100, 103, 99, 185, 86, 40, 165, 35, 175, 95, 70, 100, 150, 169, 99, 70, 130, 180, 80, 99, 99, 150, 73, 80, 80, 85, 100, 85, 65, 150, 200, 124, 50, 160, 200, 139, 49, 55, 260, 110, 110, 81, 60, 65, 130, 240, 130, 97, 88, 112, 105, 70, 75, 99, 90, 60, 125, 65, 159, 145, 255, 90, 150, 295, 75, 188, 130, 72, 45, 80, 94, 70, 150, 70, 42, 70, 180, 150, 105, 100, 225, 82, 145, 100, 100, 190, 200, 125, 300, 159, 180, 99, 120, 90, 59, 95, 65, 40, 250, 85, 71, 262, 70, 109, 50, 120, 200, 175, 119, 165, 40, 265, 130, 85, 70, 210, 46, 126, 88, 150, 175, 380, 500, 110, 175, 78, 250, 125, 200, 65, 205, 100, 60, 99, 50, 50, 68, 125, 175, 100, 125, 118, 52, 107, 99, 150, 65, 85, 155, 125, 59, 70, 149, 190, 80, 89, 123, 78, 62, 120, 80, 180, 145, 99, 300, 155, 250, 130, 65, 156, 50, 95, 45, 60, 100, 84, 70, 69, 62, 200, 100, 45, 170, 150, 99, 95, 95, 79, 120, 375, 120, 100, 84, 549, 230, 100, 70, 72, 140, 135, 120, 49, 240, 150, 89, 100, 75, 50, 60, 85, 65, 150, 169, 85, 350, 148, 100, 80, 72, 125, 34, 288, 167, 125, 100, 229, 100, 225, 174, 250, 105, 40, 50, 65, 75, 180, 69, 150, 125, 450, 300, 80, 500, 135, 80, 85, 150, 60, 249, 155, 65, 150, 96, 89, 80, 77, 60, 165, 70, 139, 50, 250, 177, 150, 90, 150, 125, 415, 50, 165, 175, 100, 99, 80, 140, 83, 99, 79, 100, 160, 45, 225, 90, 120, 150, 80, 275, 110, 245, 115, 54, 195, 120, 135, 150, 61, 63, 185, 55, 150, 80, 79, 140, 198, 117, 125, 510, 125, 65, 195, 115, 135, 350, 115, 45, 65, 135, 199, 195, 150, 60, 70, 100, 180, 105, 38, 70, 72, 75, 63, 58, 145, 45, 60, 139, 45, 99, 85, 85, 95, 150, 96, 230, 150, 225, 130, 115, 126, 174, 149, 150, 100, 150, 89, 308, 150, 55, 55, 139, 90, 249, 95, 135, 289, 97, 180, 75, 320, 60, 60, 144, 47, 100, 250, 115, 60, 135, 50, 149, 120, 150, 95, 190, 139, 130, 125, 45, 110, 120, 50, 100, 75, 129, 196, 140, 55, 175, 90, 281, 50, 65, 85, 38, 59, 40, 229, 70, 190, 150, 68, 109, 37, 124, 190, 160, 160, 49, 159, 150, 65, 50, 176, 90, 175, 125, 249, 87, 495, 120, 110, 159, 189, 59, 199, 52, 199, 54, 49, 250, 45, 50, 200, 38, 300, 55, 200, 99, 80, 250, 59, 57, 170, 50, 49, 65, 250, 200, 110, 250, 73, 125, 36, 99, 100, 71, 100, 85, 169, 149, 89, 44, 150, 125, 42, 300, 250, 70, 80, 65, 167, 130, 115, 94, 185, 195, 90, 499, 180, 300, 100, 134, 49, 47, 120, 185, 169, 130, 110, 122, 150, 129, 65, 115, 60, 150, 200, 110, 259, 150, 140, 70, 250, 58, 142, 120, 136, 55, 75, 103, 193, 200, 145, 200, 160, 45, 151, 98, 185, 150, 170, 119, 229, 80, 500, 120, 135, 524, 159, 73, 70, 168, 169, 85, 38, 48, 42, 80, 145, 72, 95, 45, 250, 73, 100, 50, 165, 184, 135, 160, 99, 85, 199, 195, 80, 69, 145, 52, 80, 300, 75, 180, 62, 250, 99, 120, 150, 150, 99, 200, 59, 84, 140, 90, 250, 190, 298, 99, 250, 95, 59, 115, 200, 75, 115, 146, 110, 450, 160, 149, 100, 220, 120, 99, 65, 50, 75, 85, 149, 53, 325, 45, 38, 120, 38, 60, 190, 125, 70, 130, 45, 110, 60, 125, 81, 105, 200, 75, 250, 400, 160, 110, 220, 135, 99, 89, 75, 475, 230, 125, 180, 80, 55, 135, 182, 209, 78, 48, 81, 80, 129, 100, 35, 100, 82, 128, 159, 101, 195, 160, 195, 475, 122, 45, 235, 275, 99, 125, 125, 165, 129, 150, 90, 175, 188, 80, 160, 100, 50, 70, 130, 180, 69, 62, 150, 118, 195, 75, 135, 450, 45, 250, 120, 125, 118, 100, 40, 225, 185, 225, 155, 165, 165, 149, 142, 59, 200, 125, 181, 90, 70, 150, 225, 240, 98, 100, 200, 150, 129, 65, 70, 200, 58, 180, 120, 244, 40, 135, 65, 140, 129, 112, 80, 149, 99, 50, 190, 70, 96, 118, 150, 350, 225, 110, 245, 65, 60, 68, 195, 80, 195, 275, 49, 150, 140, 160, 125, 50, 100, 50, 320, 200, 70, 70, 200, 100, 150, 185, 125, 148, 295, 45, 114, 45, 85, 65, 280, 65, 65, 65, 255, 54, 90, 90, 90, 120, 210, 150, 140, 80, 200, 450, 116, 215, 160, 150, 149, 65, 260, 400, 90, 75, 75, 110, 115, 82, 90, 69, 69, 249, 89, 159, 220, 95, 60, 179, 86, 62, 165, 89, 116, 172, 125, 90, 250, 185, 63, 163, 195, 89, 45, 60, 125, 85, 165, 144, 60, 95, 95, 95, 95, 95, 65, 65, 110, 47, 175, 234, 105, 47, 55, 146, 60, 61, 84, 179, 175, 250, 83, 105, 125, 150, 69, 190, 76, 142, 125, 200, 259, 275, 179, 70, 259, 300, 95, 132, 80, 85, 50, 75, 209, 330, 55, 60, 180, 300, 175, 100, 175, 175, 105, 49, 65, 450, 185, 57, 79, 218, 70, 350, 100, 150, 46, 50, 285, 220, 125, 80, 58, 100, 175, 160, 65, 499, 350, 105, 245, 139, 50, 90, 250, 70, 150, 109, 140, 140, 65, 85, 155, 125, 170, 65, 38, 110, 100, 125, 60, 80, 95, 163, 225, 170, 65, 60, 168, 100, 89, 109, 120, 40, 150, 45, 159, 149, 125, 75, 109, 499, 220, 55, 341, 108, 128, 110, 179, 175, 80, 149, 50, 75, 100, 369, 198, 100, 195, 257, 145, 45, 60, 80, 99, 180, 40, 96, 105, 80, 100, 58, 89, 68, 200, 170, 60, 285, 90, 75, 115, 118, 76, 245, 75, 200, 85, 350, 101, 125, 89, 120, 299, 195, 78, 250, 150, 78, 55, 300, 38, 150, 52, 198, 49, 105, 225, 125, 110, 44, 77, 97, 45, 157, 80, 50, 275, 129, 250, 36, 185, 130, 65, 275, 120, 180, 123, 210, 139, 45, 79, 90, 150, 200, 100, 45, 115, 56, 210, 87, 40, 58, 125, 100, 195, 90, 65, 200, 75, 220, 225, 163, 85, 150, 38, 79, 90, 100, 99, 200, 190, 75, 70, 85, 50, 130, 150, 62, 250, 350, 65, 95, 153, 150, 280, 70, 155, 71, 182, 105, 100, 109, 95, 65, 130, 120, 200, 190, 85, 125, 130, 70, 184, 180, 100, 125, 150, 105, 35, 125, 190, 95, 55, 130, 119, 67, 90, 199, 150, 115, 100, 165, 105, 49, 100, 94, 75, 322, 119, 100, 90, 150, 230, 59, 90, 95, 85, 150, 189, 99, 41, 90, 37, 380, 50, 225, 150, 55, 276, 199, 48, 145, 62, 230, 90, 83, 120, 65, 140, 80, 85, 120, 100, 65, 80, 299, 245, 55, 45, 60, 60, 140, 300, 249, 175, 55, 135, 60, 75, 129, 280, 132, 70, 52, 148, 115, 109, 60, 150, 207, 63, 185, 445, 125, 35, 200, 141, 120, 145, 89, 90, 95, 295, 104, 150, 75, 194, 125, 84, 140, 50, 89, 55, 62, 40, 350, 190, 300, 295, 113, 95, 59, 69, 190, 65, 185, 152, 249, 95, 130, 145, 325, 75, 37, 75, 50, 99, 50, 150, 88, 190, 125, 284, 150, 60, 99, 100, 35, 167, 140, 175, 249, 129, 95, 280, 200, 276, 130, 40, 64, 399, 495, 145, 53, 100, 42, 200, 130, 200, 75, 45, 52, 100, 350, 70, 39, 239, 375, 125, 45, 60, 75, 70, 65, 99, 95, 275, 168, 45, 80, 115, 65, 201, 120, 50, 100, 100, 59, 44, 79, 56, 140, 160, 119, 185, 58, 85, 100, 110, 80, 115, 99, 105, 110, 70, 160, 150, 90, 86, 200, 272, 86, 129, 50, 95, 400, 160, 90, 145, 125, 100, 75, 75, 125, 85, 449, 150, 250, 120, 115, 89, 180, 70, 140, 37, 70, 88, 320, 55, 195, 155, 170, 125, 110, 395, 215, 150, 295, 60, 55, 85, 90, 49, 50, 85, 350, 38, 158, 245, 110, 50, 45, 85, 150, 247, 105, 400, 155, 150, 69, 199, 499, 150, 105, 45, 105, 130, 75, 150, 159, 100, 145, 220, 160, 175, 82, 200, 85, 135, 150, 65, 395, 379, 250, 90, 40, 200, 133, 140, 100, 85, 140, 120, 110, 115, 120, 300, 59, 140, 99, 52, 125, 65, 53, 340, 80, 80, 78, 149, 80, 115, 90, 175, 194, 175, 63, 150, 64, 185, 80, 75, 105, 130, 264, 215, 85, 50, 145, 150, 175, 60, 70, 240, 150, 175, 42, 80, 150, 195, 145, 75, 90, 53, 155, 49, 78, 199, 350, 120, 70, 180, 145, 149, 60, 140, 175, 110, 177, 275, 99, 105, 200, 58, 100, 110, 80, 165, 80, 145, 45, 81, 49, 225, 70, 120, 175, 130, 150, 95, 300, 180, 375, 75, 300, 60, 60, 158, 184, 230, 95, 110, 120, 189, 98, 150, 100, 85, 450, 250, 100, 40, 90, 150, 80, 89, 90, 91, 85, 250, 50, 60, 150, 225, 290, 95, 139, 295, 140, 399, 100, 80, 135, 175, 70, 50, 52, 140, 169, 173, 169, 150, 145, 70, 205, 145, 88, 165, 85, 240, 95, 70, 99, 177, 300, 40, 280, 59, 100, 150, 140, 400, 75, 175, 85, 150, 197, 150, 200, 130, 50, 175, 100, 150, 145, 130, 45, 125, 130, 44, 199, 49, 45, 265, 220, 52, 180, 127, 108, 150, 440, 100, 200, 180, 250, 150, 49, 110, 45, 399, 103, 86, 110, 160, 55, 80, 85, 275, 450, 120, 250, 85, 100, 65, 68, 170, 50, 45, 48, 43, 260, 159, 50, 60, 80, 115, 200, 160, 109, 280, 98, 70, 55, 100, 200, 120, 150, 155, 60, 200, 200, 199, 49, 105, 49, 256, 499, 90, 80, 180, 145, 100, 150, 55, 147, 220, 40, 70, 150, 75, 85, 124, 89, 195, 160, 60, 125, 225, 86, 119, 70, 75, 150, 145, 130, 53, 130, 48, 105, 65, 100, 39, 150, 50, 55, 195, 295, 110, 64, 75, 130, 50, 270, 78, 100, 155, 210, 59, 140, 89, 50, 155, 75, 98, 102, 85, 35, 255, 245, 155, 155, 148, 155, 165, 155, 389, 65, 89, 250, 81, 200, 130, 100, 61, 95, 65, 40, 120, 59, 135, 460, 110, 225, 135, 125, 64, 58, 69, 177, 69, 275, 99, 135, 150, 90, 59, 215, 70, 135, 200, 120, 85, 52, 145, 245, 120, 150, 250, 125, 40, 55, 130, 110, 185, 245, 215, 250, 150, 89, 244, 74, 88, 150, 150, 40, 55, 259, 100, 125, 85, 75, 198, 300, 295, 35, 80, 110, 40, 75, 199, 50, 109, 120, 50, 95, 100, 350, 89, 80, 125, 155, 62, 93, 80, 120, 450, 155, 53, 150, 45, 85, 59, 122, 80, 105, 47, 75, 47, 100, 85, 269, 70, 90, 172, 160, 198, 154, 230, 285, 180, 90, 99, 111, 40, 35, 95, 89, 195, 139, 75, 100, 149, 199, 70, 43, 229, 195, 150, 100, 300, 100, 50, 140, 185, 250, 89, 89, 220, 135, 160, 110, 76, 105, 120, 110, 125, 105, 100, 118, 70, 220, 155, 85, 40, 85, 84, 150, 50, 250, 70, 164, 120, 224, 47, 61, 230, 150, 115, 70, 325, 155, 165, 165, 155, 150, 130, 125, 55, 155, 80, 40, 99, 59, 300, 55, 125, 139, 165, 50, 150, 65, 120, 115, 51, 90, 75, 190, 130, 80, 150, 75, 50, 60, 140, 110, 100, 70, 195, 125, 95, 99, 165, 95, 149, 190, 177, 65, 110, 35, 75, 52, 160, 100, 90, 99, 220, 45, 105, 50, 222, 120, 34, 130, 205, 150, 149, 50, 240, 48, 90, 85, 70, 139, 153, 285, 50, 35, 115, 73, 180, 60, 50, 58, 250, 499, 159, 140, 245, 130, 50, 155, 60, 120, 85, 150, 220, 160, 140, 500, 140, 80, 70, 150, 195, 125, 120, 275, 60, 89, 243, 50, 150, 250, 109, 272, 100, 170, 175, 85, 150, 116, 100, 350, 80, 80, 110, 267, 55, 398, 80, 125, 38, 80, 299, 125, 129, 190, 90, 83, 198, 149, 120, 143, 120, 150, 110, 125, 270, 110, 145, 190, 250, 45, 200, 187, 100, 90, 85, 43, 145, 65, 45, 130, 99, 149, 45, 140, 70, 70, 95, 169, 110, 75, 85, 97, 120, 109, 159, 75, 99, 65, 95, 120, 135, 115, 100, 99, 148, 150, 349, 165, 95, 129, 250, 165, 450, 120, 55, 35, 110, 500, 99, 168, 200, 355, 190, 99, 180, 145, 55, 65, 130, 68, 160, 98, 90, 125, 95, 130, 130, 125, 165, 90, 65, 66, 225, 59, 90, 125, 450, 50, 124, 86, 86, 299, 36, 100, 110, 450, 55, 55, 71, 63, 250, 159, 70, 120, 75, 90, 233, 115, 65, 80, 65, 139, 66, 200, 175, 96, 100, 44, 175, 98, 219, 175, 120, 140, 84, 80, 45, 38, 120, 140, 70, 200, 89, 250, 125, 47, 160, 65, 63, 178, 170, 50, 295, 100, 65, 90, 158, 450, 130, 70, 70, 170, 480, 120, 299, 45, 70, 49, 115, 55, 55, 250, 399, 198, 78, 200, 300, 225, 53, 159, 65, 120, 280, 60, 100, 160, 45, 39, 120, 99, 129, 350, 300, 140, 120, 64, 120, 40, 120, 150, 100, 290, 120, 235, 95, 280, 195, 100, 100, 130, 130, 125, 130, 120, 180, 80, 250, 166, 64, 35, 120, 60, 215, 58, 40, 78, 80, 80, 159, 145, 130, 100, 63, 189, 99, 35, 200, 35, 60, 80, 199, 174, 120, 98, 119, 75, 450, 55, 64, 106, 45, 125, 70, 40, 85, 75, 175, 150, 129, 80, 120, 100, 35, 269, 45, 185, 120, 97, 150, 135, 47, 120, 100, 245, 150, 95, 120, 145, 109, 80, 105, 125, 80, 140, 250, 450, 120, 150, 110, 165, 69, 69, 180, 40, 40, 109, 100, 70, 198, 50, 130, 135, 108, 129, 88, 75, 70, 185, 145, 150, 70, 150, 100, 69, 115, 120, 180, 147, 125, 328, 85, 60, 60, 150, 95, 185, 89, 67, 125, 80, 199, 360, 200, 80, 400, 65, 70, 85, 68, 130, 215, 165, 100, 85, 105, 100, 499, 150, 54, 250, 40, 95, 169, 175, 145, 135, 125, 100, 118, 172, 105, 55, 99, 88, 125, 102, 40, 119, 101, 65, 40, 109, 40, 75, 90, 87, 185, 45, 300, 140, 70, 80, 45, 40, 210, 225, 70, 120, 133, 60, 64, 69, 40, 190, 275, 200, 75, 180, 59, 149, 55, 75, 400, 169, 125, 58, 151, 67, 185, 190, 78, 60, 210, 139, 200, 75, 123, 120, 85, 122, 99, 110, 89, 48, 90, 90, 110, 150, 120, 110, 45, 75, 65, 170, 140, 170, 90, 175, 135, 175, 40, 69, 85, 155, 160, 50, 125, 65, 45, 139, 85, 125, 115, 59, 80, 50, 90, 250, 215, 180, 250, 118, 70, 110, 299, 95, 70, 167, 103, 145, 100, 275, 60, 70, 300, 370, 50, 68, 92, 100, 140, 150, 45, 70, 230, 80, 40, 90, 50, 195, 250, 175, 150, 175, 99, 70, 48, 199, 90, 130, 175, 48, 70, 380, 45, 55, 160, 107, 155, 275, 80, 205, 150, 59, 45, 270, 150, 35, 99, 150, 50, 79, 199, 65, 43, 130, 180, 45, 65, 50, 150, 99, 50, 250, 50, 50, 100, 59, 80, 95, 110, 60, 64, 175, 350, 80, 200, 128, 150, 100, 95, 220, 147, 95, 160, 225, 40, 120, 60, 100, 77, 150, 160, 70, 215, 60, 130, 99, 175, 200, 99, 45, 112, 95, 150, 77, 69, 80, 175, 90, 70, 75, 61, 42, 45, 75, 150, 72, 59, 90, 145, 45, 35, 150, 147, 182, 175, 250, 70, 75, 79, 35, 300, 86, 189, 70, 150, 159, 50, 140, 175, 72, 198, 180, 200, 220, 125, 300, 37, 60, 49, 145, 48, 153, 45, 150, 195, 90, 60, 145, 120, 111, 140, 60, 35, 93, 60, 99, 210, 175, 200, 120, 319, 45, 99, 450, 89, 65, 185, 238, 63, 150, 75, 500, 59, 90, 150, 70, 289, 245, 225, 149, 160, 70, 165, 150, 65, 175, 175, 90, 40, 170, 70, 50, 52, 47, 175, 47, 47, 47, 80, 142, 69, 62, 45, 75, 80, 90, 173, 100, 160, 116, 150, 104, 200, 80, 374, 46, 94, 92, 155, 70, 75, 150, 75, 145, 65, 195, 420, 500, 85, 100, 70, 425, 490, 135, 80, 90, 70, 100, 75, 88, 50, 63, 50, 90, 85, 90, 75, 150, 38, 70, 65, 75, 60, 221, 500, 250, 239, 105, 50, 75, 108, 59, 149, 150, 119, 100, 85, 45, 295, 60, 60, 200, 80, 60, 50, 69, 123, 135, 400, 87, 99, 55, 225, 60, 299, 40, 120, 89, 150, 240, 36, 67, 140, 90, 60, 138, 96, 109, 135, 58, 65, 225, 130, 60, 210, 275, 175, 175, 43, 250, 79, 60, 100, 79, 285, 200, 150, 180, 150, 58, 140, 80, 100, 200, 175, 250, 74, 60, 60, 60, 150, 70, 98, 108, 80, 60, 220, 140, 42, 120, 69, 85, 75, 60, 160, 120, 95, 180, 170, 39, 75, 160, 96, 50, 145, 100, 95, 105, 35, 80, 120, 130, 71, 50, 72, 99, 110, 118, 75, 225, 80, 107, 500, 200, 42, 350, 160, 89, 150, 120, 73, 73, 140, 125, 140, 48, 400, 165, 70, 52, 385, 45, 275, 135, 350, 100, 100, 135, 115, 150, 60, 99, 180, 95, 60, 100, 250, 145, 250, 150, 400, 83, 150, 68, 70, 65, 45, 75, 65, 170, 100, 65, 280, 150, 250, 65, 130, 375, 48, 80, 110, 72, 49, 250, 120, 240, 77, 185, 100, 50, 50, 87, 65, 109, 152, 150, 300, 70, 60, 150, 119, 74, 250, 250, 130, 163, 125, 149, 135, 129, 87, 55, 54, 110, 250, 150, 40, 295, 130, 79, 69, 79, 147, 79, 69, 70, 119, 49, 132, 155, 179, 104, 40, 80, 89, 85, 75, 59, 45, 350, 395, 180, 46, 189, 195, 39, 65, 140, 65, 118, 250, 55, 155, 85, 168, 110, 125, 125, 115, 64, 140, 165, 160, 70, 100, 225, 70, 60, 120, 50, 75, 75, 37, 225, 250, 125, 170, 110, 100, 50, 205, 90, 49, 129, 165, 103, 97, 49, 245, 52, 280, 62, 129, 175, 80, 90, 77, 120, 90, 180, 100, 159, 200, 89, 200, 72, 165, 100, 90, 120, 185, 159, 70, 80, 220, 89, 135, 150, 165, 46, 50, 100, 200, 100, 81, 150, 60, 239, 70, 45, 200, 45, 45, 110, 250, 120, 249, 80, 124, 175, 115, 99, 75, 140, 60, 120, 150, 150, 49, 110, 65, 190, 125, 92, 325, 120, 60, 175, 200, 180, 60, 95, 230, 45, 40, 95, 42, 70, 199, 65, 190, 200, 75, 98, 120, 130, 125, 55, 68, 140, 160, 77, 90, 208, 215, 100, 40, 59, 325, 98, 69, 80, 39, 70, 194, 90, 39, 85, 429, 42, 200, 50, 100, 150, 100, 85, 240, 135, 135, 79, 150, 139, 38, 100, 170, 70, 199, 39, 39, 75, 99, 100, 225, 99, 469, 180, 100, 125, 85, 175, 65, 52, 85, 99, 130, 189, 121, 150, 170, 70, 80, 174, 89, 109, 100, 80, 41, 230, 45, 125, 149, 63, 60, 57, 160, 164, 250, 194, 205, 129, 150, 75, 45, 65, 250, 185, 400, 125, 175, 300, 249, 199, 180, 60, 55, 135, 90, 130, 85, 150, 62, 155, 40, 140, 50, 250, 70, 160, 78, 139, 50, 145, 55, 215, 120, 160, 80, 150, 110, 360, 239, 40, 60, 87, 119, 69, 50, 200, 65, 78, 150, 99, 140, 500, 123, 414, 125, 299, 55, 55, 65, 150, 79, 124, 85, 100, 82, 59, 75, 65, 65, 109, 59, 300, 135, 110, 300, 185, 35, 90, 50, 60, 70, 130, 110, 70, 200, 90, 139, 360, 185, 100, 195, 235, 150, 70, 95, 450, 100, 160, 65, 104, 60, 190, 55, 80, 65, 235, 205, 109, 85, 80, 120, 130, 190, 99, 52, 110, 99, 137, 85, 149, 124, 125, 70, 99, 109, 235, 95, 250, 95, 85, 190, 125, 125, 374, 160, 70, 55, 100, 95, 250, 95, 89, 285, 127, 225, 150, 50, 60, 275, 65, 80, 130, 65, 75, 200, 40, 68, 130, 135, 165, 250, 52, 170, 65, 80, 130, 140, 200, 55, 175, 99, 200, 75, 90, 51, 62, 90, 45, 109, 100, 200, 149, 55, 70, 195, 220, 80, 110, 70, 90, 130, 149, 100, 100, 125, 199, 50, 300, 285, 330, 39, 77, 115, 99, 250, 62, 105, 55, 172, 60, 72, 229, 70, 40, 99, 100, 78, 125, 190, 135, 250, 99, 50, 54, 70, 135, 425, 122, 141, 70, 150, 250, 115, 130, 74, 48, 85, 180, 97, 100, 105, 100, 145, 289, 70, 80, 60, 70, 175, 144, 40, 180, 75, 80, 352, 69, 150, 250, 280, 55, 50, 49, 45, 150, 120, 150, 120, 80, 60, 70, 239, 89, 50, 37, 239, 150, 150, 360, 115, 150, 207, 120, 160, 85, 100, 45, 160, 40, 49, 495, 89, 220, 99, 80, 78, 110, 130, 150, 59, 80, 80, 160, 45, 94, 77, 149, 130, 57, 150, 55, 127, 60, 64, 40, 50, 83, 200, 49, 60, 45, 180, 45, 89, 285, 100, 90, 75, 75, 200, 35, 297, 195, 80, 115, 70, 119, 120, 250, 45, 155, 97, 75, 155, 237, 250, 60, 42, 105, 120, 80, 125, 125, 50, 60, 90, 275, 100, 200, 99, 112, 65, 200, 98, 50, 135, 50, 145, 141, 110, 110, 299, 190, 70, 75, 155, 96, 350, 90, 500, 175, 50, 130, 90, 65, 200, 63, 110, 100, 60, 45, 117, 175, 148, 100, 200, 199, 115, 245, 187, 88, 280, 95, 260, 148, 100, 100, 64, 125, 110, 140, 35, 85, 111, 40, 180, 100, 150, 63, 175, 84, 50, 75, 125, 140, 250, 60, 140, 190, 91, 40, 72, 130, 90, 100, 150, 62, 100, 150, 95, 170, 40, 54, 150, 250, 50, 120, 410, 250, 250, 139, 149, 185, 230, 175, 150, 325, 80, 135, 261, 57, 225, 200, 200, 65, 150, 375, 45, 225, 165, 85, 125, 100, 179, 50, 115, 100, 75, 60, 240, 290, 56, 95, 70, 125, 195, 45, 50, 55, 105, 45, 125, 45, 95, 200, 190, 170, 54, 150, 300, 115, 225, 125, 250, 129, 135, 175, 55, 125, 200, 40, 50, 166, 124, 65, 57, 100, 60, 90, 130, 350, 60, 80, 100, 200, 120, 170, 42, 50, 170, 189, 150, 77, 60, 150, 120, 85, 85, 450, 60, 95, 38, 125, 125, 59, 65, 259, 60, 95, 45, 133, 259, 150, 139, 39, 434, 100, 99, 70, 88, 140, 80, 44, 299, 195, 140, 180, 70, 55, 65, 45, 96, 82, 150, 125, 115, 145, 169, 75, 100, 45, 55, 55, 48, 50, 56, 65, 140, 95, 73, 180, 47, 55, 125, 60, 225, 169, 45, 130, 53, 150, 140, 98, 120, 170, 47, 129, 119, 50, 100, 55, 275, 65, 170, 95, 175, 150, 75, 51, 65, 42, 40, 60, 157, 170, 50, 55, 45, 109, 105, 150, 45, 40, 105, 135, 150, 70, 120, 100, 125, 170, 80, 249, 350, 139, 89, 159, 70, 200, 169, 90, 305, 88, 110, 150, 50, 125, 125, 80, 120, 79, 190, 239, 200, 200, 175, 200, 130, 95, 140, 100, 75, 80, 60, 125, 80, 97, 110, 140, 57, 50, 180, 180, 100, 175, 100, 250, 150, 90, 150, 190, 75, 150, 65, 150, 75, 80, 185, 55, 98, 165, 75, 145, 135, 50, 100, 130, 145, 120, 90, 250, 90, 175, 120, 85, 90, 70, 110, 125, 195, 104, 45, 40, 100, 295, 75, 34, 75, 110, 185, 145, 250, 145, 195, 86, 65, 199, 55, 150, 100, 149, 36, 50, 50, 73, 100, 193, 79, 60, 60, 159, 75, 235, 41, 220, 180, 185, 225, 150, 74, 49, 140, 180, 50, 47, 245, 115, 50, 110, 125, 150, 139, 150, 79, 240, 115, 120, 200, 200, 150, 165, 85, 130, 85, 90, 70, 40, 55, 130, 60, 65, 249, 75, 500, 169, 95, 120, 180, 80, 90, 140, 200, 139, 47, 108, 75, 60, 80, 50, 275, 65, 65, 132, 35, 75, 100, 89, 50, 450, 80, 90, 100, 90, 145, 125, 50, 150, 95, 125, 120, 400, 201, 50, 199, 185, 85, 60, 132, 100, 100, 300, 300, 39, 179, 120, 170, 120, 75, 110, 177, 180, 70, 325, 165, 75, 150, 159, 250, 119, 80, 250, 125, 150, 50, 47, 150, 299, 88, 169, 110, 60, 110, 78, 80, 150, 199, 125, 58, 200, 98, 40, 135, 250, 130, 60, 465, 126, 139, 200, 40, 99, 185, 60, 94, 134, 70, 200, 90, 115, 245, 375, 75, 150, 57, 425, 65, 65, 75, 100, 77, 165, 190, 190, 45, 72, 230, 250, 140, 99, 140, 181, 165, 175, 100, 209, 110, 50, 80, 75, 70, 125, 70, 100, 200, 100, 144, 95, 220, 209, 118, 50, 85, 200, 161, 110, 104, 200, 99, 80, 400, 98, 63, 69, 89, 99, 140, 150, 199, 300, 40, 100, 170, 120, 60, 90, 60, 170, 139, 250, 150, 90, 55, 296, 150, 139, 205, 90, 65, 250, 140, 110, 120, 110, 200, 60, 205, 50, 183, 70, 90, 375, 50, 199, 285, 72, 36, 84, 100, 130, 285, 465, 175, 165, 156, 160, 200, 260, 100, 120, 65, 100, 127, 49, 108, 180, 34, 100, 175, 190, 90, 160, 51, 150, 325, 99, 280, 110, 125, 275, 308, 200, 60, 65, 189, 60, 65, 128, 200, 75, 69, 120, 95, 142, 155, 300, 70, 180, 70, 95, 100, 129, 40, 90, 42, 70, 108, 500, 275, 289, 130, 55, 130, 60, 99, 50, 150, 90, 275, 70, 185, 69, 330, 150, 80, 80, 310, 70, 325, 65, 155, 45, 125, 49, 80, 145, 125, 60, 50, 531, 199, 214, 105, 240, 114, 45, 145, 75, 225, 150, 150, 182, 65, 175, 525, 98, 61, 159, 69, 115, 85, 209, 225, 100, 55, 80, 80, 85, 125, 175, 180, 60, 200, 295, 40, 150, 40, 180, 145, 175, 275, 115, 175, 345, 150, 75, 219, 225, 275, 350, 60, 119, 175, 335, 70, 299, 99, 150, 99, 190, 41, 325, 95, 160, 400, 46, 132, 165, 80, 150, 62, 68, 300, 149, 200, 275, 150, 166, 79, 220, 70, 60, 80, 50, 50, 185, 85, 300, 199, 50, 200, 149, 150, 200, 140, 110, 80, 60, 126, 55, 325, 50, 186, 245, 150, 99, 43, 85, 95, 180, 100, 130, 100, 85, 160, 63, 60, 95, 50, 59, 83, 80, 200, 265, 36, 78, 80, 218, 130, 130, 51, 45, 350, 265, 228, 90, 60, 120, 65, 90, 225, 103, 500, 62, 45, 300, 299, 85, 250, 109, 300, 300, 289, 37, 50, 75, 44, 45, 110, 195, 100, 200, 160, 115, 55, 130, 100, 49, 49, 245, 250, 55, 225, 68, 220, 75, 120, 129, 199, 92, 179, 80, 100, 60, 166, 115, 55, 76, 140, 150, 450, 105, 110, 450, 150, 80, 260, 85, 199, 135, 100, 99, 34, 89, 77, 190, 115, 40, 135, 99, 145, 349, 75, 200, 119, 65, 50, 199, 80, 55, 125, 235, 110, 120, 195, 109, 55, 150, 100, 155, 60, 85, 70, 50, 120, 75, 79, 99, 199, 260, 65, 60, 45, 107, 230, 130, 85, 80, 84, 63, 45, 125, 160, 63, 125, 45, 115, 269, 55, 100, 59, 173, 115, 89, 70, 89, 60, 400, 90, 200, 65, 43, 55, 110, 145, 550, 59, 239, 49, 90, 80, 125, 65, 77, 220, 150, 200, 200, 90, 230, 55, 160, 46, 300, 100, 95, 68, 112, 85, 55, 85, 160, 155, 70, 185, 200, 70, 50, 85, 45, 109, 48, 150, 350, 100, 177, 108, 35, 105, 95, 62, 150, 113, 300, 65, 55, 120, 160, 135, 175, 300, 80, 170, 84, 399, 140, 210, 200, 200, 47, 50, 95, 280, 50, 200, 197, 120, 150, 35, 195, 125, 100, 125, 123, 95, 199, 45, 189, 50, 250, 95, 140, 120, 35, 195, 35, 250, 70, 159, 149, 180, 110, 100, 50, 425, 260, 499, 250, 350, 275, 300, 75, 146, 89, 75, 75, 102, 190, 70, 63, 100, 130, 90, 46, 115, 90, 250, 159, 99, 100, 250, 120, 80, 45, 65, 50, 100, 200, 65, 130, 250, 100, 90, 90, 45, 39, 39, 85, 40, 200, 130, 40, 129, 100, 100, 160, 125, 205, 75, 150, 195, 477, 275, 60, 128, 140, 98, 130, 325, 144, 45, 75, 85, 50, 50, 60, 372, 75, 60, 85, 60, 90, 70, 87, 100, 55, 139, 50, 260, 120, 90, 83, 65, 140, 100, 100, 75, 70, 145, 60, 70, 365, 180, 49, 165, 140, 72, 165, 112, 119, 160, 170, 185, 48, 199, 80, 125, 62, 75, 80, 195, 68, 90, 200, 80, 125, 110, 199, 40, 65, 85, 69, 42, 120, 130, 210, 60, 60, 140, 73, 67, 110, 80, 325, 165, 120, 119, 39, 100, 149, 225, 45, 120, 99, 206, 120, 290, 80, 150, 80, 70, 130, 125, 150, 290, 150, 129, 64, 100, 60, 120, 180, 90, 200, 70, 90, 70, 94, 250, 85, 65, 369, 88, 65, 79, 239, 120, 175, 200, 103, 80, 60, 50, 425, 200, 300, 47, 200, 180, 270, 170, 55, 139, 101, 50, 38, 219, 275, 249, 100, 49, 150, 150, 190, 52, 89, 369, 90, 115, 66, 89, 94, 70, 90, 155, 65, 149, 70, 100, 150, 200, 50, 225, 35, 45, 140, 160, 35, 125, 160, 179, 70, 300, 152, 100, 200, 250, 200, 245, 79, 175, 139, 220, 70, 99, 120, 178, 124, 250, 375, 65, 60, 60, 45, 74, 50, 60, 150, 40, 120, 35, 85, 146, 99, 69, 70, 159, 65, 45, 42, 100, 175, 90, 130, 70, 48, 169, 200, 50, 80, 200, 215, 249, 110, 110, 86, 79, 150, 199, 85, 330, 175, 91, 75, 40, 174, 200, 150, 102, 76, 75, 175, 100, 145, 49, 50, 120, 50, 60, 55, 90, 49, 65, 90, 49, 75, 100, 59, 225, 150, 63, 200, 140, 95, 55, 110, 100, 90, 139, 150, 170, 120, 80, 36, 129, 60, 60, 60, 99, 101, 219, 90, 59, 70, 115, 150, 105, 113, 70, 199, 125, 140, 85, 70, 89, 95, 220, 45, 95, 115, 105, 93, 40, 85, 170, 75, 55, 57, 199, 485, 125, 95, 200, 90, 100, 70, 110, 96, 175, 70, 75, 51, 80, 110, 80, 170, 65, 165, 115, 150, 125, 150, 170, 150, 150, 45, 89, 35, 70, 100, 59, 155, 61, 100, 55, 40, 101, 50, 102, 120, 150, 115, 49, 200, 166, 40, 137, 58, 35, 150, 175, 189, 175, 150, 425, 75, 170, 120, 65, 350, 199, 67, 189, 50, 220, 49, 226, 79, 80, 100, 98, 70, 150, 125, 155, 179, 60, 179, 50, 50, 189, 67, 140, 55, 170, 175, 189, 35, 61, 205, 35, 39, 159, 37, 299, 175, 110, 130, 140, 168, 128, 64, 35, 199, 175, 55, 95, 153, 39, 85, 315, 89, 179, 150, 225, 140, 115, 58, 190, 100, 119, 129, 110, 90, 61, 65, 60, 60, 150, 175, 166, 120, 135, 145, 185, 206, 80, 239, 399, 125, 500, 47, 99, 75, 80, 100, 60, 118, 97, 210, 55, 62, 185, 165, 102, 80, 84, 95, 65, 152, 50, 149, 124, 58, 159, 250, 250, 500, 58, 199, 95, 36, 165, 72, 179, 209, 150, 375, 65, 275, 110, 99, 85, 189, 75, 45, 125, 71, 46, 105, 41, 99, 37, 60, 218, 150, 52, 210, 115, 105, 80, 225, 175, 120, 65, 99, 160, 60, 230, 250, 299, 79, 110, 70, 150, 59, 165, 149, 129, 42, 120, 63, 180, 220, 68, 119, 37, 199, 60, 135, 64, 80, 48, 115, 45, 38, 85, 275, 125, 250, 79, 100, 70, 60, 50, 35, 180, 70, 220, 135, 140, 175, 180, 55, 91, 143, 55, 110, 90, 199, 235, 62, 85, 60, 45, 165, 77, 43, 70, 105, 54, 145, 55, 285, 255, 500, 75, 64, 135, 70, 295, 135, 50, 69, 299, 204, 125, 69, 139, 149, 100, 360, 99, 60, 60, 275, 65, 149, 60, 120, 261, 99, 65, 60, 69, 150, 37, 100, 99, 160, 225, 51, 65, 120, 125, 260, 94, 79, 99, 41, 90, 69, 113, 35, 200, 100, 37, 180, 200, 80, 55, 110, 135, 45, 145, 37, 90, 305, 180, 90, 135, 49, 95, 155, 47, 38, 199, 87, 40, 155, 81, 129, 83, 130, 325, 50, 50, 200, 80, 35, 75, 135, 125, 62, 100, 50, 60, 75, 65, 80, 130, 149, 150, 60, 100, 150, 170, 65, 90, 55, 319, 120, 50, 175, 67, 165, 150, 115, 65, 70, 219, 45, 55, 45, 65, 65, 160, 500, 120, 400, 45, 87, 115, 43, 125, 55, 50, 60, 88, 85, 275, 65, 40, 85, 85, 85, 120, 220, 80, 275, 125, 65, 58, 115, 49, 70, 196, 80, 35, 82, 136, 75, 68, 64, 100, 65, 450, 48, 85, 180, 175, 245, 45, 34, 75, 125, 200, 100, 70, 154, 300, 250, 140, 59, 80, 230, 150, 45, 144, 44, 45, 129, 75, 220, 125, 150, 63, 450, 36, 48, 50, 59, 39, 70, 100, 125, 45, 185, 60, 40, 80, 135, 70, 110, 105, 100, 65, 125, 50, 360, 160, 79, 90, 283, 70, 199, 45, 325, 130, 179, 80, 99, 135, 145, 75, 55, 75, 90, 98, 70, 50, 250, 99, 77, 130, 60, 200, 117, 89, 44, 70, 39, 150, 89, 200, 124, 100, 117, 50, 75, 75, 75, 65, 320, 115, 120, 425, 75, 150, 49, 165, 175, 97, 270, 155, 55, 80, 70, 35, 110, 129, 45, 50, 105, 45, 83, 40, 400, 64, 130, 200, 200, 60, 60, 80, 125, 80, 50, 37, 200, 65, 130, 95, 54, 105, 45, 219, 250, 90, 87, 225, 45, 129, 120, 35, 200, 100, 122, 120, 150, 110, 245, 110, 98, 133, 45, 65, 80, 149, 150, 35, 36, 45, 90, 68, 36, 34, 135, 128, 40, 155, 50, 40, 250, 295, 145, 175, 89, 350, 105, 185, 195, 135, 45, 199, 125, 109, 150, 119, 70, 100, 250, 150, 35, 200, 99, 170, 399, 55, 40, 55, 140, 71, 177, 395, 80, 198, 199, 97, 162, 99, 65, 150, 35, 50, 40, 259, 125, 85, 160, 450, 90, 140, 85, 79, 76, 150, 175, 90, 92, 64, 90, 200, 150, 60, 65, 70, 162, 250, 75, 95, 75, 60, 189, 190, 50, 100, 125, 90, 300, 145, 65, 150, 80, 200, 69, 150, 79, 219, 199, 550, 90, 70, 70, 150, 200, 145, 79, 95, 55, 207, 83, 50, 200, 100, 119, 175, 49, 110, 500, 180, 145, 57, 98, 120, 100, 90, 85, 120, 180, 90, 250, 50, 90, 165, 70, 90, 109, 96, 390, 78, 50, 112, 117, 50, 185, 85, 235, 75, 180, 100, 125, 130, 99, 40, 120, 350, 84, 83, 125, 138, 100, 150, 90, 154, 75, 110, 129, 190, 185, 108, 98, 145, 125, 85, 89, 43, 40, 200, 40, 75, 199, 70, 90, 229, 34, 115, 171, 50, 40, 37, 36, 65, 135, 160, 140, 69, 125, 64, 250, 100, 145, 70, 70, 168, 195, 250, 75, 50, 85, 60, 165, 145, 125, 250, 69, 140, 250, 60, 65, 65, 130, 50, 160, 39, 145, 195, 79, 50, 35, 325, 40, 95, 43, 225, 175, 94, 200, 95, 65, 349, 41, 200, 85, 150, 65, 110, 80, 45, 83, 40, 79, 177, 190, 240, 150, 110, 120, 176, 199, 60, 140, 150, 55, 200, 100, 112, 75, 45, 160, 100, 175, 80, 60, 175, 65, 159, 118, 120, 91, 125, 55, 175, 140, 40, 180, 110, 90, 50, 135, 60, 200, 90, 228, 250, 40, 65, 188, 130, 140, 130, 300, 50, 75, 200, 250, 112, 170, 79, 285, 110, 169, 60, 70, 150, 160, 50, 120, 140, 76, 75, 40, 54, 140, 87, 131, 450, 175, 100, 280, 135, 87, 165, 170, 84, 375, 135, 125, 79, 165, 300, 45, 400, 40, 60, 250, 199, 130, 44, 200, 90, 120, 100, 100, 200, 89, 75, 90, 190, 150, 85, 65, 110, 70, 55, 59, 200, 85, 158, 35, 57, 138, 90, 125, 225, 45, 150, 150, 140, 40, 110, 150, 115, 190, 60, 90, 115, 135, 148, 95, 50, 79, 50, 40, 101, 135, 299, 79, 295, 110, 215, 100, 95, 140, 297, 133, 250, 65, 50, 135, 80, 69, 75, 125, 142, 97, 229, 175, 63, 45, 185, 50, 175, 133, 62, 90, 99, 120, 100, 80, 90, 65, 49, 100, 380, 100, 90, 35, 66, 285, 46, 275, 250, 200, 175, 140, 133, 150, 55, 142, 95, 150, 99, 133, 150, 190, 106, 190, 150, 119, 62, 99, 34, 129, 205, 85, 150, 186, 200, 172, 250, 133, 150, 290, 120, 95, 120, 165, 180, 85, 145, 120, 117, 70, 115, 225, 140, 45, 119, 125, 150, 120, 45, 115, 110, 250, 300, 45, 159, 220, 159, 70, 45, 81, 190, 225, 125, 95, 62, 150, 495, 130, 80, 89, 140, 60, 142, 125, 133, 200, 85, 100, 176, 175, 75, 125, 159, 150, 99, 49, 140, 200, 148, 165, 59, 45, 45, 225, 70, 95, 100, 59, 100, 199, 35, 95, 60, 200, 200, 50, 102, 152, 490, 250, 450, 98, 50, 109, 145, 165, 65, 130, 120, 165, 200, 122, 400, 250, 120, 65, 43, 154, 135, 86, 85, 80, 70, 100, 130, 139, 35, 100, 133, 275, 142, 135, 165, 110, 70, 65, 95, 140, 115, 74, 175, 275, 110, 69, 50, 85, 142, 75, 133, 79, 80, 239, 159, 140, 250, 135, 65, 75, 195, 99, 70, 65, 245, 150, 55, 50, 81, 92, 105, 89, 348, 168, 65, 175, 100, 119, 105, 290, 65, 60, 160, 45, 60, 150, 160, 300, 99, 35, 170, 38, 500, 85, 110, 60, 148, 133, 250, 95, 69, 180, 40, 85, 65, 55, 75, 125, 175, 85, 76, 225, 40, 110, 117, 78, 65, 105, 45, 34, 150, 160, 250, 95, 69, 145, 75, 70, 43, 121, 198, 109, 199, 150, 49, 170, 239, 80, 80, 140, 60, 200, 159, 65, 70, 120, 125, 200, 50, 80, 140, 105, 49, 180, 70, 450, 44, 89, 172, 350, 68, 52, 70, 223, 97, 75, 65, 64, 59, 60, 73, 219, 52, 90, 150, 325, 170, 79, 175, 120, 72, 125, 200, 45, 175, 89, 149, 110, 40, 98, 160, 380, 35, 200, 140, 56, 239, 91, 169, 35, 180, 55, 239, 175, 67, 65, 125, 200, 81, 325, 333, 245, 90, 400, 160, 75, 206, 70, 65, 126, 129, 92, 82, 369, 99, 220, 125, 99, 75, 300, 140, 98, 99, 178, 75, 225, 60, 268, 177, 60, 60, 55, 60, 135, 139, 100, 100, 40, 55, 175, 300, 45, 144, 60, 45, 80, 149, 89, 110, 179, 500, 150, 175, 79, 117, 65, 85, 150, 80, 325, 95, 85, 115, 111, 84, 95, 110, 50, 225, 110, 49, 90, 299, 60, 175, 115, 120, 409, 350, 95, 49, 155, 265, 215, 120, 54, 60, 210, 80, 85, 99, 84, 105, 88, 140, 50, 175, 50, 60, 60, 143, 85, 110, 369, 295, 65, 109, 35, 50, 44, 275, 110, 120, 50, 87, 109, 65, 150, 225, 100, 125, 115, 62, 50, 200, 225, 159, 150, 80, 35, 250, 175, 150, 165, 159, 140, 159, 77, 49, 55, 50, 359, 50, 40, 219, 189, 140, 96, 125, 150, 60, 99, 60, 198, 350, 85, 80, 135, 61, 45, 70, 60, 75, 165, 112, 69, 39, 239, 194, 75, 165, 200, 205, 45, 139, 339, 49, 190, 45, 199, 149, 80, 120, 73, 44, 105, 120, 57, 120, 100, 525, 75, 65, 132, 50, 60, 59, 80, 450, 45, 359, 200, 120, 140, 436, 249, 140, 170, 60, 94, 45, 60, 169, 80, 55, 220, 235, 125, 66, 80, 57, 48, 99, 40, 180, 115, 104, 325, 299, 40, 89, 100, 59, 300, 50, 80, 56, 219, 260, 115, 75, 66, 75, 215, 175, 140, 80, 120, 85, 100, 64, 75, 62, 96, 290, 50, 81, 70, 70, 95, 150, 169, 140, 130, 60, 55, 45, 199, 290, 85, 150, 60, 170, 47, 55, 195, 186, 99, 60, 100, 500, 150, 175, 148, 130, 80, 150, 285, 70, 155, 82, 200, 159, 38, 155, 184, 65, 50, 60, 100, 60, 50, 225, 190, 119, 104, 175, 40, 100, 85, 60, 90, 53, 50, 45, 110, 199, 65, 95, 200, 274, 50, 105, 350, 180, 225, 100, 55, 70, 67, 150, 35, 90, 53, 299, 41, 50, 70, 185, 98, 399, 170, 376, 99, 91, 60, 250, 209, 48, 60, 165, 218, 200, 53, 65, 280, 60, 99, 120, 70, 235, 275, 86, 49, 85, 125, 85, 70, 60, 50, 218, 135, 120, 55, 150, 75, 115, 60, 160, 39, 45, 45, 125, 67, 110, 177, 150, 41, 185, 175, 40, 135, 195, 50, 40, 150, 75, 65, 136, 180, 55, 225, 99, 90, 100, 73, 380, 99, 105, 35, 200, 105, 87, 69, 150, 75, 100, 224, 119, 80, 58, 128, 115, 76, 45, 80, 75, 89, 197, 180, 125, 170, 180, 142, 60, 98, 40, 59, 40, 250, 80, 50, 50, 65, 140, 47, 184, 139, 57, 50, 250, 125, 50, 240, 60, 160, 45, 50, 135, 259, 60, 70, 99, 190, 115, 250, 70, 225, 40, 37, 239, 75, 90, 46, 175, 155, 143, 120, 79, 50, 289, 62, 85, 50, 120, 180, 90, 90, 55, 49, 105, 40, 120, 90, 110, 140, 125, 95, 75, 244, 75, 75, 105, 100, 150, 35, 51, 105, 80, 84, 70, 70, 150, 100, 85, 225, 120, 90, 175, 65, 260, 225, 135, 195, 99, 177, 190, 80, 60, 195, 60, 99, 125, 89, 55, 130, 70, 110, 100, 195, 68, 90, 85, 200, 150, 60, 135, 100, 163, 187, 225, 120, 73, 100, 99, 300, 92, 100, 40, 170, 109, 150, 50, 49, 265, 44, 260, 133, 80, 154, 150, 125, 60, 75, 100, 65, 200, 180, 60, 112, 230, 375, 130, 120, 150, 150, 191, 219, 250, 180, 115, 52, 95, 190, 480, 180, 150, 150, 140, 70, 70, 197, 128, 150, 75, 280, 390, 256, 200, 150, 41, 75, 300, 50, 50, 179, 72, 150, 110, 200, 50, 35, 45, 195, 90, 325, 100, 85, 40, 80, 149, 67, 80, 80, 275, 123, 179, 180, 140, 59, 200, 165, 90, 200, 450, 120, 60, 51, 200, 250, 180, 66, 180, 65, 87, 60, 124, 225, 77, 79, 239, 65, 72, 75, 35, 45, 67, 150, 115, 150, 50, 60, 50, 34, 100, 125, 45, 198, 150, 39, 150, 80, 46, 78, 219, 145, 175, 220, 85, 110, 58, 350, 329, 58, 60, 43, 88, 90, 41, 65, 160, 140, 169, 115, 67, 60, 45, 60, 142, 350, 40, 65, 50, 42, 100, 175, 399, 40, 100, 63, 177, 158, 400, 90, 135, 200, 155, 100, 315, 45, 220, 220, 100, 70, 74, 290, 85, 199, 65, 45, 95, 95, 80, 300, 120, 150, 120, 225, 100, 160, 150, 275, 45, 195, 100, 195, 87, 120, 170, 160, 225, 125, 350, 175, 65, 350, 45, 120, 100, 40, 100, 178, 170, 45, 180, 89, 50, 80, 250, 70, 45, 100, 65, 45, 45, 45, 90, 150, 125, 125, 175, 75, 295, 50, 69, 175, 90, 100, 49, 55, 36, 65, 60, 180, 50, 110, 87, 100, 120, 42, 145, 99, 129, 186, 350, 165, 210, 119, 75, 400, 60, 140, 245, 245, 89, 140, 37, 49, 115, 69, 100, 300, 52, 50, 199, 90, 65, 400, 65, 71, 199, 163, 126, 150, 199, 51, 289, 219, 125, 90, 150, 40, 120, 200, 195, 175, 130, 170, 60, 110, 70, 105, 140, 175, 90, 128, 110, 99, 125, 205, 230, 40, 225, 50, 45, 159, 180, 225, 49, 109, 250, 269, 81, 53, 206, 40, 105, 75, 499, 165, 55, 201, 80, 80, 59, 200, 60, 150, 40, 175, 151, 250, 100, 120, 100, 80, 60, 123, 189, 90, 85, 40, 67, 63, 150, 70, 75, 99, 199, 67, 71, 35, 100, 138, 52, 120, 125, 119, 225, 75, 70, 45, 175, 150, 76, 200, 170, 225, 50, 150, 100, 202, 60, 99, 38, 70, 117, 75, 105, 130, 100, 269, 325, 80, 509, 200, 195, 225, 35, 92, 95, 95, 119, 154, 80, 99, 75, 199, 99, 62, 180, 115, 150, 65, 85, 70, 50, 65, 150, 250, 140, 70, 80, 85, 99, 75, 99, 165, 85, 55, 80, 95, 369, 75, 136, 101, 40, 43, 100, 40, 165, 319, 50, 160, 109, 50, 150, 50, 115, 131, 99, 160, 250, 250, 150, 150, 65, 85, 44, 150, 75, 105, 50, 275, 149, 90, 56, 220, 42, 129, 50, 110, 160, 35, 72, 95, 100, 115, 115, 79, 36, 75, 59, 99, 49, 113, 47, 110, 199, 60, 52, 155, 171, 39, 120, 115, 165, 69, 55, 133, 79, 160, 170, 45, 66, 52, 200, 80, 75, 125, 65, 79, 125, 105, 140, 70, 75, 36, 240, 200, 46, 120, 80, 120, 150, 200, 100, 73, 60, 110, 55, 110, 70, 60, 270, 100, 150, 150, 77, 59, 110, 110, 125, 110, 89, 75, 100, 250, 149, 50, 160, 79, 65, 95, 185, 68, 85, 150, 65, 55, 250, 89, 100, 300, 45, 133, 500, 68, 56, 75, 299, 51, 115, 180, 50, 80, 300, 79, 150, 94, 65, 83, 120, 500, 150, 149, 150, 75, 195, 80, 250, 225, 450, 35, 70, 80, 84, 172, 110, 55, 78, 115, 180, 139, 120, 77, 150, 67, 159, 100, 199, 75, 70, 49, 41, 150, 60, 40, 99, 40, 100, 50, 110, 375, 229, 175, 40, 41, 110, 150, 165, 239, 125, 329, 175, 150, 200, 75, 89, 120, 35, 100, 70, 114, 200, 199, 199, 40, 200, 140, 50, 375, 250, 40, 99, 140, 150, 75, 55, 145, 95, 69, 175, 350, 119, 160, 55, 48, 85, 97, 110, 91, 150, 80, 60, 55, 163, 54, 46, 125, 150, 47, 120, 67, 73, 128, 121, 250, 80, 77, 117, 75, 99, 279, 140, 95, 149, 250, 150, 120, 85, 90, 45, 100, 89, 199, 76, 143, 40, 125, 110, 300, 99, 125, 80, 150, 40, 250, 450, 50, 75, 139, 200, 65, 115, 70, 50, 85, 275, 120, 185, 150, 145, 130, 88, 64, 185, 165, 200, 90, 140, 150, 92, 100, 135, 45, 250, 175, 175, 99, 235, 45, 85, 38, 65, 79, 239, 35, 239, 239, 239, 229, 45, 239, 179, 239, 100, 55, 95, 41, 40, 150, 150, 219, 142, 99, 41, 48, 52, 150, 160, 45, 178, 176, 70, 190, 62, 175, 125, 76, 225, 65, 70, 240, 70, 130, 50, 70, 169, 50, 120, 120, 90, 105, 130, 100, 288, 150, 85, 75, 200, 78, 234, 325, 119, 95, 255, 125, 99, 175, 75, 50, 99, 85, 137, 165, 92, 101, 95, 119, 195, 170, 150, 157, 250, 40, 80, 49, 101, 199, 175, 175, 50, 45, 110, 129, 139, 135, 90, 125, 75, 65, 190, 85, 119, 196, 90, 125, 65, 110, 100, 360, 65, 65, 160, 450, 75, 69, 203, 169, 79, 230, 65, 50, 100, 70, 175, 142, 190, 61, 80, 225, 100, 50, 109, 75, 60, 130, 65, 90, 50, 67, 100, 100, 300, 167, 180, 95, 85, 115, 150, 80, 325, 99, 90, 110, 105, 80, 120, 525, 150, 90, 130, 155, 90, 90, 199, 70, 36, 59, 185, 75, 75, 74, 161, 260, 60, 100, 175, 250, 95, 250, 76, 200, 199, 140, 57, 60, 80, 125, 150, 70, 125, 56, 170, 179, 75, 295, 150, 174, 67, 62, 150, 115, 40, 149, 125, 73, 200, 34, 89, 115, 200, 100, 58, 81, 95, 38, 150, 40, 99, 250, 69, 35, 65, 150, 270, 150, 119, 129, 175, 40, 125, 101, 49, 300, 75, 85, 185, 185, 110, 65, 185, 195, 85, 295, 120, 189, 123, 89, 140, 85, 169, 145, 145, 165, 99, 40, 115, 157, 72, 40, 90, 65, 79, 350, 71, 50, 115, 70, 110, 140, 89, 259, 160, 113, 125, 105, 125, 275, 65, 400, 159, 200, 225, 199, 75, 44, 100, 130, 408, 120, 80, 60, 125, 200, 199, 265, 80, 35, 135, 70, 135, 128, 60, 170, 85, 60, 349, 200, 110, 325, 180, 134, 150, 200, 110, 105, 165, 75, 104, 130, 130, 145, 60, 40, 99, 70, 109, 250, 129, 150, 198, 55, 61, 90, 45, 200, 60, 125, 35, 40, 100, 259, 89, 135, 200, 90, 200, 150, 110, 150, 115, 42, 75, 189, 125, 175, 99, 85, 185, 177, 100, 102, 120, 155, 67, 50, 100, 125, 39, 125, 133, 149, 110, 150, 205, 100, 69, 190, 79, 176, 199, 64, 118, 79, 75, 100, 65, 90, 65, 125, 124, 120, 300, 86, 50, 155, 90, 44, 90, 118, 42, 57, 150, 65, 40, 59, 300, 59, 45, 110, 65, 130, 111, 48, 65, 75, 99, 225, 65, 51, 175, 120, 49, 71, 119, 185, 115, 50, 80, 95, 40, 225, 65, 125, 89, 300, 200, 200, 129, 495, 125, 185, 92, 120, 80, 85, 55, 82, 150, 250, 150, 121, 350, 45, 200, 120, 175, 120, 49, 250, 250, 110, 199, 350, 124, 175, 295, 210, 125, 118, 53, 200, 40, 50, 135, 61, 42, 69, 105, 150, 240, 140, 90, 199, 65, 70, 60, 69, 250, 70, 175, 110, 50, 75, 55, 75, 90, 70, 140, 200, 120, 85, 200, 225, 230, 35, 95, 48, 50, 48, 55, 50, 40, 60, 40, 135, 150, 100, 45, 55, 80, 60, 399, 150, 125, 75, 202, 45, 102, 55, 155, 95, 525, 45, 150, 59, 75, 69, 300, 60, 50, 150, 85, 210, 55, 65, 50, 40, 250, 46, 76, 70, 129, 58, 76, 35, 40, 195, 80, 44, 95, 55, 40, 200, 39, 45, 140, 99, 175, 75, 50, 100, 200, 80, 60, 119, 69, 400, 95, 45, 73, 123, 130, 325, 95, 165, 250, 130, 200, 70, 105, 150, 105, 100, 150, 65, 125, 140, 300, 90, 109, 120, 125, 50, 200, 74, 100, 52, 135, 165, 75, 155, 144, 150, 65, 99, 100, 250, 169, 70, 105, 65, 50, 69, 110, 249, 57, 150, 99, 370, 147, 87, 46, 110, 100, 110, 140, 55, 130, 125, 73, 479, 41, 85, 175, 350, 89, 450, 113, 300, 38, 220, 120, 99, 115, 150, 38, 62, 120, 60, 195, 69, 138, 120, 41, 35, 250, 215, 115, 129, 200, 79, 160, 130, 70, 37, 55, 250, 75, 42, 155, 125, 99, 60, 45, 130, 40, 95, 140, 70, 250, 85, 85, 106, 90, 129, 100, 100, 120, 75, 140, 55, 85, 219, 185, 70, 100, 69, 40, 55, 150, 45, 280, 120, 90, 225, 159, 275, 325, 359, 99, 108, 67, 125, 124, 55, 200, 200, 175, 88, 57, 133, 55, 125, 80, 70, 120, 150, 90, 115, 51, 105, 225, 89, 61, 70, 69, 79, 83, 160, 40, 50, 45, 85, 100, 57, 53, 38, 139, 150, 280, 90, 50, 150, 155, 109, 150, 130, 275, 100, 215, 40, 103, 50, 54, 79, 50, 59, 85, 185, 85, 135, 85, 150, 75, 150, 150, 199, 88, 99, 75, 107, 89, 210, 57, 50, 150, 100, 152, 45, 49, 45, 122, 64, 135, 320, 130, 95, 150, 350, 120, 250, 106, 65, 175, 360, 119, 189, 68, 100, 40, 100, 165, 40, 175, 99, 50, 70, 85, 50, 54, 38, 41, 199, 235, 240, 70, 250, 91, 125, 55, 75, 44, 90, 100, 170, 140, 199, 156, 170, 110, 115, 70, 200, 82, 85, 69, 150, 150, 90, 159, 280, 325, 120, 61, 80, 90, 178, 119, 100, 100, 250, 240, 60, 65, 140, 265, 145, 100, 105, 85, 150, 100, 75, 60, 80, 137, 79, 120, 220, 300, 90, 48, 179, 58, 49, 110, 190, 450, 69, 250, 249, 125, 60, 179, 155, 65, 499, 250, 120, 50, 48, 45, 50, 75, 65, 90, 80, 43, 39, 75, 130, 85, 95, 90, 45, 60, 119, 150, 295, 130, 70, 71, 75, 85, 67, 75, 79, 72, 153, 60, 150, 142, 55, 249, 111, 179, 65, 63, 90, 143, 85, 67, 45, 150, 175, 90, 100, 53, 250, 85, 45, 65, 160, 100, 74, 50, 75, 150, 200, 67, 153, 98, 215, 60, 100, 131, 120, 75, 79, 120, 228, 85, 115, 130, 109, 200, 180, 35, 140, 110, 75, 50, 89, 175, 150, 96, 210, 221, 150, 350, 65, 325, 407, 60, 91, 41, 215, 57, 65, 149, 70, 290, 70, 90, 150, 100, 224, 125, 49, 150, 50, 55, 90, 349, 100, 115, 150, 55, 49, 95, 75, 45, 199, 195, 349, 270, 159, 196, 103, 92, 150, 294, 110, 76, 180, 100, 120, 90, 130, 84, 50, 76, 316, 115, 325, 160, 47, 200, 200, 75, 39, 300, 489, 150, 65, 120, 80, 53, 200, 50, 150, 120, 175, 49, 59, 79, 195, 249, 53, 189, 60, 135, 75, 120, 100, 95, 185, 99, 180, 350, 69, 50, 144, 85, 100, 240, 125, 165, 145, 65, 60, 122, 42, 55, 115, 95, 113, 185, 34, 80, 50, 55, 110, 115, 239, 63, 295, 125, 175, 90, 75, 99, 118, 75, 105, 56, 125, 80, 110, 75, 60, 55, 60, 200, 49, 200, 40, 75, 45, 245, 120, 51, 83, 55, 85, 109, 85, 179, 95, 95, 170, 110, 111, 125, 54, 79, 80, 89, 175, 85, 38, 38, 45, 229, 147, 35, 154, 150, 65, 250, 99, 45, 105, 45, 180, 130, 77, 450, 85, 67, 58, 149, 150, 80, 80, 130, 150, 180, 125, 150, 89, 42, 40, 70, 64, 75, 180, 139, 149, 85, 92, 129, 150, 125, 100, 198, 239, 215, 100, 180, 150, 199, 99, 40, 199, 69, 110, 100, 310, 110, 165, 85, 65, 149, 252, 75, 75, 125, 115, 90, 249, 140, 105, 65, 65, 55, 100, 73, 289, 75, 100, 120, 45, 155, 60, 330, 300, 65, 200, 85, 139, 135, 140, 185, 74, 162, 185, 400, 160, 95, 59, 200, 200, 100, 499, 189, 185, 79, 149, 105, 45, 125, 95, 175, 149, 189, 95, 61, 80, 99, 84, 125, 107, 190, 125, 45, 174, 170, 200, 95, 250, 80, 160, 45, 70, 75, 35, 200, 95, 250, 275, 70, 289, 375, 129, 81, 75, 250, 99, 225, 106, 55, 279, 94, 220, 110, 275, 125, 90, 122, 60, 99, 48, 159, 117, 45, 100, 40, 175, 40, 85, 195, 65, 250, 170, 440, 58, 45, 65, 299, 100, 99, 120, 149, 150, 100, 60, 153, 50, 172, 109, 180, 60, 175, 98, 199, 75, 125, 100, 225, 120, 295, 160, 40, 110, 43, 50, 56, 73, 175, 49, 44, 130, 132, 55, 250, 300, 35, 100, 175, 75, 60, 47, 200, 60, 50, 100, 80, 125, 125, 78, 75, 150, 100, 145, 180, 120, 90, 99, 55, 55, 80, 40, 133, 175, 163, 250, 117, 295, 105, 59, 60, 49, 141, 59, 50, 41, 399, 189, 48, 49, 175, 55, 53, 80, 150, 67, 80, 78, 50, 120, 75, 60, 75, 99, 100, 95, 200, 249, 80, 160, 50, 50, 100, 100, 60, 89, 97, 164, 57, 66, 199, 52, 70, 170, 62, 200, 75, 200, 160, 100, 100, 58, 120, 95, 150, 150, 95, 250, 37, 75, 67, 59, 227, 160, 125, 50, 80, 225, 180, 109, 100, 79, 105, 125, 47, 60, 120, 195, 60, 99, 300, 250, 105, 65, 42, 100, 120, 199, 85, 135, 50, 120, 160, 120, 120, 100, 72, 72, 200, 48, 95, 49, 65, 129, 113, 100, 175, 135, 200, 152, 140, 95, 80, 215, 140, 110, 100, 100, 94, 76, 150, 195, 49, 500, 45, 50, 295, 65, 90, 71, 155, 40, 50, 50, 199, 136, 80, 65, 200, 148, 100, 90, 239, 150, 300, 125, 60, 200, 50, 100, 50, 50, 198, 200, 55, 80, 165, 415, 235, 99, 180, 180, 100, 88, 56, 98, 93, 60, 250, 225, 400, 130, 249, 85, 60, 80, 129, 250, 110, 75, 199, 129, 75, 105, 49, 215, 85, 102, 85, 41, 280, 165, 40, 120, 60, 70, 130, 80, 145, 260, 86, 219, 90, 70, 85, 125, 60, 225, 100, 218, 200, 55, 90, 105, 195, 150, 185, 50, 70, 180, 65, 69, 500, 40, 85, 250, 69, 270, 53, 100, 52, 299, 175, 43, 50, 70, 78, 50, 200, 60, 150, 75, 150, 129, 220, 105, 125, 378, 61, 75, 80, 259, 70, 60, 65, 180, 180, 45, 112, 168, 130, 142, 199, 60, 85, 99, 37, 40, 45, 77, 55, 60, 40, 68, 85, 55, 45, 50, 54, 70, 150, 249, 90, 135, 55, 267, 350, 99, 40, 43, 45, 88, 40, 115, 65, 110, 47, 150, 249, 225, 195, 90, 64, 105, 215, 79, 155, 99, 57, 140, 69, 95, 150, 110, 175, 85, 76, 399, 79, 41, 85, 120, 65, 54, 60, 250, 125, 80, 105, 60, 239, 200, 250, 200, 75, 225, 110, 75, 40, 100, 55, 185, 165, 188, 140, 115, 150, 300, 132, 95, 85, 65, 150, 100, 119, 200, 90, 163, 68, 100, 169, 70, 90, 100, 65, 110, 46, 40, 80, 249, 110, 48, 50, 135, 59, 149, 35, 85, 120, 180, 299, 60, 45, 50, 151, 160, 55, 120, 65, 130, 70, 130, 117, 98, 120, 75, 60, 40, 60, 95, 124, 90, 70, 150, 93, 80, 76, 113, 130, 160, 89, 50, 150, 125, 85, 45, 170, 85, 462, 198, 198, 43, 65, 41, 89, 80, 80, 75, 75, 79, 499, 175, 110, 50, 50, 150, 50, 499, 189, 275, 100, 70, 95, 140, 75, 65, 350, 200, 214, 40, 39, 75, 100, 49, 185, 100, 130, 375, 69, 125, 85, 59, 110, 250, 175, 99, 175, 38, 77, 128, 49, 83, 80, 400, 450, 80, 82, 68, 200, 75, 120, 125, 110, 349, 85, 66, 75, 144, 550, 110, 51, 118, 70, 118, 135, 252, 300, 49, 40, 65, 160, 60, 35, 125, 105, 150, 73, 95, 75, 120, 199, 60, 88, 179, 120, 50, 110, 390, 269, 65, 150, 45, 105, 55, 105, 75, 38, 50, 70, 85, 70, 85, 180, 75, 47, 300, 150, 225, 149, 100, 59, 77, 245, 50, 120, 55, 110, 150, 71, 300, 90, 65, 408, 78, 95, 99, 77, 120, 125, 90, 86, 99, 115, 100, 95, 183, 150, 75, 150, 500, 100, 70, 99, 80, 79, 80, 200, 100, 200, 95, 135, 85, 275, 80, 108, 110, 95, 95, 160, 50, 45, 101, 174, 90, 65, 94, 39, 39, 65, 100, 100, 100, 150, 110, 80, 37, 175, 375, 249, 80, 90, 90, 250, 180, 95, 205, 87, 69, 125, 150, 98, 130, 122, 40, 100, 90, 99, 49, 80, 60, 79, 145, 138, 90, 95, 65, 90, 130, 70, 100, 40, 39, 75, 70, 250, 65, 40, 50, 78, 50, 72, 108, 108, 170, 125, 149, 125, 70, 120, 149, 150, 250, 375, 95, 129, 80, 45, 53, 125, 65, 99, 45, 190, 80, 229, 55, 189, 449, 202, 250, 52, 120, 90, 74, 75, 147, 50, 250, 40, 200, 80, 65, 70, 150, 135, 51, 335, 198, 120, 39, 87, 145, 80, 90, 125, 75, 140, 75, 61, 160, 69, 199, 95, 120, 200, 190, 65, 160, 235, 35, 65, 55, 50, 100, 195, 100, 185, 135, 175, 345, 275, 230, 85, 130, 79, 110, 63, 35, 100, 120, 90, 350, 140, 90, 110, 40, 200, 60, 155, 75, 47, 139, 39, 79, 95, 93, 71, 88, 55, 115, 75, 135, 209, 185, 48, 78, 129, 126, 229, 110, 170, 55, 200, 140, 210, 65, 186, 100, 250, 89, 180, 50, 160, 75, 145, 119, 49, 300, 140, 199, 125, 95, 60, 249, 160, 175, 40, 79, 236, 120, 120, 54, 56, 60, 90, 260, 125, 65, 120, 55, 130, 96, 109, 99, 55, 300, 155, 133, 180, 135, 179, 100, 100, 45, 250, 350, 95, 218, 176, 89, 160, 89, 79, 70, 150, 63, 63, 55, 90, 164, 40, 250, 95, 90, 111, 120, 95, 175, 100, 100, 49, 116, 265, 333, 100, 155, 65, 125, 70, 59, 89, 59, 150, 369, 55, 45, 55, 55, 196, 69, 65, 100, 92, 365, 136, 300, 175, 80, 90, 150, 119, 450, 200, 99, 270, 190, 205, 39, 499, 275, 80, 105, 150, 70, 150, 146, 99, 125, 125, 182, 55, 255, 75, 125, 80, 125, 54, 170, 115, 65, 50, 229, 139, 300, 85, 139, 83, 49, 120, 79, 60, 175, 75, 50, 80, 110, 67, 70, 70, 153, 350, 90, 178, 369, 40, 160, 99, 45, 159, 250, 85, 160, 49, 69, 200, 62, 400, 80, 105, 87, 99, 109, 75, 175, 289, 209, 75, 35, 117, 80, 250, 50, 70, 150, 145, 221, 142, 65, 110, 80, 35, 150, 150, 47, 85, 100, 40, 85, 99, 105, 50, 72, 300, 48, 55, 100, 180, 300, 53, 160, 143, 164, 164, 48, 70, 159, 89, 100, 60, 42, 57, 43, 99, 105, 65, 125, 265, 100, 38, 88, 60, 159, 65, 150, 50, 70, 225, 61, 120, 63, 65, 143, 197, 89, 158, 125, 250, 119, 128, 169, 115, 70, 115, 100, 50, 200, 220, 45, 203, 180, 40, 130, 190, 58, 150, 180, 250, 150, 125, 49, 40, 40, 130, 85, 110, 119, 60, 110, 50, 110, 180, 75, 105, 105, 300, 60, 100, 120, 45, 255, 40, 240, 100, 110, 185, 147, 65, 200, 200, 100, 45, 75, 40, 74, 100, 95, 59, 180, 160, 139, 375, 135, 169, 200, 115, 45, 400, 65, 39, 80, 85, 150, 120, 100, 75, 91, 150, 46, 65, 500, 45, 155, 149, 60, 42, 198, 45, 130, 44, 250, 50, 195, 45, 37, 78, 80, 78, 35, 129, 49, 103, 150, 41, 76, 120, 167, 95, 35, 99, 150, 65, 150, 76, 198, 110, 265, 110, 70, 220, 80, 55, 115, 265, 228, 50, 280, 75, 120, 250, 70, 135, 110, 149, 49, 40, 70, 340, 75, 90, 49, 95, 155, 40, 47, 109, 198, 149, 101, 150, 135, 80, 84, 99, 100, 50, 175, 60, 170, 170, 75, 130, 88, 110, 200, 100, 190, 86, 75, 145, 75, 200, 86, 160, 59, 280, 89, 100, 75, 100, 95, 50, 44, 80, 65, 98, 131, 70, 35, 200, 34, 100, 85, 120, 37, 34, 175, 150, 48, 73, 85, 69, 170, 66, 200, 34, 69, 73, 150, 35, 85, 290, 145, 199, 200, 181, 75, 130, 125, 250, 175, 59, 180, 40, 156, 500, 65, 60, 150, 265, 279, 105, 110, 130, 500, 34, 75, 49, 65, 65, 300, 100, 55, 70, 49, 50, 158, 120, 44, 150, 209, 200, 80, 135, 250, 100, 50, 110, 160, 295, 60, 45, 80, 265, 225, 210, 220, 68, 135, 130, 400, 200, 76, 200, 45, 176, 85, 129, 113, 199, 86, 95, 100, 199, 146, 150, 98, 130, 200, 94, 150, 85, 110, 60, 48, 110, 60, 72, 120, 58, 150, 40, 89, 55, 150, 99, 38, 500, 142, 114, 175, 350, 60, 100, 60, 85, 36, 150, 330, 54, 53, 175, 48, 39, 70, 120, 125, 100, 79, 70, 95, 77, 75, 80, 120, 175, 114, 93, 199, 58, 185, 90, 50, 189, 50, 240, 131, 80, 225, 139, 109, 165, 45, 50, 90, 55, 130, 150, 75, 150, 75, 110, 64, 135, 55, 165, 132, 169, 77, 200, 85, 400, 200, 80, 108, 75, 91, 51, 60, 120, 110, 149, 160, 90, 250, 74, 230, 90, 200, 49, 47, 250, 250, 360, 200, 50, 85, 40, 85, 85, 239, 60, 87, 50, 85, 80, 90, 69, 128, 200, 220, 35, 135, 150, 38, 70, 350, 50, 95, 80, 150, 53, 54, 53, 135, 525, 50, 200, 99, 80, 150, 120, 123, 250, 100, 250, 98, 60, 165, 100, 40, 37, 75, 39, 80, 100, 40, 45, 55, 48, 49, 135, 200, 300, 70, 225, 80, 50, 110, 54, 125, 115, 60, 55, 79, 85, 80, 55, 66, 135, 140, 52, 130, 35, 55, 60, 43, 36, 166, 150, 250, 179, 97, 120, 350, 65, 63, 151, 70, 198, 100, 140, 49, 85, 250, 100, 55, 65, 75, 190, 70, 85, 57, 97, 80, 215, 89, 97, 97, 350, 159, 150, 70, 84, 300, 76, 130, 124, 45, 45, 200, 130, 95, 45, 117, 220, 100, 99, 38, 170, 68, 65, 37, 92, 125, 71, 40, 110, 47, 45, 50, 60, 60, 55, 58, 200, 50, 50, 129, 255, 177, 50, 49, 325, 109, 100, 280, 149, 220, 147, 105, 175, 60, 55, 65, 59, 100, 145, 100, 150, 59, 45, 170, 120, 68, 105, 65, 75, 125, 100, 48, 149, 290, 120, 45, 95, 45, 400, 130, 80, 45, 100, 200, 45, 60, 132, 60, 38, 240, 120, 119, 225, 79, 85, 200, 150, 215, 67, 79, 139, 105, 50, 60, 75, 50, 190, 230, 80, 199, 64, 70, 264, 100, 135, 85, 85, 55, 295, 45, 120, 90, 89, 50, 150, 99, 65, 280, 120, 70, 100, 50, 95, 140, 180, 200, 74, 95, 114, 279, 80, 50, 190, 90, 399, 110, 85, 105, 89, 200, 63, 95, 58, 120, 180, 150, 65, 50, 105, 70, 53, 50, 205, 142, 52, 117, 230, 75, 89, 200, 89, 41, 75, 90, 135, 40, 93, 100, 350, 150, 300, 86, 180, 135, 100, 179, 116, 115, 60, 137, 190, 150, 165, 275, 60, 125, 41, 85, 150, 150, 143, 36, 75, 200, 150, 87, 130, 120, 100, 55, 59, 100, 100, 375, 105, 165, 150, 72, 225, 200, 145, 60, 90, 128, 50, 300, 200, 59, 85, 77, 113, 54, 50, 40, 115, 218, 120, 119, 100, 69, 190, 120, 140, 75, 110, 38, 375, 90, 260, 98, 79, 175, 200, 60, 125, 60, 100, 225, 110, 195, 55, 55, 99, 85, 100, 69, 46, 165, 40, 115, 349, 259, 137, 160, 200, 52, 160, 200, 550, 100, 175, 275, 100, 60, 99, 56, 180, 45, 48, 115, 50, 135, 80, 87, 171, 225, 100, 60, 85, 249, 35, 100, 159, 196, 40, 95, 55, 122, 55, 90, 75, 200, 136, 50, 45, 150, 40, 90, 80, 40, 220, 81, 85, 130, 75, 73, 56, 175, 125, 75, 69, 60, 80, 60, 225, 80, 55, 36, 55, 55, 80, 149, 350, 35, 50, 50, 100, 150, 190, 80, 380, 125, 235, 67, 232, 40, 96, 120, 120, 72, 90, 65, 41, 175, 100, 100, 65, 70, 80, 160, 180, 199, 60, 49, 94, 56, 47, 89, 95, 60, 125, 80, 75, 175, 85, 144, 99, 141, 50, 50, 35, 169, 119, 115, 115, 200, 93, 160, 100, 65, 64, 95, 220, 70, 225, 184, 175, 69, 175, 91, 122, 250, 125, 120, 233, 220, 105, 165, 175, 100, 90, 95, 175, 46, 98, 95, 34, 79, 130, 75, 61, 99, 110, 99, 42, 50, 82, 206, 69, 164, 95, 150, 75, 130, 95, 150, 550, 250, 100, 68, 140, 99, 97, 75, 150, 80, 98, 165, 125, 124, 100, 275, 158, 100, 70, 77, 90, 210, 250, 116, 190, 65, 200, 55, 89, 125, 197, 50, 37, 189, 39, 60, 45, 135, 60, 52, 144, 73, 119, 170, 135, 35, 103, 50, 55, 99, 43, 75, 117, 195, 100, 34, 44, 210, 150, 84, 69, 88, 98, 60, 75, 100, 115, 200, 130, 230, 190, 100, 55, 85, 95, 139, 100, 120, 174, 53, 79, 173, 55, 60, 130, 50, 120, 66, 110, 155, 85, 130, 200, 170, 300, 40, 280, 60, 200, 35, 140, 399, 75, 65, 100, 149, 85, 125, 47, 130, 249, 360, 40, 55, 88, 175, 200, 190, 75, 224, 120, 55, 106, 84, 195, 175, 53, 55, 47, 53, 95, 148, 459, 350, 90, 120, 91, 170, 60, 90, 135, 91, 52, 400, 150, 65, 220, 110, 44, 65, 40, 175, 77, 59, 85, 240, 49, 49, 45, 80, 99, 45, 59, 82, 110, 95, 58, 69, 50, 60, 73, 139, 55, 48, 97, 99, 175, 159, 153, 243, 98, 60, 100, 45, 125, 47, 99, 150, 45, 150, 140, 200, 400, 35, 240, 189, 225, 175, 185, 107, 85, 57, 195, 40, 100, 300, 150, 155, 45, 59, 65, 91, 118, 199, 34, 40, 100, 51, 87, 215, 71, 200, 225, 250, 34, 79, 60, 115, 165, 46, 85, 99, 206, 65, 55, 60, 127, 50, 120, 165, 119, 150, 65, 103, 65, 80, 160, 75, 35, 55, 55, 46, 95, 115, 75, 47, 70, 70, 100, 135, 145, 125, 89, 125, 135, 125, 70, 65, 489, 99, 120, 160, 125, 300, 115, 100, 47, 130, 55, 230, 125, 85, 110, 100, 80, 54, 60, 120, 100, 100, 90, 60, 89, 85, 350, 285, 125, 109, 545, 208, 100, 48, 60, 78, 270, 175, 180, 70, 185, 59, 65, 100, 80, 100, 200, 64, 60, 50, 160, 55, 63, 90, 98, 110, 170, 95, 118, 43, 100, 45, 199, 146, 239, 195, 100, 103, 159, 48, 190, 80, 96, 160, 50, 85, 60, 190, 180, 235, 175, 160, 145, 37, 140, 45, 52, 40, 100, 40, 74, 62, 150, 49, 200, 45, 75, 180, 355, 275, 49, 58, 179, 95, 158, 165, 169, 135, 85, 53, 185, 260, 160, 100, 240, 300, 250, 60, 69, 75, 60, 80, 110, 160, 65, 72, 175, 80, 150, 144, 95, 100, 56, 150, 95, 95, 70, 60, 170, 200, 175, 45, 175, 90, 78, 100, 175, 99, 250, 91, 200, 40, 75, 50, 110, 69, 103, 100, 73, 180, 79, 99, 100, 125, 149, 58, 75, 250, 160, 70, 289, 75, 35, 82, 35, 70, 75, 120, 200, 65, 178, 45, 99, 325, 209, 249, 135, 65, 99, 47, 250, 90, 53, 120, 54, 125, 126, 50, 110, 49, 98, 289, 110, 45, 169, 275, 50, 36, 110, 105, 75, 100, 75, 155, 68, 109, 88, 500, 80, 100, 55, 75, 184, 56, 160, 77, 65, 35, 98, 400, 64, 70, 250, 55, 249, 175, 69, 198, 69, 60, 103, 135, 245, 200, 72, 123, 90, 50, 45, 41, 75, 105, 55, 100, 65, 149, 50, 78, 75, 133, 150, 140, 200, 122, 85, 45, 125, 100, 60, 80, 150, 160, 59, 85, 199, 35, 70, 169, 115, 150, 150, 155, 68, 300, 75, 350, 150, 155, 81, 100, 185, 65, 385, 130, 153, 150, 95, 150, 350, 120, 120, 100, 45, 74, 110, 110, 75, 94, 55, 99, 69, 42, 55, 119, 105, 55, 46, 36, 45, 150, 275, 100, 35, 35, 130, 150, 73, 160, 54, 75, 380, 115, 100, 80, 109, 180, 160, 130, 90, 63, 126, 195, 45, 47, 200, 160, 55, 110, 200, 109, 149, 220, 75, 65, 300, 90, 69, 79, 190, 80, 175, 65, 63, 99, 250, 90, 120, 39, 117, 160, 100, 175, 152, 45, 59, 70, 57, 200, 45, 61, 55, 74, 100, 178, 80, 75, 158, 88, 95, 225, 240, 110, 225, 140, 100, 39, 110, 105, 49, 45, 450, 99, 169, 130, 255, 80, 70, 219, 60, 60, 122, 44, 125, 55, 47, 80, 65, 75, 45, 69, 199, 55, 50, 125, 125, 88, 215, 134, 125, 60, 56, 85, 100, 150, 108, 122, 45, 150, 160, 140, 210, 180, 80, 79, 180, 190, 139, 163, 365, 200, 84, 58, 42, 90, 75, 86, 251, 85, 285, 325, 220, 58, 58, 50, 145, 126, 230, 129, 119, 50, 100, 65, 50, 65, 200, 150, 50, 90, 180, 50, 122, 225, 51, 90, 79, 275, 100, 199, 75, 145, 161, 45, 43, 95, 60, 180, 150, 49, 49, 249, 70, 60, 49, 50, 105, 89, 115, 65, 65, 99, 83, 45, 55, 100, 89, 37, 60, 38, 325, 89, 68, 210, 150, 103, 45, 90, 227, 100, 75, 97, 50, 60, 50, 229, 150, 50, 95, 62, 115, 55, 90, 71, 70, 115, 65, 120, 100, 59, 65, 89, 80, 127, 170, 120, 44, 71, 150, 53, 100, 175, 170, 51, 95, 94, 69, 105, 79, 40, 62, 110, 185, 177, 110, 80, 53, 95, 115, 130, 79, 107, 116, 47, 100, 75, 160, 275, 60, 70, 100, 64, 47, 250, 190, 99, 88, 250, 250, 150, 484, 50, 141, 199, 140, 79, 142, 80, 47, 65, 149, 300, 159, 60, 50, 220, 99, 120, 110, 50, 60, 110, 75, 100, 65, 125, 40, 105, 115, 75, 429, 60, 84, 75, 50, 39, 160, 175, 47, 95, 145, 250, 38, 65, 150, 139, 127, 290, 100, 100, 65, 200, 100, 148, 160, 147, 130, 157, 95, 120, 110, 130, 90, 138, 125, 395, 100, 150, 150, 85, 115, 50, 45, 160, 40, 70, 80, 110, 225, 69, 35, 300, 350, 45, 150, 108, 89, 70, 55, 200, 120, 165, 155, 95, 139, 65, 57, 42, 42, 90, 69, 376, 75, 99, 85, 69, 60, 48, 145, 57, 85, 45, 250, 40, 70, 70, 61, 300, 92, 200, 150, 120, 45, 170, 250, 195, 230, 130, 78, 53, 100, 150, 89, 105, 80, 57, 75, 151, 197, 100, 88, 60, 375, 95, 82, 40, 45, 60, 105, 159, 208, 105, 69, 100, 80, 72, 120, 41, 50, 134, 150, 300, 150, 60, 45, 142, 67, 69, 95, 195, 72, 289, 80, 69, 95, 175, 35, 175, 88, 80, 49, 45, 100, 50, 199, 81, 90, 80, 175, 60, 175, 350, 57, 120, 129, 76, 40, 250, 55, 130, 219, 125, 200, 160, 51, 65, 100, 49, 195, 115, 65, 65, 60, 175, 80, 72, 100, 100, 47, 125, 56, 105, 80, 180, 79, 150, 250, 169, 199, 120, 199, 160, 100, 550, 40, 95, 150, 189, 71, 40, 55, 150, 160, 60, 229, 99, 136, 120, 119, 99, 60, 48, 69, 60, 350, 150, 140, 200, 235, 200, 40, 90, 250, 49, 60, 224, 115, 49, 115, 95, 98, 110, 50, 50, 130, 85, 115, 53, 80, 35, 165, 60, 379, 60, 329, 75, 100, 200, 115, 85, 40, 64, 134, 86, 330, 170, 90, 65, 60, 75, 265, 148, 95, 94, 109, 490, 200, 99, 75, 146, 77, 35, 140, 100, 45, 185, 60, 50, 50, 47, 100, 400, 75, 145, 65, 110, 85, 51, 140, 85, 165, 116, 70, 46, 70, 70, 140, 168, 85, 50, 99, 65, 145, 50, 39, 200, 69, 300, 69, 40, 160, 99, 75, 60, 69, 75, 179, 80, 196, 43, 50, 99, 80, 118, 55, 200, 125, 145, 99, 80, 195, 42, 53, 125, 99, 210, 177, 44, 85, 150, 70, 125, 55, 69, 215, 235, 42, 180, 125, 160, 100, 39, 71, 100, 180, 79, 60, 160, 110, 193, 50, 250, 72, 50, 90, 325, 79, 180, 160, 100, 278, 100, 200, 39, 99, 110, 250, 199, 150, 55, 60, 65, 45, 150, 50, 120, 54, 150, 100, 130, 95, 36, 115, 199, 195, 350, 72, 145, 48, 225, 149, 75, 46, 130, 150, 145, 95, 49, 220, 200, 150, 187, 85, 54, 175, 38, 53, 145, 173, 150, 200, 120, 54, 50, 45, 59, 142, 120, 70, 200, 299, 80, 60, 99, 46, 60, 175, 75, 70, 190, 60, 45, 450, 99, 37, 100, 197, 90, 188, 110, 175, 100, 295, 99, 70, 55, 65, 99, 60, 300, 210, 195, 96, 80, 160, 199, 35, 80, 55, 207, 59, 75, 49, 115, 40, 93, 159, 150, 200, 50, 120, 90, 50, 100, 35, 94, 190, 86, 55, 226, 186, 170, 100, 90, 50, 119, 80, 64, 47, 100, 49, 100, 47, 150, 165, 70, 49, 199, 90, 60, 125, 100, 80, 200, 50, 37, 135, 50, 60, 40, 85, 85, 165, 200, 60, 400, 124, 75, 106, 190, 80, 50, 78, 79, 75, 205, 50, 99, 44, 260, 275, 45, 42, 43, 200, 79, 70, 100, 175, 40, 300, 180, 180, 149, 58, 235, 206, 199, 40, 120, 38, 100, 100, 175, 171, 169, 60, 94, 88, 65, 90, 140, 198, 78, 65, 65, 199, 99, 70, 75, 350, 75, 199, 70, 120, 65, 295, 135, 40, 70, 60, 109, 50, 99, 105, 70, 150, 70, 349, 70, 150, 232, 47, 45, 200, 278, 195, 109, 65, 80, 65, 100, 180, 80, 105, 45, 315, 90, 215, 59, 200, 90, 545, 125, 100, 275, 45, 199, 150, 125, 168, 125, 150, 48, 85, 80, 43, 60, 179, 156, 153, 145, 75, 199, 60, 70, 36, 210, 40, 140, 120, 95, 90, 199, 70, 169, 140, 110, 130, 99, 200, 170, 133, 75, 125, 325, 50, 120, 100, 45, 94, 60, 63, 175, 45, 123, 185, 55, 133, 75, 450, 90, 400, 62, 287, 200, 58, 325, 130, 70, 85, 52, 60, 275, 75, 475, 80, 200, 70, 150, 50, 69, 44, 60, 180, 95, 70, 195, 45, 135, 145, 80, 150, 128, 60, 89, 60, 145, 97, 45, 110, 65, 175, 80, 325, 104, 150, 45, 60, 120, 200, 235, 180, 160, 42, 175, 164, 147, 120, 88, 120, 63, 110, 60, 165, 105, 150, 75, 60, 90, 55, 150, 41, 115, 100, 155, 52, 80, 75, 150, 40, 95, 50, 158, 60, 50, 44, 184, 175, 300, 99, 137, 49, 39, 59, 229, 125, 39, 130, 80, 125, 185, 90, 120, 65, 225, 100, 195, 69, 75, 150, 40, 260, 60, 150, 254, 295, 45, 50, 80, 80, 88, 150, 70, 98, 250, 238, 100, 265, 55, 160, 100, 250, 77, 180, 150, 150, 165, 125, 150, 51, 53, 95, 195, 125, 299, 146, 55, 50, 65, 165, 41, 70, 55, 250, 73, 63, 183, 250, 55, 85, 150, 305, 80, 150, 64, 125, 150, 70, 90, 130, 390, 160, 43, 119, 50, 115, 73, 85, 89, 160, 49, 55, 119, 85, 350, 76, 46, 79, 350, 205, 190, 120, 135, 85, 80, 49, 51, 149, 270, 49, 75, 55, 70, 54, 55, 142, 50, 50, 109, 100, 40, 100, 99, 125, 75, 250, 79, 90, 80, 85, 55, 150, 250, 50, 60, 60, 75, 175, 148, 77, 118, 350, 60, 105, 100, 50, 65, 245, 80, 40, 40, 254, 80, 299, 67, 110, 150, 80, 52, 200, 37, 200, 45, 119, 60, 259, 55, 90, 98, 137, 70, 60, 200, 50, 45, 125, 45, 112, 105, 175, 96, 78, 120, 49, 66, 95, 43, 70, 265, 44, 35, 55, 100, 123, 100, 200, 50, 75, 225, 51, 45, 125, 88, 70, 55, 104, 90, 59, 55, 175, 199, 150, 145, 220, 105, 185, 45, 115, 200, 160, 35, 200, 129, 120, 105, 36, 74, 68, 122, 71, 50, 138, 39, 158, 195, 80, 38, 134, 70, 50, 79, 150, 50, 46, 65, 51, 176, 60, 95, 60, 125, 170, 350, 40, 42, 103, 165, 128, 250, 60, 465, 100, 40, 45, 85, 85, 65, 55, 225, 200, 55, 180, 115, 185, 50, 218, 99, 99, 100, 150, 75, 250, 78, 117, 179, 49, 85, 350, 125, 80, 220, 100, 40, 45, 49, 125, 52, 110, 38, 60, 55, 119, 121, 89, 80, 60, 90, 115, 350, 85, 55, 61, 95, 35, 150, 350, 165, 45, 200, 75, 279, 400, 80, 140, 101, 43, 424, 170, 60, 125, 115, 36, 49, 108, 40, 50, 55, 46, 150, 39, 100, 300, 50, 100, 99, 175, 125, 100, 70, 52, 105, 110, 80, 320, 40, 104, 37, 40, 150, 180, 90, 36, 145, 68, 67, 175, 100, 180, 160, 130, 70, 300, 45, 69, 290, 149, 100, 100, 95, 200, 70, 75, 49, 65, 100, 50, 79, 188, 50, 105, 225, 185, 90, 150, 125, 60, 42, 130, 66, 109, 90, 89, 250, 278, 70, 275, 195, 50, 45, 62, 150, 98, 236, 250, 200, 195, 90, 128, 44, 75, 100, 90, 60, 250, 349, 101, 120, 86, 40, 106, 40, 52, 147, 200, 37, 70, 135, 150, 108, 225, 59, 115, 35, 55, 280, 100, 55, 70, 219, 45, 60, 150, 150, 50, 119, 160, 60, 125, 98, 128, 100, 120, 90, 147, 60, 115, 110, 155, 275, 150, 159, 200, 135, 89, 80, 60, 45, 99, 120, 219, 65, 215, 90, 51, 170, 90, 79, 39, 65, 80, 120, 52, 120, 315, 125, 399, 72, 239, 200, 110, 80, 118, 37, 77, 100, 95, 55, 60, 240, 287, 290, 85, 69, 196, 154, 113, 45, 70, 70, 100, 102, 350, 136, 115, 160, 130, 148, 110, 87, 72, 120, 450, 84, 75, 110, 148, 225, 122, 190, 120, 200, 80, 149, 60, 175, 55, 77, 55, 50, 350, 50, 100, 319, 120, 150, 250, 400, 125, 180, 90, 200, 100, 70, 199, 120, 60, 199, 130, 60, 69, 350, 93, 150, 60, 180, 116, 225, 124, 140, 84, 125, 63, 85, 425, 50, 215, 60, 200, 135, 85, 195, 352, 225, 60, 35, 60, 90, 274, 69, 65, 278, 60, 79, 100, 100, 210, 180, 165, 225, 150, 90, 77, 145, 60, 250, 90, 220, 46, 55, 250, 55, 225, 120, 89, 40, 69, 55, 152, 57, 37, 42, 100, 226, 60, 300, 80, 150, 225, 69, 61, 100, 399, 90, 40, 60, 212, 200, 115, 185, 130, 165, 160, 185, 250, 150, 70, 210, 113, 97, 85, 550, 260, 37, 85, 85, 100, 65, 90, 115, 160, 325, 80, 90, 65, 150, 200, 80, 125, 139, 198, 40, 60, 75, 35, 162, 50, 75, 50, 130, 75, 60, 125, 80, 120, 150, 37, 130, 69, 120, 300, 70, 160, 60, 70, 55, 94, 105, 50, 87, 299, 100, 52, 80, 55, 81, 185, 60, 37, 70, 69, 191, 80, 250, 70, 200, 135, 49, 190, 80, 120, 130, 75, 120, 72, 150, 110, 70, 179, 45, 95, 450, 140, 89, 88, 55, 50, 95, 124, 165, 100, 88, 200, 127, 133, 35, 69, 250, 35, 375, 135, 175, 175, 60, 140, 80, 160, 70, 145, 225, 68, 90, 102, 60, 49, 70, 150, 119, 375, 175, 132, 200, 150, 45, 150, 60, 250, 36, 130, 99, 50, 155, 166, 40, 135, 140, 120, 37, 50, 103, 125, 120, 65, 79, 189, 250, 100, 105, 36, 99, 95, 48, 126, 135, 100, 126, 150, 49, 88, 139, 65, 40, 250, 93, 125, 85, 210, 60, 278, 75, 85, 35, 60, 225, 250, 60, 62, 250, 150, 180, 265, 173, 60, 85, 150, 250, 60, 256, 70, 70, 65, 72, 40, 80, 230, 119, 389, 180, 40, 135, 139, 50, 54, 99, 99, 82, 65, 225, 120, 165, 149, 248, 44, 150, 89, 275, 200, 115, 100, 91, 200, 39, 275, 50, 79, 80, 110, 167, 145, 174, 119, 62, 60, 50, 139, 200, 43, 80, 180, 54, 75, 200, 95, 80, 63, 275, 70, 70, 400, 100, 100, 36, 175, 93, 150, 499, 175, 129, 225, 68, 250, 49, 400, 80, 135, 220, 60, 50, 175, 140, 54, 91, 200, 70, 77, 100, 70, 250, 175, 106, 49, 200, 100, 150, 45, 58, 94, 75, 95, 79, 40, 34, 45, 190, 138, 75, 110, 264, 120, 298, 150, 398, 155, 120, 160, 150, 100, 150, 85, 85, 45, 165, 64, 60, 101, 50, 100, 53, 44, 90, 215, 150, 150, 325, 155, 100, 115, 59, 110, 150, 75, 100, 175, 90, 150, 148, 100, 188, 43, 110, 200, 120, 42, 60, 40, 140, 116, 181, 70, 169, 105, 55, 163, 75, 225, 110, 55, 102, 130, 350, 53, 69, 130, 140, 100, 125, 125, 60, 88, 39, 48, 60, 75, 55, 51, 54, 52, 117, 62, 63, 120, 45, 52, 42, 175, 142, 80, 42, 90, 50, 52, 125, 105, 100, 45, 50, 60, 80, 180, 70, 60, 40, 99, 125, 34, 100, 115, 170, 200, 175, 100, 50, 220, 50, 275, 200, 115, 60, 54, 55, 44, 70, 135, 138, 115, 150, 150, 170, 140, 65, 102, 175, 275, 145, 239, 65, 250, 90, 85, 170, 60, 50, 152, 62, 70, 150, 100, 110, 60, 73, 100, 58, 200, 70, 140, 45, 98, 150, 299, 60, 140, 150, 70, 40, 45, 67, 290, 150, 159, 77, 175, 85, 60, 55, 48, 200, 56, 114, 200, 125, 60, 40, 105, 70, 108, 60, 130, 135, 79, 146, 57, 250, 150, 85, 67, 35, 100, 47, 46, 50, 65, 110, 48, 45, 140, 45, 137, 170, 198, 100, 70, 42, 139, 180, 60, 275, 59, 167, 95, 50, 200, 100, 94, 135, 550, 80, 68, 63, 83, 60, 155, 75, 35, 70, 195, 75, 98, 100, 57, 200, 350, 145, 170, 180, 200, 60, 140, 89, 150, 127, 110, 123, 81, 44, 100, 305, 85, 65, 90, 50, 100, 176, 100, 187, 70, 76, 43, 65, 50, 37, 48, 300, 135, 135, 72, 120, 128, 100, 190, 150, 50, 175, 229, 95, 84, 80, 120, 100, 210, 260, 99, 125, 80, 69, 48, 40, 135, 103, 110, 50, 125, 129, 129, 129, 190, 65, 99, 60, 89, 75, 187, 95, 160, 140, 90, 200, 48, 69, 45, 90, 45, 110, 45, 125, 325, 55, 39, 85, 80, 124, 120, 120, 198, 55, 100, 225, 57, 95, 200, 80, 116, 45, 150, 120, 99, 150, 210, 55, 108, 50, 500, 42, 87, 45, 150, 170, 75, 200, 60, 59, 49, 150, 77, 99, 120, 60, 250, 99, 42, 90, 48, 55, 40, 200, 100, 107, 225, 101, 255, 320, 87, 60, 199, 320, 88, 115, 85, 100, 100, 135, 150, 250, 125, 160, 95, 250, 175, 150, 110, 92, 95, 280, 275, 60, 110, 65, 200, 59, 55, 60, 199, 120, 35, 79, 65, 65, 85, 250, 246, 150, 250, 34, 80, 35, 130, 350, 60, 65, 100, 219, 90, 46, 200, 160, 350, 88, 175, 105, 160, 200, 97, 89, 225, 130, 50, 125, 149, 200, 60, 200, 55, 78, 275, 140, 214, 65, 75, 45, 95, 111, 210, 100, 145, 50, 136, 200, 180, 40, 40, 56, 135, 80, 50, 298, 55, 87, 100, 125, 115, 50, 449, 110, 149, 130, 75, 350, 62, 110, 80, 120, 57, 239, 84, 44, 100, 500, 46, 140, 41, 35, 114, 57, 40, 60, 137, 150, 80, 50, 55, 39, 150, 197, 65, 50, 130, 200, 45, 66, 60, 399, 75, 279, 51, 130, 47, 85, 99, 60, 170, 45, 70, 198, 87, 250, 152, 210, 135, 69, 55, 90, 45, 80, 37, 275, 150, 200, 230, 149, 53, 70, 275, 56, 268, 75, 82, 65, 71, 89, 59, 50, 100, 55, 69, 35, 108, 100, 75, 99, 158, 50, 250, 299, 65, 90, 120, 150, 61, 175, 150, 80, 100, 75, 500, 115, 150, 110, 160, 230, 120, 110, 80, 199, 280, 140, 50, 200, 56, 80, 99, 65, 199, 45, 69, 65, 249, 220, 95, 34, 190, 85, 38, 58, 179, 40, 45, 150, 200, 125, 50, 70, 88, 122, 50, 60, 60, 53, 150, 75, 129, 250, 98, 99, 120, 120, 60, 40, 89, 49, 60, 500, 75, 150, 120, 165, 72, 120, 275, 130, 90, 105, 190, 82, 69, 99, 58, 100, 121, 95, 389, 75, 150, 35, 45, 150, 190, 199, 35, 75, 40, 99, 75, 40, 91, 55, 120, 69, 60, 333, 50, 60, 150, 150, 89, 135, 115, 100, 76, 110, 60, 40, 50, 49, 200, 65, 68, 80, 50, 78, 65, 55, 63, 43, 140, 72, 199, 90, 55, 120, 80, 154, 175, 80, 50, 125, 174, 40, 45, 50, 115, 130, 63, 275, 130, 154, 43, 225, 60, 60, 180, 150, 169, 83, 40, 75, 89, 150, 68, 200, 144, 75, 150, 105, 350, 150, 98, 122, 90, 450, 185, 39, 65, 60, 170, 60, 200, 50, 50, 222, 175, 90, 196, 170, 70, 78, 399, 120, 55, 95, 70, 60, 45, 120, 37, 125, 50, 75, 80, 60, 68, 300, 75, 89, 62, 100, 300, 83, 60, 118, 150, 92, 99, 124, 45, 175, 147, 75, 99, 120, 47, 157, 80, 69, 250, 175, 45, 80, 217, 129, 199, 195, 126, 59, 51, 150, 140, 95, 40, 85, 150, 60, 40, 69, 149, 120, 40, 200, 120, 50, 100, 250, 45, 85, 300, 35, 225, 78, 49, 130, 115, 59, 45, 70, 99, 105, 160, 114, 55, 120, 55, 160, 110, 60, 130, 115, 85, 55, 55, 90, 150, 350, 110, 164, 42, 325, 140, 75, 66, 66, 95, 115, 200, 84, 62, 35, 62, 115, 155, 165, 60, 400, 90, 90, 75, 55, 72, 120, 200, 99, 185, 90, 180, 75, 80, 90, 269, 60, 219, 150, 289, 55, 139, 65, 239, 110, 89, 150, 45, 55, 65, 63, 70, 120, 82, 56, 80, 139, 110, 60, 70, 69, 45, 80, 51, 50, 273, 212, 54, 170, 50, 85, 80, 50, 86, 79, 211, 70, 159, 119, 120, 71, 170, 70, 80, 50, 80, 129, 99, 49, 125, 150, 144, 55, 170, 185, 120, 174, 125, 60, 105, 85, 300, 150, 80, 140, 75, 300, 69, 53, 79, 409, 38, 185, 175, 115, 50, 75, 70, 85, 40, 50, 162, 250, 35, 295, 75, 45, 38, 61, 170, 80, 54, 80, 58, 120, 45, 120, 70, 215, 250, 72, 85, 80, 50, 255, 120, 61, 65, 55, 100, 60, 200, 66, 165, 150, 100, 90, 144, 210, 350, 68, 60, 60, 60, 60, 110, 69, 125, 59, 200, 70, 50, 65, 120, 95, 70, 192, 60, 175, 295, 50, 66, 226, 530, 106, 40, 34, 125, 245, 65, 65, 50, 77, 99, 39, 195, 50, 99, 75, 89, 265, 400, 160, 75, 175, 55, 105, 495, 34, 85, 133, 70, 70, 60, 300, 150, 72, 200, 80, 74, 190, 78, 250, 198, 220, 75, 110, 105, 250, 150, 260, 70, 115, 80, 47, 97, 95, 35, 65, 45, 99, 150, 50, 50, 151, 44, 38, 325, 139, 175, 168, 250, 100, 160, 90, 55, 70, 275, 79, 40, 105, 70, 64, 250, 75, 100, 50, 49, 130, 118, 150, 300, 49, 245, 60, 160, 275, 120, 150, 59, 150, 154, 174, 250, 200, 60, 85, 120, 47, 150, 140, 65, 140, 47, 100, 62, 188, 185, 252, 44, 180, 50, 180, 180, 170, 186, 90, 172, 60, 52, 184, 145, 65, 100, 74, 200, 175, 130, 48, 200, 205, 130, 149, 389, 67, 135, 83, 37, 65, 100, 270, 35, 67, 85, 225, 200, 389, 182, 54, 400, 50, 140, 105, 139, 100, 130, 77, 75, 80, 65, 220, 60, 180, 165, 75, 100, 120, 179, 49, 49, 90, 50, 499, 36, 275, 35, 50, 50, 150, 59, 85, 60, 110, 37, 90, 180, 111, 135, 120, 241, 69, 94, 130, 135, 70, 290, 95, 53, 58, 80, 198, 55, 150, 100, 129, 138, 40, 35, 50, 40, 57, 115, 80, 379, 48, 37, 175, 50, 450, 80, 125, 130, 104, 225, 178, 114, 130, 230, 60, 150, 150, 100, 55, 75, 65, 89, 159, 115, 125, 165, 129, 350, 90, 50, 110, 55, 300, 49, 158, 97, 95, 100, 65, 100, 50, 75, 55, 55, 175, 100, 75, 75, 35, 95, 175, 180, 55, 79, 50, 133, 496, 75, 100, 80, 123, 50, 195, 69, 150, 49, 95, 109, 105, 49, 120, 69, 85, 135, 49, 100, 48, 87, 85, 48, 90, 60, 50, 85, 70, 125, 45, 89, 42, 50, 120, 60, 62, 76, 47, 60, 200, 55, 60, 50, 250, 85, 174, 100, 75, 160, 88, 170, 95, 62, 45, 100, 60, 211, 100, 250, 125, 145, 116, 50, 175, 246, 44, 99, 62, 55, 69, 150, 42, 42, 50, 69, 145, 58, 175, 100, 135, 120, 49, 48, 435, 93, 60, 42, 88, 60, 58, 90, 65, 76, 74, 95, 210, 50, 93, 250, 269, 70, 90, 422, 250, 99, 65, 55, 149, 45, 40, 135, 75, 145, 160, 100, 58, 120, 80, 65, 115, 100, 245, 80, 110, 183, 55, 250, 120, 89, 100, 59, 50, 45, 50, 49, 55, 69, 275, 125, 300, 145, 170, 95, 150, 60, 70, 53, 130, 350, 60, 35, 179, 65, 75, 90, 114, 111, 58, 95, 220, 99, 93, 55, 50, 150, 35, 150, 75, 150, 65, 125, 59, 75, 125, 175, 367, 75, 137, 95, 150, 115, 45, 55, 180, 99, 200, 70, 125, 150, 164, 60, 130, 114, 225, 250, 99, 209, 59, 300, 160, 45, 250, 120, 47, 53, 55, 225, 78, 52, 60, 161, 60, 75, 38, 35, 130, 159, 83, 225, 70, 70, 125, 125, 198, 200, 102, 80, 350, 155, 310, 525, 200, 95, 98, 79, 79, 87, 210, 150, 260, 121, 129, 90, 100, 250, 250, 225, 45, 165, 85, 85, 75, 79, 125, 78, 113, 370, 150, 60, 65, 103, 65, 80, 50, 60, 137, 150, 120, 225, 50, 435, 100, 150, 69, 47, 134, 200, 150, 99, 148, 150, 45, 55, 105, 85, 131, 169, 58, 140, 200, 120, 75, 99, 120, 45, 89, 186, 70, 90, 134, 99, 85, 80, 45, 110, 139, 120, 110, 110, 38, 100, 250, 199, 40, 195, 52, 75, 55, 54, 90, 50, 53, 59, 99, 195, 160, 250, 150, 45, 149, 60, 99, 65, 225, 79, 54, 145, 300, 58, 70, 50, 55, 170, 124, 40, 111, 75, 325, 107, 60, 60, 60, 135, 41, 160, 80, 100, 59, 65, 175, 100, 119, 245, 90, 135, 200, 120, 119, 196, 80, 55, 88, 78, 50, 215, 300, 250, 180, 60, 280, 100, 75, 135, 50, 175, 50, 130, 70, 45, 250, 155, 100, 76, 240, 35, 50, 90, 65, 92, 58, 85, 250, 116, 120, 70, 100, 76, 150, 100, 75, 120, 42, 349, 70, 110, 65, 120, 38, 200, 225, 90, 100, 99, 55, 55, 58, 97, 165, 125, 106, 60, 99, 180, 129, 160, 86, 155, 185, 210, 130, 113, 160, 350, 222, 65, 90, 65, 55, 94, 185, 49, 80, 139, 400, 45, 75, 100, 100, 139, 40, 80, 100, 100, 150, 273, 225, 135, 400, 125, 175, 70, 175, 130, 150, 45, 50, 100, 90, 45, 175, 99, 60, 158, 60, 145, 110, 115, 50, 45, 180, 350, 125, 180, 70, 126, 190, 50, 50, 95, 115, 85, 40, 89, 55, 100, 125, 150, 300, 100, 150, 199, 275, 75, 150, 180, 43, 85, 115, 105, 70, 290, 148, 110, 43, 170, 65, 90, 159, 175, 60, 35, 148, 110, 115, 85, 120, 300, 200, 319, 100, 80, 120, 239, 71, 120, 95, 100, 65, 100, 47, 126, 114, 185, 165, 60, 225, 150, 55, 125, 59, 95, 75, 85, 75, 130, 70, 128, 130, 120, 181, 48, 60, 58, 99, 150, 225, 40, 130, 35, 150, 169, 37, 125, 62, 120, 55, 45, 120, 55, 140, 100, 80, 70, 189, 200, 45, 150, 150, 65, 150, 59, 43, 95, 190, 125, 135, 225, 380, 129, 133, 44, 142, 55, 185, 110, 222, 175, 115, 180, 80, 125, 125, 475, 86, 75, 153, 165, 55, 50, 45, 35, 90, 149, 175, 90, 108, 78, 250, 95, 85, 100, 160, 68, 85, 198, 290, 48, 75, 250, 50, 155, 220, 250, 378, 35, 45, 96, 78, 110, 37, 45, 60, 125, 115, 179, 99, 65, 75, 125, 295, 200, 200, 60, 135, 135, 100, 250, 125, 38, 220, 100, 150, 58, 160, 130, 200, 35, 45, 235, 150, 40, 525, 85, 253, 275, 110, 73, 170, 135, 120, 195, 115, 70, 200, 150, 125, 75, 95, 140, 83, 135, 231, 95, 84, 89, 55, 155, 77, 52, 95, 250, 45, 75, 100, 100, 130, 250, 250, 300, 100, 120, 55, 160, 85, 100, 85, 40, 150, 230, 40, 130, 50, 75, 43, 40, 255, 105, 130, 350, 35, 120, 68, 55, 49, 55, 298, 40, 150, 298, 250, 43, 265, 60, 400, 235, 52, 250, 130, 150, 50, 160, 300, 70, 200, 80, 80, 65, 60, 400, 100, 68, 120, 80, 100, 80, 92, 185, 200, 300, 99, 50, 115, 135, 165, 135, 50, 40, 540, 85, 130, 150, 90, 121, 40, 115, 250, 149, 50, 85, 100, 200, 200, 70, 55, 250, 75, 40, 50, 37, 90, 150, 140, 48, 80, 125, 188, 130, 100, 249, 345, 130, 90, 160, 125, 200, 200, 90, 148, 99, 148, 120, 36, 100, 200, 90, 80, 83, 71, 140, 180, 65, 69, 170, 70, 150, 67, 96, 57, 350, 120, 100, 190, 200, 70, 49, 70, 70, 237, 129, 72, 130, 175, 58, 115, 104, 49, 35, 85, 91, 80, 200, 80, 175, 45, 96, 180, 100, 129, 60, 95, 48, 250, 300, 44, 75, 88, 125, 250, 44, 174, 199, 128, 150, 65, 50, 175, 86, 325, 95, 50, 250, 165, 150, 90, 156, 110, 70, 154, 85, 299, 40, 85, 127, 80, 195, 35, 250, 120, 139, 100, 82, 125, 350, 40, 80, 40, 85, 185, 215, 45, 150, 65, 190, 60, 175, 60, 250, 288, 100, 95, 50, 200, 110, 60, 143, 97, 150, 138, 200, 50, 65, 245, 100, 60, 89, 51, 150, 110, 230, 119, 44, 80, 233, 150, 60, 70, 75, 109, 65, 210, 145, 40, 180, 40, 40, 128, 85, 173, 150, 200, 98, 69, 142, 180, 150, 100, 125, 175, 66, 150, 79, 66, 85, 125, 105, 56, 129, 180, 130, 35, 150, 120, 60, 90, 109, 70, 145, 225, 200, 40, 75, 85, 145, 150, 100, 100, 42, 299, 50, 200, 105, 60, 175, 114, 160, 184, 299, 103, 225, 249, 75, 175, 58, 250, 110, 65, 80, 150, 170, 70, 65, 55, 550, 90, 110, 95, 35, 70, 150, 80, 160, 196, 62, 36, 143, 120, 129, 48, 150, 250, 70, 100, 40, 110, 200, 250, 60, 60, 125, 85, 140, 67, 75, 140, 165, 100, 100, 55, 100, 108, 42, 100, 95, 140, 110, 300, 70, 85, 55, 125, 80, 300, 99, 71, 95, 123, 80, 95, 110, 100, 75, 150, 55, 120, 165, 150, 58, 150, 60, 250, 315, 125, 80, 80, 69, 200, 350, 150, 50, 150, 230, 90, 75, 89, 150, 65, 94, 95, 159, 150, 159, 80, 190, 59, 190, 200, 69, 70, 170, 133, 60, 50, 90, 235, 59, 100, 51, 65, 95, 50, 68, 35, 110, 70, 65, 145, 125, 250, 275, 125, 55, 75, 65, 84, 90, 150, 185, 47, 85, 60, 200, 160, 50, 107, 150, 65, 40, 52, 358, 219, 130, 48, 60, 100, 48, 125, 118, 116, 55, 55, 85, 80, 40, 75, 69, 70, 35, 50, 100, 80, 75, 48, 40, 379, 50, 62, 54, 75, 66, 44, 65, 70, 128, 128, 50, 150, 75, 60, 80, 40, 60, 125, 75, 199, 100, 385, 47, 70, 265, 60, 60, 219, 80, 150, 80, 60, 125, 72, 64, 149, 99, 225, 265, 200, 80, 111, 150, 55, 85, 400, 60, 90, 220, 120, 64, 40, 70, 169, 75, 139, 38, 58, 43, 60, 55, 100, 99, 50, 47, 55, 190, 50, 80, 150, 500, 225, 41, 140, 85, 105, 115, 120, 100, 250, 150, 60, 75, 50, 50, 160, 125, 250, 110, 95, 160, 118, 70, 125, 130, 80, 248, 48, 175, 67, 80, 180, 98, 40, 200, 125, 90, 100, 485, 43, 175, 108, 80, 100, 89, 95, 46, 200, 120, 130, 225, 125, 55, 175, 75, 80, 320, 300, 78, 100, 213, 141, 100, 175, 225, 87, 78, 199, 125, 100, 37, 78, 98, 70, 188, 75, 60, 63, 175, 95, 135, 126, 70, 150, 395, 165, 69, 47, 200, 58, 90, 47, 95, 180, 54, 400, 175, 138, 110, 245, 125, 45, 100, 195, 101, 49, 70, 100, 100, 249, 99, 60, 459, 70, 60, 497, 130, 59, 60, 350, 75, 160, 550, 60, 100, 100, 105, 75, 52, 42, 120, 175, 80, 220, 101, 110, 125, 75, 130, 185, 60, 150, 175, 500, 130, 67, 65, 70, 130, 51, 45, 43, 55, 175, 45, 70, 150, 65, 140, 200, 195, 225, 150, 40, 105, 195, 225, 94, 220, 187, 45, 89, 97, 49, 147, 100, 120, 100, 80, 83, 35, 133, 92, 35, 95, 73, 255, 200, 225, 159, 195, 495, 130, 135, 100, 59, 150, 65, 175, 380, 170, 50, 78, 200, 80, 99, 125, 165, 159, 99, 50, 96, 65, 65, 250, 193, 110, 220, 70, 80, 70, 200, 170, 135, 65, 60, 339, 125, 60, 250, 75, 129, 85, 35, 99, 140, 116, 60, 130, 95, 108, 50, 175, 230, 60, 130, 299, 40, 40, 48, 300, 228, 60, 99, 65, 90, 60, 110, 500, 125, 62, 196, 299, 80, 111, 80, 184, 60, 75, 70, 210, 165, 40, 170, 93, 47, 175, 120, 70, 105, 275, 165, 48, 195, 280, 80, 48, 228, 60, 90, 139, 95, 129, 119, 90, 125, 55, 79, 120, 138, 126, 35, 46, 50, 400, 45, 50, 300, 95, 150, 70, 45, 280, 45, 245, 50, 125, 95, 150, 100, 125, 105, 59, 99, 115, 53, 45, 80, 43, 275, 200, 96, 65, 180, 125, 95, 150, 85, 190, 61, 130, 180, 60, 200, 65, 200, 130, 70, 95, 400, 150, 115, 80, 345, 110, 150, 265, 42, 95, 130, 99, 51, 300, 259, 250, 71, 155, 135, 89, 75, 50, 70, 68, 80, 200, 41, 200, 120, 160, 55, 60, 135, 95, 350, 245, 150, 69, 250, 88, 200, 160, 150, 280, 65, 150, 159, 150, 200, 100, 425, 115, 50, 93, 160, 210, 250, 225, 40, 215, 90, 170, 80, 200, 43, 100, 55, 55, 95, 42, 125, 80, 133, 150, 120, 50, 250, 70, 40, 79, 120, 139, 66, 40, 100, 50, 185, 160, 80, 119, 155, 100, 120, 38, 80, 119, 119, 119, 119, 195, 119, 200, 143, 45, 350, 99, 65, 85, 160, 400, 85, 89, 39, 50, 37, 150, 99, 100, 165, 100, 130, 50, 130, 250, 90, 110, 40, 100, 35, 85, 50, 50, 38, 65, 250, 129, 129, 41, 65, 129, 129, 70, 150, 89, 100, 175, 300, 275, 185, 120, 220, 50, 70, 200, 60, 125, 50, 75, 150, 200, 199, 70, 115, 250, 142, 67, 40, 350, 160, 149, 75, 400, 95, 85, 130, 149, 95, 60, 65, 105, 395, 550, 50, 160, 51, 220, 45, 79, 55, 45, 200, 103, 139, 69, 60, 150, 100, 210, 49, 140, 71, 60, 90, 80, 60, 109, 75, 139, 139, 350, 100, 120, 139, 161, 245, 135, 35, 79, 200, 225, 300, 130, 90, 50, 35, 50, 50, 250, 180, 485, 350, 99, 150, 300, 40, 60, 100, 275, 70, 100, 66, 250, 55, 100, 120, 88, 150, 50, 125, 43, 90, 150, 110, 150, 80, 130, 196, 115, 225, 274, 107, 250, 41, 169, 43, 99, 66, 38, 150, 49, 120, 75, 88, 300, 205, 199, 50, 69, 85, 150, 150, 75, 60, 75, 150, 460, 125, 65, 85, 75, 159, 60, 135, 50, 65, 85, 54, 120, 75, 73, 94, 300, 186, 113, 50, 70, 325, 49, 85, 487, 49, 150, 90, 34, 51, 200, 45, 45, 115, 60, 150, 100, 200, 150, 131, 58, 300, 102, 88, 209, 200, 120, 58, 200, 120, 60, 145, 35, 75, 325, 200, 50, 53, 90, 110, 250, 39, 150, 105, 100, 50, 455, 58, 125, 75, 55, 37, 90, 65, 95, 98, 120, 90, 45, 41, 175, 150, 200, 60, 80, 81, 50, 130, 105, 50, 35, 115, 170, 90, 130, 150, 55, 59, 65, 50, 148, 250, 90, 120, 47, 75, 80, 110, 45, 150, 80, 250, 57, 50, 399, 132, 150, 40, 189, 400, 65, 250, 51, 299, 125, 65, 295, 60, 80, 75, 91, 160, 400, 100, 40, 400, 250, 100, 55, 65, 425, 49, 175, 129, 87, 42, 115, 150, 50, 70, 50, 75, 143, 170, 65, 112, 150, 200, 100, 142, 55, 50, 185, 45, 160, 179, 55, 175, 225, 99, 150, 100, 88, 400, 85, 150, 70, 99, 45, 189, 70, 80, 175, 35, 41, 50, 150, 400, 85, 100, 150, 149, 210, 150, 350, 130, 45, 50, 50, 250, 110, 125, 53, 55, 485, 160, 150, 200, 58, 109, 75, 50, 215, 249, 56, 127, 83, 290, 39, 56, 200, 65, 50, 195, 69, 125, 160, 195, 250, 125, 100, 180, 175, 90, 50, 200, 90, 70, 115, 75, 190, 200, 125, 130, 149, 195, 40, 68, 150, 260, 79, 130, 90, 250, 55, 280, 43, 200, 41, 89, 50, 42, 85, 45, 39, 56, 295, 110, 170, 90, 40, 50, 100, 135, 120, 200, 35, 70, 99, 75, 150, 220, 175, 120, 320, 250, 199, 105, 110, 80, 59, 85, 150, 180, 75, 229, 50, 248, 299, 67, 150, 200, 277, 99, 80, 500, 175, 150, 320, 125, 189, 200, 120, 150, 70, 38, 135, 50, 50, 110, 70, 140, 149, 100, 40, 220, 39, 350, 90, 359, 65, 109, 70, 75, 40, 98, 110, 85, 300, 100, 91, 59, 74, 42, 75, 39, 225, 66, 50, 50, 250, 95, 80, 220, 105, 199, 53, 125, 400, 70, 50, 300, 89, 59, 221, 100, 69, 150, 275, 55, 65, 250, 135, 90, 75, 225, 34, 35, 249, 115, 105, 69, 79, 100, 80, 100, 35, 70, 237, 250, 210, 50, 75, 65, 85, 290, 165, 180, 40, 325, 190, 90, 70, 167, 151, 72, 150, 145, 48, 50, 125, 81, 115, 128, 65, 80, 135, 240, 100, 65, 150, 180, 50, 329, 54, 50, 63, 150, 43, 145, 60, 85, 149, 69, 150, 350, 90, 140, 80, 129, 60, 110, 75, 150, 45, 64, 135, 100, 110, 200, 200, 65, 100, 109, 70, 70, 100, 83, 169, 50, 55, 65, 110, 285, 180, 69, 199, 95, 99, 79, 225, 149, 60, 85, 130, 150, 75, 150, 60, 80, 220, 245, 135, 190, 100, 80, 200, 150, 120, 117, 125, 70, 152, 65, 195, 225, 57, 160, 149, 45, 162, 50, 110, 90, 38, 59, 105, 210, 250, 150, 42, 125, 59, 199, 84, 70, 90, 150, 87, 140, 49, 105, 60, 65, 150, 125, 41, 249, 45, 150, 170, 299, 55, 45, 49, 475, 34, 129, 75, 95, 180, 100, 100, 112, 125, 102, 65, 100, 80, 200, 100, 45, 50, 60, 90, 110, 65, 75, 64, 120, 95, 67, 60, 150, 175, 220, 365, 59, 121, 50, 95, 75, 191, 125, 55, 110, 250, 45, 125, 185, 104, 45, 135, 55, 79, 75, 135, 110, 200, 60, 175, 190, 111, 130, 44, 70, 140, 80, 179, 47, 160, 110, 250, 400, 70, 350, 90, 159, 80, 45, 65, 118, 60, 57, 126, 120, 64, 78, 271, 78, 38, 140, 187, 300, 100, 117, 158, 60, 95, 160, 109, 160, 330, 50, 50, 68, 36, 190, 140, 185, 50, 45, 35, 110, 140, 120, 125, 68, 199, 450, 76, 39, 48, 175, 120, 100, 50, 90, 40, 60, 53, 120, 150, 115, 59, 99, 89, 47, 149, 159, 90, 80, 50, 60, 37, 58, 70, 280, 349, 120, 40, 250, 80, 80, 300, 40, 119, 110, 110, 499, 99, 499, 40, 50, 130, 175, 60, 60, 92, 129, 34, 95, 125, 65, 225, 68, 65, 180, 110, 150, 108, 68, 150, 165, 125, 150, 60, 50, 199, 48, 109, 80, 109, 139, 39, 80, 225, 55, 99, 145, 75, 85, 150, 150, 70, 150, 140, 160, 78, 225, 220, 90, 40, 40, 240, 150, 170, 35, 250, 399, 210, 220, 170, 90, 80, 96, 59, 80, 100, 100, 80, 235, 55, 140, 260, 200, 80, 78, 208, 85, 250, 101, 100, 79, 190, 69, 44, 45, 70, 85, 140, 140, 400, 50, 35, 140, 75, 140, 125, 125, 60, 80, 60, 350, 42, 60, 95, 40, 45, 95, 75, 50, 105, 149, 100, 89, 80, 50, 300, 85, 80, 65, 180, 111, 35, 90, 89, 255, 44, 75, 110, 300, 72, 75, 60, 350, 80, 550, 39, 108, 38, 85, 40, 60, 48, 175, 175, 88, 60, 70, 145, 38, 150, 35, 70, 89, 55, 180, 94, 80, 150, 70, 125, 69, 179, 170, 105, 54, 69, 450, 490, 78, 179, 245, 100, 160, 45, 38, 120, 280, 120, 175, 100, 60, 80, 175, 130, 185, 140, 140, 95, 95, 49, 58, 175, 45, 100, 230, 34, 35, 60, 55, 95, 416, 45, 99, 75, 100, 40, 60, 55, 120, 39, 38, 45, 60, 225, 50, 200, 100, 65, 110, 45, 115, 89, 50, 125, 80, 100, 169, 300, 225, 545, 200, 189, 71, 200, 65, 85, 125, 38, 38, 70, 69, 155, 165, 80, 90, 55, 150, 95, 150, 130, 173, 75, 110, 50, 55, 135, 85, 55, 189, 100, 76, 97, 175, 150, 42, 40, 75, 75, 79, 45, 78, 160, 60, 300, 55, 99, 90, 65, 80, 40, 54, 138, 66, 35, 55, 109, 110, 119, 375, 65, 75, 58, 85, 68, 90, 90, 75, 130, 50, 150, 100, 345, 59, 80, 60, 100, 120, 120, 48, 175, 95, 40, 339, 100, 79, 50, 40, 85, 129, 105, 275, 47, 265, 155, 115, 35, 69, 250, 100, 450, 36, 52, 130, 45, 150, 228, 80, 200, 50, 150, 65, 180, 47, 40, 125, 140, 220, 50, 79, 90, 69, 50, 49, 50, 69, 69, 65, 150, 200, 150, 110, 110, 69, 230, 60, 100, 92, 98, 145, 80, 69, 55, 65, 40, 100, 68, 250, 60, 237, 100, 120, 60, 105, 150, 125, 45, 90, 175, 125, 46, 150, 70, 149, 50, 50, 69, 44, 480, 46, 150, 55, 58, 58, 139, 125, 69, 110, 275, 125, 249, 140, 86, 50, 165, 150, 80, 58, 38, 80, 73, 169, 59, 145, 195, 199, 100, 60, 45, 90, 78, 59, 37, 110, 188, 45, 169, 275, 190, 189, 45, 60, 149, 199, 72, 60, 300, 195, 159, 120, 65, 98, 39, 50, 189, 75, 100, 36, 84, 295, 35, 220, 70, 150, 75, 110, 53, 89, 128, 130, 50, 110, 45, 90, 150, 35, 69, 47, 50, 150, 175, 140, 50, 57, 100, 190, 130, 65, 175, 450, 200, 55, 400, 200, 140, 160, 100, 90, 95, 200, 169, 65, 150, 65, 250, 350, 115, 74, 110, 148, 150, 35, 125, 65, 150, 150, 69, 70, 118, 115, 100, 125, 399, 100, 100, 495, 120, 140, 50, 119, 200, 145, 50, 125, 117, 350, 145, 125, 300, 50, 135, 60, 300, 300, 110, 104, 39, 45, 178, 220, 55, 97, 35, 80, 50, 68, 140, 150, 75, 130, 93, 75, 130, 65, 99, 119, 55, 65, 140, 94, 72, 150, 250, 80, 80, 150, 75, 49, 85, 83, 135, 100, 329, 48, 55, 365, 150, 99, 109, 40, 58, 76, 289, 65, 160, 225, 90, 70, 45, 100, 90, 41, 149, 45, 40, 90, 257, 295, 70, 65, 62, 60, 225, 49, 325, 100, 67, 90, 45, 495, 112, 160, 37, 104, 95, 80, 115, 148, 75, 173, 65, 75, 300, 169, 60, 84, 115, 106, 100, 100, 50, 55, 120, 120, 127, 160, 200, 117, 250, 76, 40, 180, 117, 130, 59, 94, 55, 69, 80, 40, 127, 63, 95, 75, 50, 40, 145, 135, 44, 70, 42, 70, 100, 145, 75, 250, 150, 65, 159, 65, 200, 60, 46, 69, 190, 125, 71, 150, 80, 70, 80, 43, 210, 133, 50, 47, 99, 150, 80, 47, 44, 67, 60, 50, 245, 180, 189, 41, 60, 120, 123, 339, 125, 54, 75, 92, 130, 55, 35, 75, 180, 89, 93, 85, 80, 150, 100, 175, 113, 69, 50, 105, 55, 109, 500, 125, 34, 260, 68, 200, 200, 125, 199, 68, 37, 60, 300, 87, 160, 145, 40, 50, 60, 70, 100, 172, 75, 118, 240, 73, 60, 34, 60, 125, 55, 165, 45, 70, 93, 49, 65, 140, 100, 125, 295, 120, 75, 75, 127, 60, 165, 59, 105, 58, 125, 146, 52, 35, 88, 149, 169, 85, 395, 60, 100, 50, 35, 99, 75, 60, 46, 175, 120, 179, 120, 69, 98, 117, 115, 45, 149, 125, 125, 99, 115, 150, 67, 225, 62, 35, 175, 39, 60, 110, 47, 139, 70, 110, 81, 85, 68, 95, 80, 409, 60, 66, 200, 95, 240, 162, 46, 100, 159, 70, 35, 59, 150, 80, 200, 225, 225, 100, 96, 60, 60, 145, 75, 80, 155, 100, 120, 225, 175, 75, 89, 60, 60, 250, 80, 43, 99, 43, 43, 60, 52, 110, 60, 46, 200, 150, 80, 65, 130, 90, 75, 40, 450, 150, 110, 101, 135, 55, 51, 39, 37, 37, 37, 75, 130, 479, 89, 175, 36, 49, 84, 60, 170, 126, 100, 55, 159, 90, 90, 325, 70, 80, 150, 80, 83, 50, 40, 165, 130, 65, 50, 60, 42, 158, 65, 380, 110, 145, 77, 99, 89, 98, 305, 75, 70, 68, 450, 40, 75, 200, 290, 50, 175, 125, 96, 250, 135, 140, 45, 75, 220, 186, 70, 175, 55, 95, 278, 125, 150, 65, 43, 285, 65, 85, 120, 165, 39, 40, 250, 140, 60, 135, 120, 200, 55, 86, 130, 112, 70, 275, 150, 175, 378, 65, 85, 46, 190, 70, 125, 175, 100, 68, 85, 95, 110, 74, 53, 45, 125, 95, 45, 250, 300, 148, 55, 47, 115, 55, 140, 240, 120, 200, 49, 70, 400, 199, 194, 500, 105, 70, 187, 250, 53, 100, 65, 110, 36, 40, 185, 175, 65, 42, 72, 45, 77, 120, 70, 35, 200, 70, 179, 110, 374, 175, 42, 350, 200, 65, 150, 115, 75, 62, 139, 150, 75, 45, 90, 113, 186, 34, 72, 42, 250, 120, 120, 137, 163, 153, 120, 137, 120, 163, 153, 137, 120, 208, 153, 163, 110, 400, 360, 120, 50, 189, 400, 90, 400, 245, 100, 125, 220, 55, 250, 110, 45, 175, 81, 75, 37, 200, 120, 150, 70, 108, 91, 105, 147, 205, 92, 139, 100, 55, 80, 75, 40, 400, 205, 70, 80, 220, 119, 44, 60, 178, 175, 130, 135, 100, 325, 150, 100, 45, 75, 130, 105, 75, 150, 89, 57, 50, 325, 300, 150, 99, 250, 112, 175, 95, 100, 280, 55, 93, 125, 105, 69, 47, 50, 120, 84, 89, 90, 220, 172, 550, 175, 149, 149, 190, 96, 125, 166, 45, 75, 70, 300, 200, 160, 300, 90, 375, 100, 50, 89, 60, 100, 65, 125, 35, 85, 86, 99, 50, 270, 195, 110, 80, 85, 125, 75, 55, 35, 48, 129, 139, 129, 85, 105, 110, 280, 75, 50, 40, 60, 375, 45, 100, 67, 200, 65, 110, 49, 39, 199, 65, 45, 196, 65, 47, 110, 240, 45, 225, 200, 45, 171, 170, 125, 45, 150, 106, 50, 50, 90, 60, 154, 80, 65, 149, 66, 150, 69, 65, 120, 140, 55, 50, 60, 179, 45, 187, 50, 249, 182, 40, 60, 50, 175, 195, 40, 60, 75, 40, 150, 72, 95, 100, 75, 250, 60, 163, 48, 339, 40, 60, 339, 65, 269, 269, 269, 180, 200, 63, 65, 300, 100, 95, 190, 300, 231, 125, 45, 64, 150, 50, 115, 105, 40, 50, 199, 49, 105, 50, 45, 95, 47, 100, 65, 105, 50, 175, 75, 45, 125, 60, 148, 50, 150, 135, 140, 159, 50, 49, 70, 200, 49, 45, 35, 180, 100, 155, 80, 70, 38, 70, 38, 75, 120, 200, 160, 210, 120, 77, 80, 124, 65, 65, 90, 225, 48, 39, 88, 159, 99, 40, 35, 75, 37, 200, 75, 50, 95, 80, 50, 55, 48, 100, 99, 74, 65, 158, 40, 119, 325, 215, 65, 230, 188, 140, 60, 95, 100, 175, 45, 70, 60, 95, 70, 119, 120, 115, 125, 45, 89, 75, 240, 40, 100, 60, 45, 50, 175, 60, 99, 70, 260, 159, 60, 78, 180, 80, 250, 50, 118, 42, 69, 100, 110, 155, 150, 119, 89, 399, 275, 150, 140, 199, 65, 100, 103, 85, 79, 96, 70, 57, 274, 90, 100, 412, 412, 412, 120, 41, 70, 90, 99, 54, 35, 39, 148, 60, 130, 95, 65, 190, 55, 49, 100, 52, 35, 45, 41, 275, 265, 250, 130, 55, 365, 70, 225, 95, 500, 46, 140, 140, 199, 69, 188, 100, 235, 165, 55, 65, 125, 90, 56, 394, 172, 100, 142, 220, 264, 200, 45, 150, 160, 135, 55, 50, 49, 185, 180, 70, 450, 110, 72, 80, 44, 45, 71, 60, 65, 300, 99, 79, 339, 58, 90, 158, 145, 60, 99, 80, 85, 115, 52, 280, 250, 55, 100, 195, 80, 100, 55, 120, 300, 339, 140, 125, 47, 180, 58, 150, 120, 47, 288, 65, 300, 104, 160, 73, 195, 200, 100, 300, 150, 190, 75, 81, 275, 60, 180, 90, 95, 70, 125, 173, 148, 75, 199, 54, 153, 99, 65, 50, 100, 62, 77, 46, 95, 159, 300, 103, 200, 102, 350, 168, 40, 55, 150, 79, 65, 70, 199, 45, 70, 60, 59, 49, 65, 165, 80, 100, 95, 54, 299, 45, 250, 120, 105, 299, 130, 90, 62, 70, 225, 95, 288, 149, 95, 150, 200, 150, 175, 180, 70, 100, 79, 350, 75, 235, 39, 300, 50, 130, 130, 250, 120, 115, 100, 120, 65, 79, 89, 300, 220, 265, 300, 150, 150, 150, 46, 68, 55, 65, 70, 65, 310, 88, 50, 80, 80, 130, 130, 100, 250, 200, 54, 65, 120, 50, 299, 138, 42, 175, 85, 74, 65, 47, 85, 130, 70, 179, 150, 99, 125, 170, 89, 50, 80, 168, 118, 150, 120, 175, 190, 195, 112, 450, 45, 150, 99, 100, 50, 220, 123, 110, 120, 110, 85, 299, 55, 47, 55, 130, 40, 150, 70, 180, 90, 120, 145, 150, 125, 60, 150, 190, 145, 50, 95, 91, 145, 100, 35, 120, 69, 50, 290, 50, 545, 200, 47, 175, 75, 45, 275, 95, 199, 130, 161, 65, 60, 165, 69, 100, 89, 55, 80, 37, 40, 60, 90, 245, 175, 50, 210, 350, 45, 300, 155, 125, 225, 90, 110, 65, 125, 35, 150, 299, 60, 59, 250, 185, 60, 139, 80, 89, 69, 68, 185, 100, 116, 140, 225, 99, 90, 160, 148, 60, 200, 125, 150, 125, 125, 65, 85, 89, 300, 65, 125, 75, 145, 65, 142, 200, 235, 50, 36, 75, 60, 247, 295, 80, 99, 36, 73, 117, 145, 209, 300, 101, 60, 65, 250, 140, 110, 200, 100, 175, 112, 70, 102, 75, 55, 50, 62, 119, 52, 45, 160, 162, 205, 86, 61, 75, 79, 119, 150, 129, 35, 51, 120, 78, 100, 114, 35, 150, 75, 128, 160, 199, 100, 170, 99, 175, 400, 125, 75, 46, 240, 240, 50, 115, 75, 160, 80, 150, 79, 250, 60, 85, 200, 40, 89, 95, 135, 260, 80, 130, 400, 200, 139, 59, 45, 75, 159, 120, 99, 112, 175, 85, 55, 80, 90, 180, 415, 275, 115, 199, 120, 60, 58, 149, 45, 55, 110, 70, 60, 121, 62, 75, 50, 52, 100, 160, 200, 65, 115, 50, 95, 300, 69, 169, 134, 35, 120, 140, 200, 139, 80, 79, 40, 91, 295, 76, 400, 48, 125, 250, 65, 80, 48, 99, 55, 44, 200, 150, 100, 150, 150, 350, 128, 200, 190, 40, 71, 60, 59, 125, 115, 65, 50, 198, 78, 160, 125, 90, 43, 80, 60, 190, 60, 57, 120, 119, 200, 92, 45, 200, 120, 42, 89, 95, 80, 235, 40, 150, 120, 400, 130, 75, 125, 120, 120, 35, 45, 100, 97, 225, 80, 40, 80, 175, 250, 135, 59, 180, 125, 170, 182, 65, 450, 42, 79, 80, 165, 50, 75, 128, 122, 46, 85, 150, 199, 105, 59, 67, 61, 170, 86, 85, 210, 50, 80, 50, 50, 50, 151, 200, 150, 147, 200, 70, 140, 55, 50, 200, 190, 200, 49, 119, 40, 210, 105, 86, 150, 60, 225, 157, 70, 140, 74, 150, 75, 40, 180, 37, 344, 40, 130, 99, 142, 70, 45, 59, 160, 125, 59, 200, 130, 104, 182, 65, 250, 60, 48, 149, 59, 100, 62, 135, 95, 450, 59, 59, 40, 215, 120, 49, 125, 250, 75, 34, 60, 150, 224, 80, 100, 100, 125, 120, 70, 60, 50, 180, 118, 70, 175, 165, 150, 50, 50, 60, 50, 110, 137, 50, 150, 45, 75, 91, 250, 136, 99, 103, 120, 50, 80, 49, 50, 60, 45, 70, 120, 70, 55, 80, 225, 200, 99, 110, 115, 225, 95, 139, 65, 160, 175, 179, 130, 80, 44, 300, 215, 100, 295, 100, 85, 150, 225, 75, 140, 110, 265, 150, 91, 185, 125, 330, 50, 79, 129, 40, 200, 41, 140, 295, 125, 150, 170, 350, 175, 105, 54, 90, 125, 400, 139, 135, 175, 140, 126, 75, 62, 99, 50, 224, 95, 108, 94, 160, 72, 199, 50, 75, 169, 75, 85, 75, 99, 120, 200, 80, 150, 55, 120, 90, 40, 42, 55, 180, 225, 150, 50, 170, 50, 350, 415, 112, 170, 80, 300, 60, 54, 46, 80, 180, 168, 97, 48, 95, 170, 125, 175, 80, 139, 162, 75, 93, 99, 89, 85, 105, 100, 198, 48, 110, 206, 90, 220, 150, 65, 170, 399, 175, 99, 185, 150, 175, 189, 51, 398, 175, 160, 65, 130, 96, 89, 70, 99, 69, 500, 50, 120, 197, 105, 170, 68, 200, 165, 200, 265, 100, 140, 128, 125, 150, 80, 52, 350, 129, 125, 100, 140, 45, 70, 75, 110, 90, 100, 176, 90, 89, 120, 65, 95, 180, 60, 191, 130, 175, 100, 113, 43, 95, 200, 130, 100, 100, 190, 150, 65, 120, 186, 120, 50, 239, 45, 159, 130, 107, 75, 120, 80, 250, 217, 150, 225, 225, 140, 49, 450, 200, 112, 89, 209, 300, 49, 50, 294, 150, 89, 79, 50, 70, 118, 75, 41, 190, 90, 195, 150, 47, 86, 160, 150, 45, 78, 169, 169, 86, 99, 105, 85, 97, 232, 40, 100, 100, 400, 69, 180, 150, 88, 169, 40, 390, 50, 55, 95, 85, 65, 100, 295, 89, 49, 75, 45, 125, 149, 110, 90, 182, 65, 95, 46, 120, 37, 85, 85, 110, 140, 150, 85, 130, 130, 125, 74, 99, 62, 200, 180, 46, 70, 200, 100, 100, 40, 120, 38, 55, 60, 199, 50, 175, 74, 175, 150, 200, 95, 86, 260, 65, 165, 150, 140, 62, 100, 44, 75, 299, 70, 149, 145, 50, 50, 80, 60, 92, 80, 155, 65, 156, 100, 197, 80, 250, 45, 50, 250, 199, 150, 80, 85, 65, 100, 60, 150, 80, 339, 175, 339, 100, 100, 200, 75, 140, 245, 195, 45, 93, 35, 40, 65, 156, 60, 60, 399, 95, 108, 269, 240, 200, 80, 61, 200, 50, 100, 65, 60, 410, 55, 245, 132, 45, 155, 225, 150, 150, 450, 100, 110, 160, 220, 150, 350, 53, 145, 68, 60, 85, 60, 65, 130, 61, 41, 425, 135, 85, 117, 95, 75, 140, 85, 200, 149, 85, 200, 60, 150, 109, 140, 200, 120, 175, 170, 90, 110, 89, 96, 70, 80, 65, 150, 100, 99, 150, 69, 375, 55, 175, 90, 60, 100, 47, 160, 80, 125, 81, 183, 60, 120, 156, 300, 70, 80, 120, 110, 55, 100, 55, 75, 160, 170, 120, 230, 125, 100, 300, 125, 100, 250, 50, 70, 43, 95, 95, 190, 207, 100, 180, 99, 125, 50, 190, 55, 150, 75, 500, 69, 99, 65, 65, 36, 125, 50, 250, 54, 55, 95, 115, 35, 105, 200, 123, 300, 120, 70, 140, 114, 80, 85, 125, 157, 125, 90, 195, 230, 40, 65, 325, 460, 132, 180, 149, 90, 149, 115, 50, 55, 100, 90, 160, 100, 60, 75, 120, 149, 85, 182, 160, 50, 175, 179, 350, 45, 100, 136, 125, 60, 200, 80, 235, 249, 125, 65, 45, 325, 150, 150, 165, 189, 50, 200, 225, 350, 499, 115, 100, 95, 43, 120, 215, 200, 299, 115, 129, 84, 170, 149, 47, 125, 177, 500, 60, 100, 180, 65, 200, 50, 150, 159, 130, 100, 65, 100, 185, 398, 62, 180, 75, 150, 200, 99, 100, 49, 50, 83, 40, 45, 161, 125, 90, 85, 69, 85, 65, 99, 110, 70, 100, 110, 60, 55, 98, 295, 80, 70, 400, 66, 98, 186, 60, 97, 60, 98, 200, 62, 62, 138, 65, 90, 99, 350, 140, 85, 200, 90, 60, 225, 48, 149, 200, 50, 65, 80, 87, 87, 149, 169, 305, 525, 102, 220, 179, 190, 50, 140, 220, 124, 114, 199, 135, 55, 131, 100, 95, 80, 89, 97, 45, 45, 45, 75, 100, 189, 70, 120, 375, 165, 56, 52, 275, 250, 89, 89, 49, 60, 159, 120, 88, 186, 99, 90, 70, 40, 50, 45, 95, 149, 50, 280, 75, 65, 100, 80, 80, 60, 100, 250, 75, 60, 49, 125, 50, 50, 100, 43, 200, 55, 54, 80, 140, 250, 250, 499, 140, 175, 111, 160, 150, 60, 70, 70, 425, 230, 50, 200, 125, 60, 40, 107, 62, 195, 150, 50, 85, 110, 211, 100, 125, 45, 38, 83, 100, 35, 62, 170, 62, 60, 51, 70, 105, 60, 100, 122, 299, 85, 90, 124, 42, 180, 80, 175, 85, 45, 160, 59, 69, 69, 180, 100, 125, 50, 75, 55, 65, 34, 195, 70, 105, 60, 120, 250, 340, 550, 88, 70, 65, 125, 100, 110, 125, 40, 72, 195, 45, 45, 90, 60, 134, 250, 75, 80, 300, 75, 150, 52, 250, 110, 250, 325, 150, 75, 100, 37, 50, 275, 110, 115, 160, 184, 189, 129, 119, 119, 65, 40, 45, 375, 65, 70, 190, 85, 80, 65, 129, 180, 35, 60, 60, 39, 70, 80, 155, 135, 115, 59, 169, 195, 85, 109, 109, 85, 45, 60, 115, 100, 50, 125, 70, 100, 55, 95, 347, 50, 190, 169, 299, 175, 220, 120, 190, 90, 85, 399, 98, 140, 50, 393, 62, 112, 90, 350, 62, 45, 125, 75, 333, 65, 250, 100, 103, 95, 75, 220, 100, 125, 39, 90, 55, 99, 200, 120, 149, 200, 190, 230, 50, 97, 76, 60, 350, 60, 209, 125, 150, 125, 90, 50, 60, 300, 150, 200, 60, 183, 70, 60, 100, 70, 59, 83, 67, 150, 41, 550, 99, 70, 350, 350, 37, 140, 349, 105, 75, 55, 165, 250, 55, 59, 129, 55, 109, 75, 52, 115, 40, 100, 45, 150, 66, 200, 35, 90, 75, 90, 139, 82, 85, 106, 100, 106, 130, 60, 200, 200, 100, 95, 85, 230, 89, 150, 85, 100, 225, 75, 175, 65, 100, 120, 60, 249, 110, 95, 170, 100, 65, 155, 90, 50, 150, 250, 189, 119, 112, 70, 41, 45, 280, 175, 199, 64, 99, 168, 150, 163, 156, 85, 40, 60, 60, 70, 130, 80, 145, 73, 38, 36, 102, 230, 200, 42, 70, 170, 99, 289, 200, 208, 175, 225, 300, 130, 170, 40, 131, 75, 425, 100, 250, 40, 85, 156, 112, 139, 169, 75, 70, 300, 75, 90, 99, 120, 185, 74, 131, 40, 125, 60, 95, 155, 120, 200, 95, 38, 187, 50, 249, 60, 215, 89, 90, 165, 108, 55, 499, 35, 75, 99, 155, 50, 75, 50, 220, 90, 75, 60, 295, 60, 100, 75, 58, 60, 369, 150, 63, 219, 90, 171, 309, 60, 80, 50, 90, 65, 110, 95, 142, 150, 35, 55, 140, 175, 39, 80, 65, 75, 94, 91, 60, 260, 73, 225, 34, 67, 170, 190, 50, 100, 65, 220, 250, 120, 50, 120, 66, 80, 80, 80, 45, 129, 200, 55, 40, 55, 150, 75, 75, 67, 250, 125, 59, 165, 195, 50, 79, 98, 37, 295, 75, 265, 449, 400, 195, 59, 100, 100, 80, 96, 45, 125, 85, 250, 40, 55, 150, 229, 67, 69, 51, 275, 200, 75, 80, 350, 85, 46, 135, 200, 125, 58, 150, 120, 90, 74, 99, 53, 120, 250, 209, 140, 99, 80, 200, 50, 85, 50, 84, 79, 79, 130, 350, 125, 80, 100, 70, 125, 100, 450, 150, 89, 265, 225, 55, 120, 210, 65, 115, 50, 70, 80, 110, 115, 38, 150, 125, 125, 180, 99, 125, 59, 110, 300, 50, 99, 150, 36, 149, 51, 70, 49, 85, 55, 65, 99, 38, 44, 345, 38, 150, 38, 119, 71, 200, 35, 150, 59, 34, 225, 80, 50, 40, 160, 100, 285, 53, 55, 90, 90, 90, 125, 180, 120, 75, 145, 187, 185, 72, 39, 55, 59, 55, 125, 200, 400, 80, 220, 130, 90, 47, 118, 145, 85, 75, 80, 40, 110, 60, 50, 58, 150, 49, 69, 99, 200, 200, 125, 70, 45, 70, 75, 150, 55, 90, 139, 120, 65, 83, 149, 175, 70, 49, 150, 180, 80, 220, 150, 225, 210, 299, 110, 120, 80, 330, 150, 150, 99, 99, 90, 65, 65, 300, 70, 125, 150, 50, 120, 125, 250, 142, 60, 142, 179, 140, 465, 80, 65, 300, 180, 56, 99, 70, 285, 82, 142, 100, 142, 125, 40, 120, 199, 60, 200, 55, 150, 110, 53, 150, 35, 149, 190, 143, 57, 59, 299, 70, 49, 68, 120, 135, 80, 80, 90, 150, 197, 181, 180, 76, 139, 51, 50, 55, 250, 55, 80, 51, 69, 255, 150, 85, 52, 70, 76, 63, 100, 55, 90, 110, 66, 65, 133, 100, 85, 125, 100, 125, 91, 66, 60, 150, 222, 148, 225, 60, 45, 102, 50, 250, 44, 130, 55, 78, 165, 90, 500, 75, 44, 75, 120, 120, 110, 125, 89, 81, 60, 95, 75, 80, 159, 80, 165, 69, 140, 50, 135, 120, 39, 69, 65, 120, 128, 125, 65, 172, 150, 195, 60, 330, 195, 60, 110, 154, 76, 70, 220, 55, 99, 95, 118, 80, 60, 70, 98, 70, 110, 55, 40, 189, 36, 65, 49, 52, 97, 80, 189, 35, 36, 150, 100, 60, 179, 200, 123, 80, 90, 40, 490, 70, 188, 69, 289, 130, 75, 79, 100, 150, 68, 135, 145, 45, 50, 60, 49, 40, 62, 345, 80, 90, 60, 150, 68, 150, 120, 70, 109, 74, 125, 109, 120, 65, 47, 120, 110, 110, 115, 105, 119, 42, 65, 54, 325, 265, 95, 199, 125, 174, 50, 140, 95, 120, 39, 75, 65, 58, 100, 73, 65, 57, 60, 65, 100, 65, 70, 130, 60, 102, 100, 170, 65, 60, 65, 90, 65, 50, 142, 80, 92, 70, 275, 157, 100, 94, 88, 56, 55, 150, 244, 180, 62, 145, 225, 69, 96, 37, 120, 180, 52, 108, 140, 75, 48, 150, 60, 110, 70, 100, 200, 125, 140, 140, 200, 40, 44, 115, 120, 460, 40, 90, 150, 260, 350, 65, 63, 129, 75, 100, 111, 80, 80, 59, 159, 55, 65, 65, 85, 70, 40, 300, 75, 68, 60, 90, 110, 80, 190, 66, 60, 125, 65, 55, 38, 80, 200, 200, 89, 82, 115, 100, 100, 300, 119, 55, 150, 149, 79, 150, 49, 175, 40, 280, 100, 75, 109, 109, 95, 95, 300, 90, 130, 125, 125, 35, 45, 250, 300, 135, 108, 45, 50, 50, 80, 45, 150, 115, 40, 75, 80, 125, 39, 40, 60, 100, 110, 350, 65, 40, 74, 40, 70, 113, 74, 125, 75, 99, 79, 190, 67, 82, 45, 146, 38, 150, 95, 82, 67, 67, 250, 250, 70, 85, 150, 104, 75, 60, 250, 50, 185, 285, 125, 45, 250, 425, 50, 46, 58, 86, 111, 207, 47, 140, 90, 40, 80, 100, 180, 75, 95, 46, 96, 44, 100, 139, 280, 125, 80, 70, 95, 130, 110, 54, 100, 45, 99, 145, 60, 119, 70, 350, 225, 95, 95, 165, 62, 149, 80, 79, 80, 72, 75, 75, 75, 140, 35, 71, 50, 200, 199, 75, 150, 145, 100, 140, 65, 67, 67, 65, 150, 87, 200, 250, 79, 100, 135, 98, 350, 90, 40, 65, 99, 150, 250, 179, 115, 158, 200, 49, 200, 180, 80, 59, 180, 189, 95, 199, 100, 200, 275, 62, 93, 62, 60, 55, 50, 35, 70, 350, 189, 95, 230, 249, 75, 80, 250, 450, 130, 151, 90, 290, 60, 200, 250, 44, 160, 329, 135, 70, 275, 37, 175, 100, 55, 86, 200, 59, 85, 45, 315, 47, 149, 100, 250, 65, 50, 65, 106, 59, 195, 150, 65, 275, 137, 55, 70, 165, 47, 35, 85, 46, 130, 185, 100, 52, 150, 88, 39, 40, 155, 90, 54, 40, 85, 132, 80, 140, 120, 165, 50, 49, 165, 192, 150, 415, 75, 60, 100, 329, 39, 89, 150, 139, 230, 75, 135, 185, 128, 110, 80, 175, 160, 250, 225, 45, 120, 50, 60, 70, 80, 200, 120, 200, 175, 75, 149, 150, 110, 150, 147, 150, 138, 135, 100, 90, 500, 115, 300, 43, 75, 52, 85, 50, 80, 75, 120, 70, 195, 89, 65, 45, 53, 125, 140, 65, 75, 80, 65, 55, 110, 120, 130, 120, 162, 80, 135, 85, 52, 46, 76, 86, 85, 200, 60, 50, 52, 65, 89, 120, 40, 55, 95, 250, 55, 86, 86, 250, 50, 245, 125, 132, 112, 65, 53, 81, 55, 175, 110, 110, 115, 105, 60, 87, 65, 120, 45, 45, 45, 45, 45, 80, 85, 118, 50, 99, 204, 220, 81, 60, 50, 90, 45, 195, 170, 140, 125, 85, 73, 135, 60, 199, 80, 50, 55, 80, 95, 120, 40, 50, 40, 99, 65, 195, 150, 120, 170, 80, 35, 130, 53, 350, 50, 56, 98, 75, 130, 98, 180, 250, 75, 300, 180, 199, 65, 45, 90, 150, 55, 51, 45, 60, 375, 125, 250, 40, 89, 80, 75, 110, 150, 90, 239, 232, 175, 60, 200, 200, 40, 123, 150, 47, 54, 100, 130, 99, 150, 50, 59, 180, 113, 80, 45, 100, 525, 105, 250, 67, 100, 226, 175, 550, 120, 126, 61, 99, 200, 54, 90, 155, 150, 85, 38, 220, 37, 58, 55, 93, 58, 140, 160, 125, 140, 126, 35, 159, 99, 63, 180, 63, 65, 48, 42, 85, 50, 199, 199, 80, 36, 40, 106, 195, 75, 160, 264, 40, 120, 65, 350, 75, 190, 65, 180, 100, 65, 150, 225, 111, 150, 145, 57, 150, 53, 35, 65, 100, 100, 144, 49, 120, 77, 60, 160, 62, 90, 38, 150, 160, 139, 80, 85, 45, 148, 115, 75, 75, 196, 100, 290, 46, 68, 150, 149, 39, 175, 100, 60, 100, 76, 91, 65, 240, 106, 59, 45, 55, 165, 450, 115, 50, 100, 70, 50, 138, 50, 250, 89, 125, 36, 55, 160, 170, 77, 175, 90, 299, 79, 285, 45, 40, 40, 40, 124, 60, 89, 159, 180, 63, 125, 70, 51, 115, 55, 250, 149, 55, 100, 170, 85, 295, 125, 52, 151, 90, 55, 55, 50, 89, 90, 200, 116, 150, 80, 70, 65, 170, 99, 111, 43, 125, 200, 100, 63, 150, 60, 100, 39, 90, 195, 142, 55, 142, 150, 65, 86, 200, 65, 400, 55, 175, 150, 59, 339, 100, 339, 105, 195, 79, 55, 200, 159, 82, 65, 75, 136, 65, 49, 300, 160, 150, 36, 79, 129, 159, 100, 86, 60, 60, 185, 75, 95, 42, 120, 350, 125, 165, 230, 200, 250, 290, 80, 35, 150, 180, 150, 95, 120, 400, 60, 150, 49, 120, 100, 139, 59, 60, 197, 112, 140, 245, 175, 199, 65, 229, 70, 88, 55, 55, 55, 65, 350, 52, 55, 125, 200, 65, 85, 379, 69, 65, 175, 100, 50, 225, 175, 80, 155, 75, 55, 239, 50, 300, 285, 250, 85, 330, 85, 120, 50, 150, 63, 85, 85, 43, 80, 172, 125, 45, 54, 170, 50, 80, 45, 150, 37, 150, 60, 71, 158, 150, 58, 57, 155, 185, 86, 65, 139, 187, 36, 120, 65, 120, 65, 250, 120, 175, 200, 148, 120, 159, 200, 85, 90, 104, 125, 275, 60, 46, 80, 136, 125, 85, 175, 400, 60, 60, 95, 65, 69, 89, 110, 150, 52, 75, 60, 100, 90, 170, 105, 295, 98, 150, 99, 53, 49, 40, 300, 49, 124, 60, 100, 78, 90, 180, 300, 110, 269, 61, 99, 60, 199, 75, 150, 150, 42, 53, 290, 135, 62, 175, 50, 55, 149, 200, 350, 250, 185, 185, 140, 45, 40, 150, 145, 125, 70, 65, 350, 66, 65, 55, 75, 210, 120, 90, 90, 115, 45, 200, 105, 49, 49, 49, 49, 73, 150, 220, 35, 125, 85, 190, 300, 65, 48, 250, 150, 150, 80, 80, 65, 150, 275, 250, 49, 61, 90, 75, 110, 125, 140, 250, 100, 90, 45, 65, 45, 70, 400, 119, 197, 245, 149, 66, 76, 100, 55, 130, 130, 51, 65, 100, 170, 144, 250, 349, 65, 45, 80, 34, 80, 36, 180, 66, 95, 119, 199, 300, 150, 39, 125, 300, 150, 60, 180, 40, 65, 150, 100, 150, 90, 40, 69, 85, 200, 59, 248, 60, 95, 77, 70, 45, 45, 75, 64, 150, 80, 75, 64, 154, 40, 160, 210, 54, 139, 39, 180, 400, 189, 60, 55, 140, 46, 122, 65, 70, 180, 40, 55, 80, 99, 90, 107, 50, 300, 123, 36, 399, 145, 140, 54, 177, 65, 150, 50, 104, 54, 74, 75, 300, 280, 150, 73, 70, 97, 130, 95, 40, 38, 70, 44, 135, 58, 120, 110, 130, 50, 40, 495, 80, 200, 89, 40, 60, 36, 69, 45, 75, 125, 55, 90, 300, 88, 36, 225, 79, 80, 39, 43, 37, 394, 499, 60, 68, 70, 149, 69, 75, 95, 214, 269, 80, 200, 39, 38, 65, 70, 170, 45, 90, 400, 200, 199, 35, 60, 195, 180, 150, 115, 80, 200, 150, 70, 115, 225, 140, 200, 250, 125, 150, 270, 72, 250, 100, 68, 200, 129, 80, 175, 160, 460, 89, 99, 55, 76, 50, 175, 160, 65, 80, 99, 480, 60, 35, 110, 60, 150, 350, 65, 298, 101, 75, 165, 80, 80, 170, 530, 34, 209, 300, 50, 65, 45, 105, 45, 215, 220, 100, 120, 110, 97, 75, 150, 50, 47, 150, 75, 58, 150, 70, 150, 130, 53, 200, 35, 285, 245, 280, 60, 98, 200, 75, 78, 145, 70, 135, 65, 120, 175, 85, 79, 130, 80, 70, 89, 40, 185, 120, 122, 55, 285, 80, 335, 75, 55, 119, 143, 80, 175, 150, 48, 167, 169, 86, 110, 55, 85, 200, 100, 59, 68, 65, 380, 165, 45, 79, 244, 65, 80, 200, 37, 40, 280, 99, 160, 275, 65, 104, 60, 250, 66, 85, 140, 100, 75, 150, 134, 100, 140, 95, 100, 190, 240, 102, 40, 120, 43, 375, 156, 100, 199, 115, 50, 109, 99, 76, 185, 150, 225, 70, 40, 85, 50, 150, 200, 57, 45, 90, 90, 160, 63, 180, 100, 42, 160, 430, 83, 95, 75, 48, 150, 200, 150, 260, 34, 85, 179, 88, 60, 50, 85, 56, 75, 69, 95, 120, 55, 261, 100, 120, 100, 250, 62, 89, 225, 75, 140, 85, 58, 195, 89, 50, 75, 95, 75, 60, 119, 60, 99, 75, 250, 65, 40, 100, 149, 199, 500, 249, 140, 145, 95, 90, 300, 115, 102, 60, 75, 75, 86, 65, 149, 50, 90, 50, 215, 250, 350, 66, 85, 52, 78, 48, 268, 268, 149, 75, 250, 75, 56, 125, 35, 130, 105, 75, 325, 70, 125, 40, 245, 75, 48, 50, 115, 197, 99, 220, 106, 140, 199, 345, 300, 200, 70, 149, 125, 65, 75, 50, 60, 48, 90, 85, 70, 100, 135, 97, 320, 200, 99, 55, 350, 115, 180, 65, 200, 49, 100, 115, 80, 59, 70, 100, 70, 63, 120, 269, 55, 70, 60, 80, 115, 45, 63, 47, 300, 169, 50, 274, 110, 263, 75, 250, 83, 225, 175, 125, 70, 154, 95, 75, 125, 180, 200, 115, 135, 69, 99, 80, 150, 150, 134, 134, 145, 189, 120, 65, 280, 100, 40, 120, 130, 180, 55, 175, 36, 50, 165, 90, 65, 175, 110, 300, 175, 150, 100, 68, 120, 99, 110, 84, 60, 100, 65, 65, 65, 50, 70, 120, 70, 225, 70, 45, 105, 175, 98, 55, 110, 55, 95, 130, 80, 100, 70, 160, 85, 45, 71, 170, 65, 65, 100, 449, 50, 150, 101, 69, 57, 190, 325, 200, 250, 71, 190, 109, 35, 130, 149, 59, 45, 70, 75, 120, 126, 207, 70, 90, 64, 40, 300, 55, 120, 66, 100, 38, 99, 110, 225, 41, 120, 37, 179, 75, 63, 65, 55, 67, 255, 65, 325, 389, 40, 44, 40, 285, 200, 75, 230, 80, 99, 145, 150, 41, 65, 150, 145, 50, 185, 65, 150, 260, 125, 199, 45, 37, 500, 100, 100, 42, 85, 50, 85, 50, 166, 39, 97, 200, 155, 220, 75, 195, 125, 45, 425, 90, 95, 100, 100, 89, 400, 403, 325, 135, 330, 200, 139, 50, 125, 350, 175, 130, 150, 120, 150, 180, 105, 63, 300, 70, 250, 43, 40, 471, 40, 94, 69, 150, 80, 399, 95, 52, 150, 65, 60, 55, 49, 249, 100, 60, 59, 65, 120, 45, 150, 90, 140, 50, 70, 90, 125, 150, 150, 98, 120, 100, 110, 250, 65, 65, 50, 65, 35, 160, 200, 60, 53, 38, 99, 65, 110, 140, 175, 115, 199, 60, 50, 78, 70, 125, 35, 54, 175, 500, 63, 127, 225, 60, 47, 195, 355, 70, 39, 35, 39, 90, 39, 39, 165, 45, 200, 80, 65, 70, 53, 87, 50, 55, 240, 120, 225, 89, 65, 75, 108, 75, 150, 150, 89, 180, 139, 89, 70, 99, 150, 69, 145, 55, 99, 209, 55, 69, 47, 65, 65, 108, 70, 60, 70, 500, 95, 41, 145, 55, 95, 55, 50, 55, 60, 55, 50, 59, 200, 85, 120, 39, 65, 80, 46, 80, 135, 170, 55, 105, 95, 95, 40, 100, 60, 135, 95, 110, 90, 53, 85, 100, 65, 55, 85, 200, 225, 95, 175, 189, 53, 80, 97, 79, 80, 39, 85, 50, 330, 37, 150, 195, 50, 100, 140, 275, 85, 99, 117, 160, 65, 105, 225, 245, 185, 295, 480, 190, 225, 59, 60, 300, 325, 100, 355, 60, 65, 100, 99, 65, 58, 75, 50, 50, 300, 80, 91, 140, 199, 43, 60, 200, 50, 75, 150, 99, 90, 62, 35, 105, 175, 100, 76, 299, 150, 80, 80, 59, 250, 100, 115, 70, 500, 46, 145, 80, 65, 40, 72, 100, 185, 370, 60, 70, 53, 110, 53, 59, 79, 150, 200, 125, 200, 200, 60, 125, 70, 100, 359, 40, 120, 95, 125, 225, 57, 37, 150, 36, 115, 350, 75, 149, 90, 200, 275, 130, 140, 45, 80, 110, 68, 275, 90, 250, 60, 89, 288, 70, 60, 100, 60, 99, 59, 119, 89, 60, 66, 175, 150, 310, 70, 109, 65, 83, 200, 90, 380, 175, 46, 50, 200, 59, 180, 160, 72, 72, 210, 40, 105, 95, 235, 69, 70, 75, 139, 75, 41, 120, 55, 88, 78, 58, 85, 150, 67, 51, 99, 99, 35, 75, 175, 150, 90, 55, 150, 90, 140, 65, 57, 50, 299, 125, 85, 80, 180, 65, 270, 175, 359, 100, 275, 185, 119, 90, 160, 149, 57, 39, 50, 55, 45, 195, 40, 60, 60, 35, 120, 35, 35, 151, 478, 110, 85, 250, 200, 250, 285, 200, 100, 80, 35, 220, 57, 70, 299, 84, 70, 55, 99, 48, 45, 69, 50, 150, 73, 40, 50, 100, 100, 160, 110, 249, 150, 150, 50, 240, 100, 119, 75, 90, 399, 149, 64, 68, 250, 63, 56, 200, 65, 300, 100, 120, 70, 137, 275, 65, 150, 82, 80, 39, 169, 150, 65, 160, 175, 150, 210, 125, 240, 150, 80, 39, 135, 55, 230, 175, 50, 139, 129, 80, 44, 100, 150, 90, 200, 65, 100, 130, 75, 70, 55, 55, 125, 175, 125, 48, 48, 50, 80, 35, 95, 90, 85, 85, 90, 175, 80, 134, 150, 40, 55, 60, 74, 69, 160, 65, 128, 250, 45, 100, 65, 350, 120, 135, 42, 66, 80, 105, 80, 400, 55, 40, 70, 72, 38, 45, 79, 295, 120, 55, 70, 120, 90, 125, 135, 120, 350, 81, 68, 105, 200, 75, 40, 215, 80, 150, 112, 42, 80, 89, 120, 350, 85, 200, 48, 350, 78, 69, 55, 150, 134, 42, 100, 80, 67, 66, 95, 175, 200, 100, 70, 80, 60, 89, 90, 53, 90, 60, 125, 115, 138, 120, 60, 112, 140, 100, 120, 225, 157, 275, 80, 99, 85, 80, 79, 150, 100, 87, 150, 100, 56, 70, 120, 155, 39, 200, 250, 220, 106, 40, 48, 125, 150, 68, 49, 185, 50, 65, 120, 230, 60, 60, 60, 60, 79, 275, 220, 95, 130, 85, 120, 95, 45, 49, 175, 70, 120, 70, 59, 99, 155, 125, 180, 50, 187, 179, 300, 96, 75, 151, 165, 125, 87, 100, 50, 50, 150, 55, 200, 135, 129, 60, 165, 55, 59, 45, 400, 75, 125, 39, 195, 125, 60, 70, 149, 100, 320, 80, 79, 100, 150, 60, 41, 85, 69, 65, 65, 65, 60, 159, 70, 110, 75, 150, 49, 41, 175, 49, 65, 49, 49, 65, 49, 50, 45, 60, 99, 225, 105, 115, 44, 150, 150, 110, 199, 180, 200, 80, 78, 75, 50, 50, 45, 49, 40, 35, 86, 96, 150, 45, 110, 59, 150, 55, 89, 55, 65, 80, 75, 90, 66, 264, 244, 225, 280, 200, 150, 122, 150, 100, 62, 240, 46, 49, 50, 119, 125, 140, 179, 145, 45, 90, 150, 135, 135, 90, 165, 195, 65, 500, 75, 60, 59, 175, 90, 125, 88, 175, 100, 175, 121, 89, 58, 150, 35, 90, 250, 90, 100, 100, 149, 188, 47, 110, 130, 230, 130, 100, 150, 66, 95, 170, 125, 45, 195, 250, 93, 196, 200, 150, 325, 350, 99, 99, 40, 90, 85, 98, 279, 249, 85, 50, 199, 70, 65, 149, 90, 125, 105, 75, 82, 50, 250, 44, 130, 270, 175, 45, 79, 70, 240, 70, 199, 135, 57, 300, 99, 350, 40, 99, 100, 97, 425, 89, 150, 150, 225, 49, 65, 188, 155, 300, 150, 300, 85, 35, 90, 199, 75, 65, 51, 125, 41, 200, 250, 102, 175, 100, 115, 84, 65, 40, 225, 109, 250, 55, 78, 85, 65, 35, 80, 85, 98, 90, 179, 60, 200, 130, 75, 244, 80, 180, 100, 76, 50, 78, 180, 65, 110, 190, 150, 181, 49, 100, 179, 175, 45, 90, 168, 95, 90, 329, 390, 90, 120, 45, 139, 45, 36, 299, 65, 77, 115, 149, 75, 70, 65, 100, 130, 80, 70, 38, 185, 182, 97, 110, 62, 150, 250, 220, 300, 150, 69, 70, 190, 169, 200, 100, 280, 63, 200, 125, 125, 75, 165, 90, 105, 110, 74, 239, 80, 255, 99, 47, 525, 62, 70, 200, 75, 75, 75, 60, 68, 72, 99, 70, 86, 45, 119, 300, 100, 130, 39, 85, 55, 299, 329, 255, 42, 150, 63, 50, 150, 120, 65, 65, 117, 200, 60, 72, 150, 185, 140, 153, 36, 70, 345, 125, 75, 180, 155, 120, 200, 140, 55, 147, 220, 115, 44, 298, 499, 150, 80, 145, 68, 150, 70, 240, 120, 200, 50, 99, 80, 128, 49, 100, 119, 60, 65, 80, 52, 62, 108, 120, 60, 72, 90, 55, 55, 55, 120, 170, 75, 60, 65, 65, 35, 300, 85, 115, 75, 225, 129, 50, 50, 50, 150, 200, 119, 305, 200, 206, 160, 349, 70, 107, 38, 139, 39, 100, 62, 125, 89, 89, 180, 45, 350, 200, 99, 90, 65, 200, 175, 250, 200, 125, 60, 90, 50, 60, 85, 55, 250, 85, 355, 260, 55, 150, 55, 58, 90, 90, 399, 55, 55, 72, 123, 59, 45, 95, 65, 260, 260, 73, 60, 150, 81, 70, 160, 150, 50, 265, 211, 160, 99, 170, 299, 150, 200, 140, 35, 125, 90, 99, 350, 70, 98, 40, 150, 66, 100, 75, 150, 125, 85, 175, 90, 199, 250, 85, 150, 100, 399, 149, 250, 139, 250, 174, 150, 80, 100, 75, 109, 65, 189, 45, 120, 125, 45, 120, 82, 72, 200, 500, 110, 75, 64, 100, 100, 140, 83, 200, 125, 60, 89, 90, 139, 70, 42, 85, 195, 120, 100, 165, 95, 250, 250, 102, 200, 60, 102, 93, 110, 70, 80, 46, 75, 125, 110, 145, 250, 100, 121, 105, 65, 90, 109, 68, 170, 39, 100, 298, 180, 250, 120, 50, 40, 189, 500, 56, 78, 45, 250, 65, 45, 42, 100, 103, 115, 90, 85, 229, 95, 80, 140, 66, 68, 108, 143, 132, 109, 200, 150, 70, 130, 195, 191, 250, 350, 147, 50, 79, 150, 70, 200, 60, 300, 200, 100, 200, 68, 55, 39, 50, 160, 75, 399, 115, 150, 59, 38, 45, 100, 100, 60, 155, 120, 191, 120, 120, 485, 125, 140, 125, 63, 70, 50, 60, 69, 40, 120, 50, 92, 50, 155, 80, 138, 151, 85, 170, 81, 150, 85, 62, 75, 40, 100, 275, 139, 98, 100, 100, 149, 260, 60, 135, 60, 119, 130, 75, 150, 150, 250, 200, 79, 250, 89, 179, 38, 150, 43, 295, 75, 80, 180, 99, 200, 95, 57, 75, 45, 179, 160, 60, 55, 85, 185, 50, 110, 125, 300, 160, 68, 150, 60, 55, 65, 65, 48, 38, 80, 175, 175, 265, 58, 135, 74, 81, 35, 90, 285, 95, 48, 275, 80, 100, 120, 150, 90, 175, 120, 135, 160, 40, 95, 68, 49, 202, 90, 133, 60, 99, 165, 95, 59, 145, 95, 60, 90, 60, 80, 60, 50, 93, 75, 150, 107, 149, 220, 65, 65, 220, 50, 99, 175, 219, 70, 69, 42, 98, 120, 225, 158, 130, 70, 70, 50, 90, 250, 200, 49, 160, 150, 130, 170, 120, 100, 45, 175, 70, 200, 195, 55, 60, 129, 55, 399, 180, 60, 110, 195, 150, 190, 64, 110, 105, 212, 110, 140, 74, 35, 110, 65, 110, 129, 59, 150, 129, 40, 349, 250, 90, 125, 175, 165, 99, 55, 125, 300, 225, 249, 37, 295, 43, 100, 520, 119, 45, 75, 119, 137, 148, 40, 59, 84, 50, 46, 35, 85, 130, 101, 114, 175, 105, 63, 45, 39, 165, 125, 83, 110, 250, 55, 399, 100, 175, 68, 300, 250, 550, 276, 162, 39, 70, 140, 115, 200, 62, 60, 100, 70, 140, 44, 199, 475, 94, 55, 50, 300, 215, 165, 99, 69, 150, 170, 120, 380, 120, 34, 135, 150, 200, 145, 132, 250, 125, 75, 79, 95, 300, 147, 35, 40, 80, 105, 350, 270, 80, 50, 300, 195, 200, 400, 200, 80, 150, 90, 100, 50, 50, 39, 200, 85, 65, 120, 64, 200, 100, 100, 105, 89, 100, 80, 220, 139, 75, 90, 299, 99, 45, 98, 50, 75, 250, 150, 199, 175, 42, 201, 150, 89, 50, 170, 210, 110, 200, 65, 179, 82, 180, 105, 174, 125, 100, 400, 45, 270, 75, 241, 95, 225, 70, 115, 80, 85, 160, 85, 75, 60, 50, 75, 70, 400, 40, 93, 70, 85, 100, 60, 50, 107, 43, 75, 65, 150, 135, 267, 120, 130, 100, 80, 75, 50, 129, 150, 150, 160, 450, 75, 50, 200, 350, 200, 85, 200, 75, 249, 55, 43, 90, 60, 159, 220, 199, 150, 100, 150, 150, 87, 85, 110, 70, 269, 59, 220, 170, 62, 99, 180, 57, 250, 190, 120, 300, 135, 60, 175, 345, 130, 182, 90, 175, 35, 103, 70, 100, 50, 125, 60, 70, 110, 120, 115, 219, 250, 135, 90, 55, 75, 155, 70, 85, 60, 59, 115, 73, 275, 100, 40, 75, 250, 150, 170, 90, 66, 300, 120, 103, 43, 55, 240, 50, 85, 68, 150, 150, 150, 60, 499, 60, 47, 150, 150, 179, 199, 150, 200, 50, 100, 99, 269, 300, 109, 250, 70, 225, 85, 50, 99, 65, 120, 175, 95, 340, 100, 75, 80, 195, 100, 136, 250, 175, 307, 99, 55, 129, 99, 82, 125, 150, 151, 99, 98, 70, 200, 380, 500, 50, 149, 73, 50, 80, 170, 120, 70, 70, 400, 209, 72, 125, 114, 88, 209, 114, 118, 130, 75, 130, 90, 80, 206, 120, 149, 50, 165, 375, 75, 259, 210, 55, 460, 85, 111, 109, 99, 300, 70, 250, 80, 240, 35, 100, 160, 178, 269, 75, 42, 40, 42, 160, 130, 90, 99, 50, 150, 80, 120, 60, 350, 150, 85, 50, 550, 225, 70, 75, 195, 63, 40, 63, 150, 165, 50, 85, 150, 62, 50, 60, 345, 92, 241, 45, 125, 145, 275, 495, 50, 40, 50, 69, 120, 300, 285, 90, 140, 46, 37, 134, 150, 195, 450, 100, 49, 189, 199, 300, 199, 179, 179, 49, 75, 95, 72, 75, 65, 112, 175, 44, 95, 188, 400, 125, 139, 70, 90, 229, 133, 150, 135, 175, 100, 120, 70, 110, 100, 120, 130, 35, 185, 59, 115, 150, 90, 130, 110, 266, 100, 200, 90, 303, 250, 86, 80, 100, 179, 220, 230, 89, 40, 105, 175, 50, 107, 199, 125, 43, 35, 165, 182, 227, 41, 115, 60, 135, 65, 100, 99, 375, 250, 175, 90, 49, 65, 44, 65, 65, 246, 300, 99, 355, 120, 69, 175, 50, 38, 64, 40, 40, 55, 40, 45, 50, 99, 250, 200, 70, 200, 74, 88, 70, 70, 150, 150, 60, 138, 150, 82, 90, 56, 249, 120, 55, 149, 100, 210, 45, 45, 207, 99, 45, 80, 35, 50, 40, 315, 50, 89, 258, 150, 120, 250, 75, 65, 40, 50, 139, 232, 135, 65, 34, 91, 100, 109, 50, 250, 55, 137, 45, 139, 97, 70, 80, 100, 220, 299, 160, 119, 70, 41, 70, 48, 48, 75, 48, 100, 225, 80, 100, 47, 35, 300, 60, 125, 280, 195, 225, 112, 399, 125, 200, 265, 150, 60, 125, 150, 54, 95, 149, 119, 90, 264, 80, 145, 89, 120, 190, 275, 168, 200, 180, 100, 149, 55, 115, 79, 120, 100, 333, 70, 63, 125, 225, 210, 50, 40, 399, 120, 418, 350, 56, 110, 155, 120, 125, 134, 350, 232, 50, 95, 89, 35, 180, 200, 200, 300, 150, 55, 88, 79, 70, 140, 40, 34, 90, 50, 35, 70, 35, 45, 37, 42, 65, 50, 125, 150, 69, 175, 95, 119, 260, 59, 189, 105, 45, 140, 180, 80, 214, 65, 60, 195, 36, 42, 60, 75, 40, 119, 95, 42, 100, 42, 42, 250, 150, 42, 250, 100, 90, 452, 343, 334, 238, 303, 312, 321, 289, 62, 88, 150, 255, 282, 332, 305, 314, 45, 453, 278, 75, 237, 189, 150, 90, 90, 47, 250, 69, 120, 200, 240, 160, 70, 313, 65, 308, 100, 60, 90, 120, 51, 150, 55, 115, 44, 243, 290, 65, 55, 115, 250, 120, 140, 50, 70, 65, 50, 35, 60, 245, 90, 200, 95, 45, 35, 50, 150, 150, 65, 110, 40, 175, 125, 215, 199, 45, 199, 90, 199, 199, 179, 60, 179, 179, 179, 200, 55, 55, 190, 300, 125, 295, 125, 47, 95, 63, 125, 225, 300, 40, 149, 90, 160, 207, 42, 42, 115, 275, 195, 100, 35, 180, 42, 150, 65, 42, 60, 75, 120, 75, 110, 189, 55, 35, 149, 55, 50, 65, 99, 90, 50, 175, 79, 190, 34, 443, 150, 75, 299, 112, 125, 392, 150, 145, 55, 50, 195, 115, 72, 264, 150, 101, 70, 185, 125, 150, 50, 250, 261, 52, 100, 50, 90, 129, 75, 109, 45, 100, 275, 125, 72, 125, 243, 65, 70, 200, 65, 100, 97, 275, 55, 101, 180, 99, 65, 95, 300, 200, 100, 165, 120, 125, 200, 45, 260, 40, 70, 295, 119, 55, 40, 40, 180, 75, 130, 200, 150, 70, 359, 95, 40, 38, 40, 51, 90, 85, 150, 284, 185, 166, 150, 398, 185, 200, 300, 189, 55, 200, 52, 400, 102, 390, 450, 90, 111, 60, 295, 55, 325, 135, 179, 80, 80, 175, 211, 133, 70, 75, 150, 240, 43, 99, 41, 125, 250, 115, 392, 125, 360, 175, 90, 95, 50, 150, 100, 59, 60, 48, 48, 65, 69, 70, 120, 90, 40, 60, 45, 150, 48, 99, 94, 55, 520, 70, 55, 49, 135, 110, 40, 500, 65, 150, 60, 400, 195, 45, 45, 240, 199, 35, 57, 65, 36, 150, 120, 150, 250, 55, 56, 43, 80, 90, 100, 52, 182, 35, 349, 125, 100, 231, 69, 200, 135, 120, 125, 199, 37, 80, 55, 250, 55, 95, 40, 55, 190, 80, 55, 80, 160, 75, 80, 250, 85, 120, 36, 145, 55, 49, 90, 50, 100, 190, 150, 50, 500, 150, 200, 59, 100, 125, 150, 55, 240, 140, 250, 199, 150, 299, 85, 152, 209, 100, 45, 96, 100, 51, 300, 120, 85, 65, 165, 200, 60, 175, 34, 79, 95, 80, 70, 240, 100, 100, 120, 200, 172, 68, 75, 55, 50, 125, 160, 60, 65, 75, 61, 150, 125, 99, 75, 70, 55, 90, 65, 90, 180, 99, 100, 140, 49, 150, 285, 150, 89, 75, 75, 99, 65, 133, 130, 172, 40, 100, 80, 180, 93, 100, 299, 69, 110, 120, 120, 250, 130, 43, 179, 90, 500, 60, 70, 228, 150, 154, 179, 283, 45, 69, 39, 150, 54, 62, 180, 145, 200, 110, 225, 200, 70, 150, 95, 80, 250, 55, 150, 55, 55, 35, 350, 195, 89, 59, 48, 149, 49, 77, 225, 49, 120, 200, 115, 190, 175, 35, 37, 79, 40, 100, 199, 550, 55, 40, 150, 140, 35, 89, 48, 239, 90, 350, 48, 350, 89, 129, 48, 40, 220, 120, 48, 150, 99, 100, 100, 80, 50, 100, 150, 75, 116, 60, 70, 125, 90, 200, 90, 350, 75, 65, 72, 120, 180, 250, 160, 300, 66, 65, 160, 38, 185, 199, 175, 60, 159, 432, 66, 80, 150, 185, 190, 42, 45, 131, 89, 40, 45, 129, 122, 129, 50, 140, 130, 180, 160, 130, 150, 90, 199, 90, 444, 349, 195, 70, 150, 199, 199, 120, 40, 120, 350, 94, 185, 150, 225, 120, 100, 130, 140, 89, 40, 145, 185, 250, 99, 120, 75, 180, 250, 114, 45, 100, 34, 85, 150, 50, 75, 70, 60, 37, 135, 300, 65, 300, 180, 40, 80, 160, 80, 110, 285, 49, 60, 300, 55, 190, 195, 100, 160, 100, 60, 65, 50, 450, 115, 48, 499, 240, 500, 48, 80, 109, 52, 139, 145, 80, 220, 180, 99, 61, 180, 45, 140, 99, 70, 60, 85, 350, 190, 180, 60, 38, 210, 350, 60, 125, 155, 45, 85, 109, 98, 400, 125, 160, 125, 93, 275, 375, 80, 299, 100, 90, 55, 180, 45, 80, 153, 350, 125, 425, 88, 65, 420, 220, 175, 380, 45, 300, 443, 50, 116, 119, 225, 150, 179, 200, 60, 83, 300, 55, 262, 255, 245, 185, 185, 252, 189, 228, 240, 241, 265, 263, 243, 254, 35, 45, 80, 80, 60, 115, 235, 150, 100, 199, 150, 100, 89, 70, 113, 80, 150, 40, 499, 200, 75, 299, 55, 50, 175, 200, 102, 99, 200, 55, 65, 140, 100, 550, 134, 150, 105, 75, 250, 295, 35, 180, 70, 130, 60, 85, 80, 80, 220, 80, 120, 200, 40, 60, 80, 230, 99, 70, 139, 135, 350, 99, 450, 120, 60, 130, 100, 75, 199, 183, 35, 104, 100, 150, 69, 49, 205, 91, 90, 45, 520, 58, 130, 70, 40, 399, 118, 37, 370, 165, 125, 99, 35, 100, 150, 175, 75, 85, 100, 200, 155, 400, 60, 135, 200, 140, 120, 250, 90, 200, 200, 55, 55, 250, 50, 58, 56, 55, 160, 149, 35, 250, 175, 55, 55, 100, 89, 140, 189, 55, 65, 89, 89, 165, 142, 46, 75, 63, 75, 249, 250, 60, 35, 100, 65, 399, 120, 60, 100, 125, 90, 100, 35, 75, 85, 50, 80, 350, 295, 130, 80, 79, 70, 225, 300, 83, 310, 209, 247, 300, 80, 99, 100, 60, 40, 189, 300, 200, 44, 60, 48, 350, 90, 35, 85, 250, 70, 35, 160, 93, 45, 249, 150, 49, 48, 35, 59, 120, 50, 65, 80, 65, 85, 288, 55, 200, 60, 112, 35, 150, 61, 130, 70, 55, 200, 100, 48, 55, 35, 50, 115, 250, 60, 155, 188, 205, 185, 200, 200, 150, 279, 40, 125, 100, 195, 120, 65, 125, 45, 89, 45, 250, 65, 450, 299, 99, 38, 80, 70, 300, 39, 70, 300, 250, 199, 350, 60, 125, 81, 219, 35, 75, 52, 40, 215, 110, 75, 125, 99, 190, 110, 250, 48, 48, 90, 60, 97, 99, 48, 48, 156, 98, 99, 175, 38, 35, 180, 200, 195, 50, 60, 45, 55, 90, 47, 65, 250, 42, 36, 42, 100, 89, 45, 70, 478, 400, 209, 205, 85, 365, 65, 60, 120, 80, 69, 60, 200, 115, 45, 100, 72, 75, 40, 79, 130, 40, 45, 42, 100, 99, 90, 35, 150, 70, 130, 45, 150, 75, 70, 110, 216, 40, 60, 60, 75, 187, 39, 60, 75, 75, 39, 187, 85, 75, 50, 150, 72, 50, 59, 125, 100, 100, 160, 45, 90, 39, 251, 67, 147, 115, 130, 65, 55, 55, 67, 50, 35, 104, 99, 125, 110, 89, 105, 175, 175, 299, 65, 39, 300, 80, 34, 53, 80, 110, 150, 38, 180, 125, 300, 75, 450, 110, 399, 90, 175, 140, 190, 111, 45, 65, 70, 69, 70, 399, 90, 500, 160, 209, 120, 99, 80, 249, 120, 140, 110, 145, 70, 60, 190, 70, 115, 135, 199, 80, 140, 225, 45, 175, 53, 44, 59, 65, 59, 70, 59, 199, 300, 61, 90, 60, 179, 199, 150, 85, 80, 100, 35, 74, 100, 114, 140, 77, 170, 175, 156, 45, 110, 114, 35, 39, 65, 116, 101, 200, 85, 70, 172, 65, 115, 495, 525, 395, 82, 100, 70, 100, 35, 175, 130, 55, 100, 105, 90, 60, 300, 70, 229, 60, 125, 109, 400, 45, 197, 85, 120, 170, 55, 125, 100, 180, 99, 145, 247, 120, 70, 80, 200, 150, 188, 110, 99, 70, 75, 225, 130, 40, 88, 86, 55, 125, 200, 80, 80, 99, 100, 85, 49, 69, 40, 175, 65, 85, 140, 75, 350, 150, 50, 80, 133, 50, 219, 60, 235, 40, 100, 92, 45, 50, 42, 150, 35, 289, 55, 250, 56, 120, 149, 80, 59, 65, 39, 140, 55, 40, 115, 400, 35, 40, 110, 35, 130, 299, 130, 128, 45, 89, 39, 49, 49, 61, 70, 40, 50, 175, 50, 95, 80, 90, 250, 40, 80, 80, 150, 75, 89, 99, 99, 170, 50, 82, 299, 121, 75, 199, 79, 60, 45, 125, 199, 48, 40, 85, 45, 68, 41, 77, 72, 79, 120, 100, 106, 110, 135, 90, 47, 130, 100, 180, 55, 60, 350, 65, 90, 120, 70, 135, 95, 50, 70, 60, 97, 155, 58, 70, 57, 129, 109, 128, 80, 85, 55, 69, 120, 120, 65, 140, 85, 87, 205, 145, 72, 149, 95, 80, 190, 200, 50, 99, 199, 129, 300, 199, 110, 175, 200, 60, 250, 99, 130, 120, 115, 80, 45, 95, 40, 75, 200, 105, 130, 60, 50, 135, 120, 136, 50, 175, 85, 80, 85, 255, 250, 119, 68, 119, 250, 49, 99, 200, 140, 220, 145, 200, 175, 45, 120, 125, 150, 167, 220, 250, 107, 54, 35, 45, 200, 200, 165, 85, 57, 150, 75, 50, 50, 175, 70, 90, 56, 65, 100, 200, 97, 45, 85, 40, 50, 100, 50, 299, 285, 170, 100, 60, 70, 140, 215, 52, 85, 250, 135, 230, 54, 70, 75, 80, 59, 80, 325, 80, 69, 120, 120, 45, 85, 59, 100, 375, 45, 117, 48, 48, 53, 99, 48, 44, 55, 85, 115, 45, 75, 99, 80, 209, 65, 65, 75, 130, 160, 115, 123, 280, 70, 129, 37, 150, 150, 54, 79, 200, 250, 59, 132, 70, 40, 250, 35, 59, 59, 225, 65, 126, 63, 165, 65, 50, 110, 40, 495, 200, 130, 40, 218, 65, 80, 107, 46, 175, 159, 115, 75, 50, 149, 175, 65, 90, 145, 150, 50, 87, 65, 145, 225, 100, 42, 75, 90, 140, 60, 60, 73, 48, 60, 60, 60, 60, 60, 100, 120, 115, 200, 110, 65, 57, 175, 44, 44, 99, 250, 99, 99, 86, 519, 65, 37, 65, 40, 65, 40, 65, 120, 110, 142, 159, 40, 49, 49, 75, 38, 75, 100, 70, 50, 190, 119, 110, 68, 95, 113, 45, 200, 42, 95, 275, 85, 60, 90, 250, 75, 450, 225, 80, 175, 99, 135, 120, 289, 60, 160, 149, 99, 100, 75, 199, 70, 75, 120, 60, 75, 276, 130, 50, 260, 128, 75, 60, 70, 100, 36, 99, 355, 35, 211, 55, 62, 37, 60, 75, 110, 60, 225, 100, 200, 60, 61, 375, 200, 120, 144, 175, 50, 250, 180, 250, 60, 309, 55, 45, 115, 199, 50, 121, 45, 75, 150, 165, 115, 50, 80, 90, 80, 55, 100, 345, 169, 35, 65, 80, 60, 120, 100, 450, 55, 80, 160, 450, 80, 40, 40, 150, 53, 90, 62, 45, 125, 110, 99, 90, 42, 60, 90, 42, 190, 300, 189, 120, 150, 85, 35, 85, 150, 50, 115, 53, 50, 179, 130, 85, 135, 80, 90, 150, 40, 59, 100, 119, 42, 49, 76, 97, 300, 93, 220, 96, 299, 160, 110, 220, 130, 70, 150, 180, 100, 250, 250, 70, 200, 48, 60, 65, 300, 45, 175, 150, 200, 55, 160, 110, 180, 90, 125, 68, 365, 71, 148, 46, 165, 225, 250, 170, 175, 100, 70, 100, 180, 98, 96, 167, 85, 500, 98, 125, 75, 99, 400, 290, 37, 80, 295, 160, 45, 245, 80, 75, 145, 100, 80, 100, 250, 100, 418, 110, 140, 250, 65, 69, 69, 69, 140, 450, 220, 210, 58, 245, 245, 200, 229, 204, 100, 156, 240, 132, 130, 404, 234, 425, 235, 503, 250, 40, 258, 392, 375, 231, 194, 240, 229, 230, 472, 256, 149, 40, 95, 150, 51, 175, 75, 125, 200, 454, 262, 472, 203, 247, 377, 229, 234, 503, 228, 404, 252, 229, 431, 412, 403, 229, 227, 205, 85, 194, 214, 229, 185, 234, 201, 229, 244, 227, 451, 241, 252, 250, 419, 505, 228, 242, 175, 221, 203, 228, 215, 198, 468, 227, 236, 244, 248, 241, 390, 230, 230, 227, 214, 188, 247, 220, 196, 218, 130, 396, 214, 50, 196, 380, 229, 498, 215, 231, 234, 212, 228, 214, 214, 201, 214, 235, 165, 256, 248, 216, 223, 229, 200, 110, 55, 65, 150, 100, 68, 100, 215, 65, 85, 50, 255, 300, 75, 50, 64, 225, 50, 35, 211, 95, 52, 64, 85, 200, 54, 195, 210, 45, 175, 65, 70, 195, 80, 300, 215, 40, 77, 49, 89, 170, 65, 120, 150, 57, 108, 70, 89, 99, 115, 119, 136, 67, 100, 220, 45, 145, 195, 75, 160, 38, 75, 55, 100, 125, 177, 60, 60, 158, 140, 60, 60, 140, 100, 125, 74, 65, 500, 125, 80, 379, 40, 42, 90, 145, 400, 150, 50, 95, 40, 40, 42, 42, 37, 225, 43, 160, 115, 40, 159, 150, 249, 85, 188, 488, 55, 79, 100, 57, 260, 55, 51, 95, 125, 275, 35, 35, 175, 95, 95, 60, 110, 67, 75, 60, 190, 85, 125, 50, 172, 80, 58, 179, 49, 166, 133, 220, 62, 125, 80, 70, 40, 179, 240, 55, 515, 175, 41, 180, 200, 60, 125, 200, 220, 75, 250, 62, 65, 180, 85, 325, 104, 77, 50, 120, 95, 42, 180, 110, 52, 90, 79, 100, 135, 51, 64, 48, 282, 169, 169, 172, 199, 202, 150, 150, 179, 99, 150, 175, 96, 74, 100, 120, 35, 120, 400, 175, 100, 100, 75, 175, 55, 75, 69, 65, 85, 143, 65, 150, 107, 87, 175, 48, 82, 78, 105, 285, 83, 150, 145, 150, 55, 175, 90, 85, 90, 199, 40, 90, 125, 350, 70, 36, 75, 160, 295, 295, 125, 215, 115, 175, 299, 146, 250, 161, 140, 55, 48, 66, 70, 85, 300, 160, 58, 145, 70, 35, 50, 500, 126, 48, 139, 135, 369, 35, 39, 50, 125, 60, 200, 55, 200, 120, 150, 69, 110, 257, 243, 39, 65, 165, 59, 35, 115, 105, 107, 308, 99, 35, 300, 395, 105, 80, 120, 48, 51, 260, 82, 45, 37, 115, 300, 316, 228, 79, 95, 200, 160, 42, 95, 90, 89, 83, 349, 90, 100, 80, 75, 278, 150, 40, 65, 90, 199, 106, 132, 35, 35, 100, 42, 43, 100, 35, 40, 38, 40, 35, 60, 147, 80, 135, 484, 211, 388, 407, 425, 432, 205, 248, 396, 376, 125, 230, 416, 50, 93, 100, 235, 45, 180, 202, 50, 160, 90, 220, 67, 45, 250, 190, 42, 109, 150, 150, 137, 44, 350, 275, 150, 125, 65, 70, 166, 55, 55, 95, 115, 350, 506, 165, 160, 102, 359, 190, 168, 125, 170, 85, 150, 125, 95, 100, 100, 58, 100, 100, 100, 100, 100, 100, 100, 199, 100, 100, 249, 100, 209, 250, 230, 230, 324, 379, 299, 359, 304, 146, 149, 73, 42, 42, 150, 45, 300, 105, 135, 200, 75, 300, 185, 45, 199, 180, 80, 39, 113, 234, 50, 120, 55, 170, 189, 42, 45, 175, 130, 94, 375, 125, 60, 250, 175, 50, 72, 160, 35, 80, 55, 75, 55, 40, 150, 80, 111, 82, 262, 244, 240, 110, 50, 38, 220, 123, 50, 39, 100, 110, 250, 85, 85, 80, 45, 70, 44, 181, 65, 70, 51, 140, 170, 79, 36, 145, 55, 149, 99, 45, 55, 400, 115, 39, 158, 175, 300, 150, 95, 140, 145, 60, 80, 52, 145, 48, 50, 101, 62, 175, 55, 60, 145, 140, 75, 63, 62, 65, 199, 150, 130, 190, 100, 50, 339, 129, 200, 76, 231, 300, 140, 300, 63, 65, 290, 59, 40, 80, 35, 250, 225, 135, 168, 250, 50, 125, 50, 70, 110, 180, 300, 489, 69, 53, 99, 115, 69, 99, 42, 220, 65, 40, 105, 79, 60, 95, 45, 139, 56, 55, 68, 221, 58, 40, 189, 40, 250, 135, 55, 100, 324, 95, 75, 140, 90, 90, 223, 150, 70, 45, 260, 53, 140, 104, 95, 90, 150, 50, 300, 375, 325, 175, 170, 38, 110, 42, 197, 160, 80, 48, 200, 130, 400, 90, 50, 45, 55, 180, 239, 50, 50, 149, 100, 64, 35, 68, 44, 60, 177, 50, 39, 219, 80, 70, 50, 60, 50, 95, 260, 159, 55, 120, 135, 325, 190, 52, 60, 199, 45, 60, 52, 45, 45, 49, 55, 35, 60, 65, 100, 45, 140, 65, 55, 128, 180, 115, 65, 115, 150, 100, 122, 39, 35, 59, 175, 325, 115, 120, 131, 100, 66, 190, 220, 165, 99, 65, 70, 145, 90, 100, 90, 65, 175, 170, 90, 105, 230, 60, 170, 65, 55, 95, 107, 35, 199, 200, 50, 299, 100, 185, 50, 89, 90, 200, 80, 150, 200, 117, 117, 180, 150, 93, 75, 60, 81, 70, 79, 35, 40, 80, 75, 225, 168, 55, 62, 200, 62, 75, 200, 250, 85, 195, 225, 75, 90, 75, 75, 75, 75, 75, 299, 35, 82, 60, 80, 75, 86, 319, 100, 260, 70, 100, 50, 65, 65, 125, 249, 93, 400, 135, 150, 50, 250, 100, 168, 40, 82, 85, 160, 160, 72, 150, 80, 60, 80, 150, 45, 35, 50, 195, 83, 70, 260, 520, 300, 175, 170, 73, 95, 100, 160, 45, 35, 160, 35, 49, 110, 94, 299, 120, 204, 55, 279, 52, 300, 388, 40, 195, 40, 400, 45, 70, 99, 220, 50, 39, 175, 70, 350, 120, 129, 50, 35, 45, 82, 180, 55, 65, 84, 150, 55, 70, 148, 285, 150, 85, 75, 110, 80, 250, 150, 110, 122, 375, 399, 201, 150, 95, 69, 75, 103, 150, 46, 95, 199, 62, 65, 85, 109, 90, 175, 190, 170, 130, 100, 150, 290, 110, 53, 200, 180, 80, 260, 190, 75, 100, 75, 50, 125, 95, 125, 180, 165, 85, 199, 90, 65, 45, 70, 60, 65, 130, 135, 399, 75, 89, 250, 58, 120, 100, 85, 215, 150, 85, 98, 293, 65, 85, 120, 69, 63, 58, 41, 39, 180, 44, 177, 49, 44, 44, 149, 300, 140, 35, 75, 90, 74, 396, 70, 100, 100, 100, 180, 220, 195, 75, 310, 300, 85, 85, 65, 50, 78, 50, 85, 41, 144, 69, 230, 69, 40, 151, 275, 180, 55, 120, 60, 75, 110, 129, 129, 55, 217, 299, 120, 135, 75, 159, 100, 100, 85, 45, 75, 45, 135, 71, 70, 165, 55, 125, 197, 166, 500, 90, 140, 200, 190, 35, 125, 280, 249, 200, 124, 120, 125, 95, 105, 214, 160, 165, 300, 75, 111, 150, 175, 180, 165, 395, 90, 225, 250, 150, 40, 336, 320, 150, 250, 46, 75, 60, 400, 208, 72, 90, 70, 220, 200, 140, 80, 65, 75, 125, 75, 55, 60, 450, 163, 75, 196, 174, 295, 60, 100, 199, 50, 185, 35, 80, 45, 110, 109, 180, 245, 150, 139, 130, 228, 236, 97, 55, 49, 49, 65, 50, 110, 49, 150, 55, 195, 75, 55, 59, 59, 55, 48, 300, 55, 52, 65, 89, 39, 65, 150, 169, 169, 70, 169, 65, 380, 300, 120, 200, 285, 175, 169, 60, 70, 169, 169, 169, 169, 90, 90, 90, 90, 109, 144, 80, 58, 50, 89, 159, 60, 120, 124, 70, 127, 69, 150, 295, 95, 70, 180, 74, 49, 81, 100, 230, 59, 100, 45, 138, 60, 85, 49, 160, 45, 60, 55, 45, 69, 59, 87, 65, 85, 300, 55, 70, 95, 240, 50, 65, 240, 47, 120, 200, 419, 95, 150, 55, 78, 167, 65, 88, 40, 135, 70, 109, 95, 95, 65, 50, 56, 125, 160, 99, 45, 327, 110, 190, 120, 99, 350, 50, 80, 57, 38, 140, 165, 165, 50, 65, 125, 250, 50, 115, 40, 80, 85, 120, 300, 80, 74, 60, 100, 47, 245, 65, 130, 173, 100, 120, 105, 72, 79, 49, 134, 160, 140, 50, 120, 155, 260, 130, 89, 42, 159, 70, 50, 99, 99, 60, 90, 106, 115, 38, 65, 75, 275, 249, 90, 58, 39, 235, 182, 150, 120, 100, 90, 194, 145, 470, 247, 50, 80, 80, 62, 171, 395, 72, 70, 55, 225, 57, 99, 35, 89, 135, 85, 85, 60, 60, 219, 442, 250, 160, 240, 60, 180, 59, 300, 120, 39, 50, 150, 51, 100, 60, 250, 68, 100, 98, 400, 110, 49, 300, 113, 55, 100, 285, 45, 195, 78, 42, 99, 47, 51, 170, 125, 115, 50, 57, 43, 160, 130, 505, 425, 150, 50, 62, 380, 49, 206, 123, 145, 75, 350, 76, 200, 35, 49, 150, 150, 195, 140, 35, 65, 65, 65, 50, 40, 40, 180, 115, 69, 40, 39, 99, 40, 38, 64, 100, 110, 245, 135, 299, 299, 110, 60, 65, 90, 174, 260, 50, 70, 110, 95, 425, 150, 119, 45, 50, 34, 175, 109, 140, 175, 299, 234, 230, 230, 217, 152, 125, 289, 330, 289, 150, 40, 228, 203, 49, 50, 149, 55, 108, 160, 52, 89, 57, 57, 40, 55, 290, 45, 150, 50, 68, 195, 45, 66, 125, 130, 50, 51, 82, 360, 45, 89, 75, 105, 90, 75, 250, 79, 280, 75, 58, 55, 65, 65, 63, 250, 200, 104, 65, 65, 215, 419, 215, 195, 225, 306, 90, 200, 230, 150, 55, 68, 70, 79, 175, 37, 75, 50, 225, 105, 85, 69, 60, 85, 60, 41, 130, 149, 244, 472, 474, 214, 235, 244, 495, 260, 230, 95, 229, 90, 240, 236, 229, 160, 229, 200, 35, 169, 75, 240, 75, 50, 95, 120, 60, 229, 130, 100, 150, 355, 150, 89, 45, 395, 70, 134, 200, 215, 85, 65, 125, 70, 250, 159, 155, 300, 75, 51, 80, 90, 64, 549, 100, 550, 65, 99, 199, 154, 50, 70, 60, 65, 250, 70, 65, 115, 325, 75, 50, 65, 70, 39, 170, 80, 71, 100, 70, 274, 140, 130, 49, 100, 85, 65, 150, 139, 110, 180, 300, 300, 200, 69, 45, 119, 125, 145, 225, 125, 100, 53, 100, 53, 89, 90, 66, 115, 120, 165, 115, 120, 137, 150, 199, 100, 115, 349, 110, 75, 60, 170, 56, 85, 100, 117, 120, 100, 78, 85, 160, 290, 50, 35, 67, 265, 180, 180, 55, 250, 60, 65, 60, 420, 60, 155, 100, 255, 229, 235, 175, 40, 60, 50, 60, 390, 140, 475, 150, 228, 70, 54, 55, 79, 64, 65, 90, 162, 105, 420, 45, 119, 90, 120, 160, 65, 100, 35, 55, 85, 88, 160, 70, 76, 90, 200, 59, 99, 65, 150, 185, 165, 125, 150, 88, 99, 151, 105, 345, 150, 57, 65, 200, 47, 100, 129, 150, 66, 35, 63, 65, 150, 360, 170, 61, 79, 325, 100, 199, 200, 300, 81, 81, 81, 81, 100, 165, 75, 92, 70, 65, 60, 34, 140, 95, 120, 130, 35, 189, 44, 135, 55, 199, 400, 129, 225, 75, 35, 159, 36, 190, 70, 150, 75, 75, 45, 68, 135, 103, 85, 200, 95, 90, 60, 45, 44, 120, 450, 98, 195, 62, 34, 75, 95, 130, 150, 220, 85, 135, 42, 75, 85, 140, 99, 140, 250, 190, 175, 65, 65, 339, 65, 249, 500, 149, 79, 225, 160, 54, 53, 90, 65, 55, 250, 130, 90, 40, 40, 40, 80, 69, 200, 110, 54, 54, 50, 49, 60, 60, 100, 55, 180, 350, 66, 120, 69, 70, 350, 179, 90, 65, 50, 45, 100, 83, 98, 250, 250, 150, 120, 120, 49, 149, 68, 75, 90, 150, 89, 228, 256, 188, 240, 255, 199, 228, 99, 99, 150, 161, 123, 299, 49, 125, 123, 190, 225, 50, 59, 250, 65, 408, 100, 264, 75, 50, 60, 80, 49, 199, 239, 118, 90, 91, 90, 69, 92, 59, 149, 396, 215, 99, 100, 180, 68, 169, 66, 68, 70, 40, 90, 90, 99, 50, 57, 200, 130, 119, 500, 500, 125, 65, 150, 60, 75, 130, 100, 100, 200, 130, 95, 111, 200, 149, 140, 140, 60, 49, 195, 78, 140, 140, 45, 70, 90, 170, 59, 365, 208, 75, 150, 135, 210, 44, 79, 60, 75, 75, 75, 75, 75, 60, 250, 149, 130, 190, 90, 69, 155, 450, 178, 40, 250, 35, 35, 45, 295, 244, 409, 185, 230, 78, 105, 165, 225, 54, 275, 55, 250, 135, 370, 430, 159, 390, 410, 265, 150, 101, 150, 225, 199, 200, 59, 75, 210, 120, 78, 38, 256, 229, 89, 150, 500, 74, 217, 203, 305, 65, 127, 99, 37, 50, 195, 120, 120, 499, 35, 67, 75, 63, 189, 65, 59, 50, 55, 63, 95, 45, 50, 63, 125, 470, 229, 470, 228, 239, 150, 99, 380, 50, 300, 100, 200, 320, 52, 304, 239, 65, 300, 60, 50, 539, 249, 250, 249, 49, 499, 87, 250, 250, 50, 350, 50, 101, 60, 250, 250, 168, 48, 249, 46, 50, 39, 75, 499, 65, 145, 299, 53, 247, 311, 99, 60, 299, 250, 150, 195, 85, 93, 120, 189, 129, 280, 38, 150, 145, 95, 65, 220, 500, 180, 176, 500, 86, 155, 199, 270, 199, 199, 219, 275, 113, 249, 68, 50, 135, 120, 65, 90, 60, 50, 335, 89, 70, 65, 225, 199, 70, 155, 95, 72, 75, 40, 450, 150, 300, 135, 135, 300, 100, 48, 40, 150, 56, 199, 120, 95, 50, 70, 110, 259, 190, 100, 200, 249, 300, 128, 120, 134, 389, 70, 380, 75, 115, 239, 140, 180, 45, 210, 499, 129, 60, 299, 150, 94, 300, 160, 200, 132, 139, 129, 100, 65, 50, 55, 89, 60, 175, 85, 60, 100, 120, 129, 70, 250, 60, 50, 79, 359, 135, 70, 250, 499, 300, 64, 59, 69, 120, 349, 325, 63, 175, 200, 449, 200, 60, 65, 55, 279, 120, 350, 112, 120, 438, 49, 99, 247, 125, 35, 380, 70, 90, 200, 399, 200, 90, 145, 190, 58, 341, 58, 150, 90, 53, 299, 53, 190, 179, 49, 85, 190, 49, 50, 80, 85, 94, 95, 42, 250, 145, 79, 389, 50, 150, 50, 159, 61, 179, 120, 195, 70, 75, 75, 76, 50, 100, 240, 100, 55, 55, 150, 230, 179, 180, 179, 150, 240, 130, 89, 150, 165, 160, 379, 36, 200, 98, 99, 65, 100, 230, 75, 85, 449, 399, 85, 100, 82, 65, 100, 85, 290, 190, 161, 250, 299, 69, 199, 399, 50, 48, 365, 75, 150, 50, 150, 250, 150, 350, 335, 40, 399, 100, 320, 150, 120, 69, 250, 64, 340, 49, 119, 65, 325, 485, 110, 115, 55, 99, 148, 95, 300, 95, 70, 50, 40, 145, 149, 42, 89, 300, 43, 349, 150, 160, 479, 69, 35, 60, 58, 58, 299, 299, 58, 58, 99, 100, 79, 299, 200, 149, 58, 89, 99, 79, 89, 155, 99, 65, 79, 399, 90, 100, 125, 60, 130, 125, 119, 360, 43, 280, 60, 309, 215, 49, 115, 500, 69, 70, 40, 135, 90, 37, 150, 170, 85, 254, 50, 140, 367, 165, 55, 45, 96, 70, 60, 150, 345, 100, 100, 100, 65, 259, 100, 78, 178, 135, 45, 70, 265, 140, 130, 175, 341, 320, 549, 290, 149, 150, 130, 38, 95, 160, 38, 200, 38, 38, 243, 100, 350, 450, 375, 425, 425, 100, 100, 100, 100, 100, 100, 100, 100, 211, 300, 100, 100, 100, 100, 100, 290, 400, 250, 60, 150, 275, 47, 79, 179, 150, 154, 65, 109, 60, 100, 500, 149, 210, 98, 65, 200, 115, 285, 140, 54, 90, 215, 86, 305, 99, 125, 50, 70, 100, 350, 115, 105, 100, 105, 100, 73, 150, 185, 140, 85, 60, 120, 150, 150, 400, 50, 100, 125, 299, 55, 200, 140, 250, 85, 275, 55, 94, 70, 45, 390, 129, 310, 78, 200, 170, 349, 48, 97, 222, 48, 43, 150, 94, 55, 48, 285, 95, 130, 224, 35, 160, 220, 189, 120, 249, 75, 300, 200, 299, 150, 85, 180, 420, 299, 245, 65, 146, 125, 400, 175, 159, 49, 125, 64, 88, 199, 115, 36, 99, 99, 150, 199, 240, 175, 45, 70, 180, 149, 69, 35, 75, 75, 125, 60, 35, 75, 62, 100, 150, 130, 299, 70, 60, 100, 290, 200, 94, 50, 60, 250, 210, 400, 60, 300, 300, 36, 300, 91, 200, 150, 350, 150, 240, 255, 180, 55, 75, 60, 100, 70, 99, 210, 55, 169, 40, 40, 333, 199, 200, 100, 60, 255, 50, 43, 85, 250, 100, 449, 150, 200, 500, 85, 120, 300, 73, 349, 80, 200, 85, 55, 100, 350, 125, 35, 75, 35, 83, 130, 275, 54, 99, 225, 59, 45, 90, 100, 80, 250, 300, 65, 38, 350, 250, 269, 85, 70, 139, 149, 100, 90, 200, 499, 92, 59, 99, 180, 460, 50, 75, 109, 65, 89, 199, 42, 42, 65, 69, 195, 320, 100, 100, 172, 220, 55, 200, 85, 50, 95, 57, 120, 115, 278, 190, 140, 100, 80, 98, 100, 80, 50, 110, 51, 80, 90, 212, 500, 65, 60, 99, 90, 51, 56, 265, 56, 219, 68, 160, 250, 125, 68, 175, 123, 140, 90, 250, 250, 50, 479, 75, 50, 60, 110, 175, 500, 79, 490, 94, 140, 80, 40, 109, 75, 115, 328, 114, 166, 325, 200, 80, 499, 499, 100, 120, 50, 52, 90, 89, 217, 150, 76, 70, 75, 75, 99, 249, 75, 75, 85, 75, 195, 300, 500, 199, 77, 90, 100, 60, 50, 395, 99, 200, 190, 300, 70, 260, 399, 55, 475, 200, 55, 99, 289, 499, 299, 125, 95, 250, 200, 93, 225, 90, 75, 75, 249, 44, 50, 150, 110, 93, 370, 90, 440, 40, 489, 203, 154, 200, 300, 89, 70, 399, 289, 117, 120, 188, 150, 375, 85, 175, 65, 275, 75, 85, 150, 68, 150, 90, 42, 106, 125, 199, 155, 175, 135, 101, 299, 268, 150, 55, 85, 45, 194, 140, 89, 151, 50, 70, 65, 120, 90, 75, 40, 250, 200, 180, 200, 245, 459, 350, 55, 350, 275, 78, 60, 149, 35, 36, 38, 50, 150, 175, 169, 85, 68, 80, 65, 79, 80, 130, 58, 135, 150, 40, 300, 245, 35, 245, 145, 145, 145, 145, 158, 145, 50, 174, 150, 239, 150, 80, 200, 100, 150, 499, 300, 55, 250, 79, 200, 200, 120, 299, 48, 68, 173, 50, 85, 175, 118, 399, 108, 248, 190, 225, 175, 130, 60, 102, 131, 80, 200, 80, 499, 447, 447, 255, 320, 56, 295, 56, 119, 195, 295, 450, 399, 300, 495, 75, 160, 85, 88, 150, 75, 400, 189, 92, 550, 180, 149, 50, 295, 70, 295, 129, 400, 428, 123, 88, 89, 80, 111, 90, 109, 68, 38, 360, 145, 120, 100, 330, 179, 185, 200, 180, 75, 220, 180, 60, 75, 155, 180, 180, 180, 400, 60, 135, 79, 77, 59, 77, 100, 69, 120, 69, 120, 180, 60, 200, 549, 50, 125, 295, 385, 479, 99, 260, 45, 235, 198, 275, 134, 199, 59, 198, 80, 50, 150, 181, 395, 45, 65, 57, 65, 325, 99, 90, 70, 60, 100, 255, 350, 180, 190, 50, 150, 160, 150, 140, 75, 279, 395, 80, 390, 500, 500, 97, 125, 294, 165, 50, 295, 100, 89, 110, 250, 70, 99, 90, 150, 55, 200, 50, 60, 70, 50, 350, 130, 151, 75, 65, 100, 150, 68, 425, 445, 225, 98, 210, 140, 52, 295, 339, 87, 250, 135, 300, 94, 390, 450, 289, 300, 49, 210, 150, 40, 191, 550, 110, 250, 225, 235, 109, 171, 249, 65, 49, 96, 40, 75, 350, 179, 50, 160, 150, 399, 425, 250, 399, 399, 399, 500, 179, 420, 279, 125, 150, 229, 99, 86, 90, 140, 499, 125, 60, 110, 66, 130, 365, 319, 57, 195, 500, 70, 55, 150, 120, 229, 125, 55, 209, 75, 210, 170, 450, 51, 88, 165, 100, 140, 195, 140, 131, 163, 275, 70, 348, 60, 60, 70, 159, 200, 395, 150, 198, 165, 500, 500, 319, 150, 300, 295, 150, 369, 59, 95, 329, 100, 100, 444, 250, 150, 550, 50, 200, 250, 375, 395, 280, 300, 225, 59, 45, 96, 275, 305, 71, 90, 45, 50, 114, 110, 175, 260, 209, 125, 249, 55, 490, 45, 225, 205, 360, 320, 85, 55, 189, 500, 225, 400, 89, 170, 65, 275, 295, 50, 75, 49, 90, 350, 36, 70, 36, 70, 230, 100, 95, 179, 330, 349, 75, 140, 200, 60, 50, 255, 100, 170, 59, 249, 80, 99, 245, 67, 66, 250, 50, 109, 109, 80, 50, 289, 210, 75, 125, 70, 120, 75, 79, 50, 250, 160, 80, 235, 42, 250, 149, 60, 95, 350, 78, 124, 150, 60, 86, 69, 145, 125, 199, 229, 180, 62, 480, 120, 249, 300, 198, 250, 66, 335, 95, 300, 330, 131, 305, 250, 200, 250, 165, 260, 145, 140, 150, 70, 41, 69, 119, 185, 125, 220, 550, 100, 225, 86, 270, 69, 90, 63, 350, 121, 60, 60, 80, 80, 60, 180, 90, 125, 225, 60, 125, 279, 250, 300, 150, 175, 110, 120, 358, 235, 200, 175, 139, 150, 50, 230, 140, 42, 342, 321, 75, 100, 200, 189, 275, 75, 189, 269, 190, 250, 347, 75, 250, 82, 45, 140, 250, 220, 110, 275, 160, 225, 295, 125, 350, 65, 70, 299, 40, 190, 225, 171, 66, 77, 125, 50, 85, 349, 400, 140, 125, 220, 400, 94, 100, 226, 150, 214, 45, 177, 250, 489, 250, 250, 250, 350, 489, 78, 450, 500, 500, 85, 385, 119, 189, 89, 100, 190, 125, 230, 185, 80, 70, 120, 35, 108, 135, 223, 120, 199, 300, 80, 450, 185, 50, 89, 300, 225, 220, 99, 220, 190, 65, 202, 60, 475, 305, 262, 249, 45, 210, 180, 300, 400, 38, 140, 35, 219, 450, 55, 99, 60, 99, 300, 264, 100, 299, 299, 44, 200, 49, 60, 211, 350, 100, 150, 320, 249, 60, 240, 325, 95, 250, 100, 200, 69, 34, 45, 119, 150, 75, 259, 180, 395, 150, 475, 250, 200, 184, 189, 198, 500, 130, 85, 105, 290, 160, 178, 60, 85, 200, 95, 220, 55, 99, 249, 200, 50, 85, 50, 190, 90, 200, 280, 130, 65, 350, 65, 50, 250, 50, 120, 36, 49, 170, 465, 46, 120, 70, 95, 50, 57, 85, 300, 40, 89, 99, 100, 50, 159, 250, 240, 135, 60, 165, 60, 95, 275, 187, 150, 46, 213, 59, 75, 225, 66, 200, 395, 215, 75, 145, 46, 179, 132, 79, 450, 210, 120, 209, 429, 135, 320, 87, 205, 305, 144, 167, 168, 46, 159, 185, 170, 99, 161, 80, 160, 190, 80, 130, 85, 75, 37, 300, 45, 35, 190, 220, 99, 200, 65, 41, 350, 90, 196, 78, 100, 320, 129, 85, 140, 100, 180, 65, 75, 95, 65, 90, 249, 179, 129, 475, 35, 135, 199, 140, 85, 111, 100, 265, 295, 417, 65, 57, 75, 54, 40, 230, 239, 51, 74, 40, 120, 200, 200, 450, 55, 210, 65, 225, 150, 100, 450, 60, 120, 99, 100, 75, 140, 251, 100, 310, 69, 51, 80, 99, 249, 210, 225, 59, 35, 90, 200, 159, 279, 70, 52, 118, 79, 79, 59, 75, 175, 150, 160, 260, 145, 400, 250, 48, 315, 199, 160, 70, 97, 325, 44, 135, 270, 80, 399, 295, 449, 249, 48, 350, 249, 40, 35, 50, 70, 48, 85, 75, 50, 175, 160, 140, 55, 59, 65, 85, 50, 50, 58, 200, 175, 150, 65, 50, 160, 35, 140, 299, 62, 45, 130, 75, 195, 60, 110, 50, 399, 95, 85, 105, 199, 130, 150, 275, 160, 61, 70, 36, 50, 125, 60, 40, 110, 225, 45, 65, 50, 210, 95, 189, 145, 299, 399, 75, 150, 225, 177, 139, 50, 295, 116, 155, 120, 295, 150, 115, 80, 151, 288, 188, 99, 50, 215, 60, 177, 115, 75, 125, 115, 125, 189, 500, 323, 300, 170, 350, 129, 175, 150, 99, 80, 130, 135, 300, 269, 125, 50, 67, 400, 50, 39, 39, 350, 282, 110, 299, 495, 100, 70, 180, 45, 50, 75, 99, 85, 89, 50, 280, 315, 35, 229, 85, 40, 180, 299, 80, 80, 115, 105, 49, 110, 99, 45, 220, 60, 199, 79, 300, 260, 185, 249, 128, 220, 90, 79, 100, 66, 235, 100, 125, 200, 60, 95, 59, 60, 150, 105, 105, 199, 100, 150, 80, 57, 59, 50, 75, 140, 50, 50, 45, 40, 150, 70, 125, 169, 125, 80, 90, 56, 48, 80, 67, 279, 48, 129, 225, 44, 75, 180, 50, 77, 48, 49, 40, 68, 75, 40, 50, 120, 75, 185, 99, 50, 50, 155, 300, 270, 60, 90, 79, 65, 50, 165, 70, 147, 299, 164, 80, 170, 350, 175, 69, 34, 45, 149, 40, 185, 51, 80, 90, 50, 135, 200, 75, 180, 157, 130, 69, 69, 69, 70, 150, 50, 209, 65, 200, 75, 55, 199, 139, 95, 90, 122, 65, 110, 195, 70, 45, 59, 85, 44, 200, 120, 150, 99, 99, 130, 40, 170, 138, 75, 65, 91, 50, 100, 220, 135, 120, 170, 150, 45, 65, 68, 120, 75, 150, 110, 45, 150, 550, 129, 45, 235, 100], \"xaxis\": \"x\", \"yaxis\": \"y\"}],\n",
              "                        {\"barmode\": \"relative\", \"legend\": {\"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"price\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"count\"}}},\n",
              "                        {\"responsive\": true}\n",
              "                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('d0d882f7-3e9c-479a-9850-0885287e1ba1');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })\n",
              "                };\n",
              "                \n",
              "            </script>\n",
              "        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "h-VVpgPeurRU",
        "outputId": "d03f3c4f-497d-4a2d-d671-2b0fb7135a78"
      },
      "source": [
        "fig = px.histogram(df,x='minimum_nights',nbins=1000)\n",
        "fig.show()"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>\n",
              "            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>\n",
              "                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>    \n",
              "            <div id=\"ed10026b-3b81-4581-94ab-2a56164fc8c6\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n",
              "            <script type=\"text/javascript\">\n",
              "                \n",
              "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
              "                    \n",
              "                if (document.getElementById(\"ed10026b-3b81-4581-94ab-2a56164fc8c6\")) {\n",
              "                    Plotly.newPlot(\n",
              "                        'ed10026b-3b81-4581-94ab-2a56164fc8c6',\n",
              "                        [{\"alignmentgroup\": \"True\", \"bingroup\": \"x\", \"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"minimum_nights=%{x}<br>count=%{y}\", \"legendgroup\": \"\", \"marker\": {\"color\": \"#636efa\"}, \"name\": \"\", \"nbinsx\": 1000, \"offsetgroup\": \"\", \"orientation\": \"v\", \"showlegend\": false, \"type\": \"histogram\", \"x\": [1, 1, 1, 10, 3, 2, 2, 1, 5, 2, 4, 2, 2, 2, 1, 3, 3, 2, 1, 2, 2, 1, 10, 3, 14, 3, 2, 4, 3, 1, 4, 2, 1, 2, 3, 7, 4, 7, 29, 3, 7, 3, 3, 1, 2, 3, 2, 7, 30, 5, 2, 4, 30, 2, 2, 30, 7, 30, 3, 1, 1, 1, 4, 9, 7, 2, 2, 5, 1, 30, 3, 3, 3, 31, 5, 6, 30, 3, 3, 1, 3, 4, 4, 7, 7, 5, 3, 3, 1, 30, 7, 3, 2, 2, 4, 3, 30, 30, 2, 30, 2, 2, 7, 30, 2, 5, 3, 6, 1, 2, 2, 2, 7, 4, 2, 1, 5, 15, 3, 3, 3, 5, 3, 3, 2, 29, 2, 2, 3, 4, 29, 3, 2, 2, 3, 3, 4, 3, 3, 8, 4, 15, 3, 15, 2, 6, 4, 3, 1, 4, 30, 2, 3, 3, 2, 3, 2, 2, 2, 2, 1, 2, 1, 3, 2, 3, 3, 26, 2, 2, 8, 4, 4, 5, 3, 3, 3, 26, 3, 1, 2, 5, 1, 1, 2, 5, 2, 30, 7, 7, 2, 6, 2, 1, 1, 5, 2, 2, 2, 5, 4, 3, 1, 2, 1, 2, 2, 3, 3, 3, 2, 3, 1, 2, 7, 3, 14, 2, 4, 30, 4, 5, 28, 1, 2, 2, 4, 3, 2, 2, 14, 4, 3, 3, 2, 2, 2, 3, 9, 3, 2, 2, 5, 1, 14, 2, 2, 5, 3, 17, 3, 4, 6, 2, 14, 2, 2, 5, 7, 10, 4, 3, 2, 3, 21, 3, 1, 2, 6, 2, 3, 28, 30, 3, 1, 30, 3, 11, 2, 3, 30, 5, 2, 3, 2, 3, 25, 30, 1, 30, 13, 3, 4, 1, 14, 14, 2, 2, 2, 3, 2, 3, 3, 4, 6, 14, 2, 3, 3, 30, 3, 3, 3, 4, 3, 2, 35, 30, 2, 3, 5, 1, 3, 15, 2, 3, 2, 1, 2, 5, 7, 5, 4, 4, 30, 7, 30, 2, 1, 7, 3, 21, 3, 5, 27, 30, 3, 2, 3, 5, 18, 7, 1, 2, 2, 2, 10, 14, 1, 6, 14, 1, 4, 3, 30, 4, 2, 4, 2, 2, 2, 2, 2, 1, 2, 1, 30, 1, 2, 3, 4, 2, 4, 10, 2, 3, 4, 7, 5, 20, 3, 2, 2, 3, 1, 3, 3, 4, 8, 1, 7, 5, 4, 2, 3, 2, 2, 1, 4, 1, 2, 7, 3, 2, 40, 2, 3, 3, 31, 1, 5, 3, 5, 2, 1, 1, 2, 3, 2, 40, 6, 3, 5, 2, 3, 5, 2, 4, 2, 7, 5, 31, 3, 2, 5, 9, 5, 1, 2, 3, 28, 2, 2, 2, 4, 2, 2, 2, 2, 3, 5, 3, 3, 2, 2, 3, 4, 4, 2, 10, 6, 2, 1, 30, 30, 2, 2, 15, 2, 2, 4, 30, 2, 1, 6, 3, 1, 1, 4, 3, 4, 7, 3, 3, 3, 3, 28, 30, 2, 6, 6, 1, 1, 1, 1, 3, 1, 5, 1, 2, 3, 3, 2, 30, 4, 4, 1, 2, 6, 3, 1, 3, 2, 4, 3, 2, 14, 4, 3, 3, 28, 3, 1, 2, 7, 1, 30, 2, 3, 30, 2, 30, 7, 1, 4, 1, 1, 1, 4, 3, 3, 29, 3, 2, 4, 5, 1, 4, 4, 3, 3, 1, 6, 3, 3, 2, 4, 3, 30, 7, 2, 1, 5, 2, 5, 28, 1, 5, 3, 1, 30, 1, 2, 5, 30, 1, 30, 30, 3, 2, 5, 30, 7, 28, 5, 5, 21, 1, 1, 6, 2, 1, 1, 3, 30, 4, 2, 2, 5, 3, 1, 4, 1, 3, 4, 1, 5, 1, 1, 2, 1, 4, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 1, 2, 30, 2, 7, 10, 4, 30, 3, 3, 3, 4, 4, 1, 2, 2, 7, 2, 3, 7, 7, 5, 7, 31, 4, 5, 4, 3, 2, 1, 2, 2, 7, 2, 5, 7, 5, 30, 30, 15, 4, 28, 30, 1, 2, 2, 3, 2, 30, 3, 3, 2, 15, 2, 10, 3, 1, 2, 4, 5, 5, 3, 2, 3, 4, 5, 2, 2, 3, 5, 15, 3, 3, 6, 7, 30, 6, 3, 30, 1, 3, 3, 5, 27, 5, 1, 30, 3, 3, 6, 3, 7, 19, 3, 4, 5, 6, 1, 15, 3, 2, 3, 2, 2, 3, 6, 3, 31, 8, 2, 2, 20, 5, 2, 4, 30, 7, 5, 5, 3, 3, 4, 3, 3, 3, 1, 3, 3, 3, 3, 28, 3, 3, 7, 1, 3, 2, 1, 5, 5, 3, 1, 14, 2, 5, 1, 4, 2, 2, 7, 3, 2, 3, 3, 5, 3, 14, 1, 3, 3, 3, 30, 4, 3, 2, 2, 30, 3, 2, 14, 3, 3, 2, 3, 4, 14, 30, 2, 4, 5, 3, 2, 2, 2, 30, 2, 1, 3, 4, 2, 3, 5, 3, 10, 3, 3, 4, 15, 7, 4, 2, 30, 1, 3, 3, 3, 3, 1, 6, 2, 1, 4, 2, 5, 1, 1, 18, 3, 1, 3, 30, 14, 5, 4, 5, 3, 3, 6, 7, 3, 7, 4, 3, 30, 2, 3, 2, 5, 5, 2, 3, 30, 2, 3, 5, 3, 7, 4, 30, 3, 3, 1, 5, 2, 2, 7, 3, 2, 3, 30, 1, 1, 2, 15, 2, 4, 5, 2, 1, 5, 1, 3, 3, 7, 3, 10, 30, 30, 30, 4, 3, 3, 2, 3, 3, 2, 3, 28, 3, 3, 2, 29, 3, 2, 2, 6, 5, 30, 5, 3, 2, 1, 1, 14, 6, 1, 3, 2, 7, 15, 30, 30, 1, 2, 7, 28, 4, 2, 2, 1, 3, 4, 20, 4, 3, 4, 5, 6, 3, 2, 1, 2, 5, 3, 3, 9, 14, 7, 1, 4, 1, 2, 5, 7, 1, 1, 2, 5, 5, 3, 7, 1, 3, 2, 2, 4, 21, 1, 20, 2, 2, 4, 4, 2, 3, 3, 1, 4, 3, 2, 2, 8, 3, 5, 7, 2, 3, 3, 3, 1, 2, 1, 4, 2, 30, 28, 10, 14, 4, 5, 2, 15, 1, 5, 2, 30, 30, 30, 6, 1, 4, 3, 6, 3, 2, 30, 3, 2, 3, 1, 30, 2, 2, 2, 7, 4, 2, 30, 31, 7, 2, 2, 3, 2, 3, 14, 3, 2, 3, 3, 5, 2, 1, 2, 1, 4, 3, 2, 1, 7, 4, 4, 3, 30, 4, 1, 1, 1, 3, 2, 3, 5, 2, 4, 3, 3, 4, 3, 4, 1, 2, 5, 30, 7, 3, 2, 1, 2, 3, 3, 5, 1, 2, 2, 30, 2, 10, 1, 30, 5, 3, 10, 1, 30, 3, 30, 4, 2, 14, 7, 4, 4, 5, 2, 5, 3, 6, 3, 7, 5, 2, 2, 3, 30, 10, 4, 3, 14, 5, 30, 2, 30, 7, 5, 7, 30, 30, 3, 4, 6, 7, 3, 10, 2, 3, 1, 2, 1, 6, 4, 30, 3, 5, 4, 10, 3, 4, 1, 4, 2, 3, 2, 4, 20, 3, 3, 1, 1, 3, 2, 10, 2, 2, 6, 11, 5, 3, 4, 14, 5, 30, 2, 1, 2, 2, 1, 4, 5, 2, 2, 2, 1, 1, 30, 4, 30, 2, 3, 4, 5, 7, 19, 2, 2, 2, 30, 2, 1, 5, 40, 4, 2, 30, 2, 3, 2, 5, 7, 30, 1, 30, 5, 1, 1, 10, 3, 2, 2, 7, 1, 4, 4, 1, 6, 3, 30, 1, 3, 4, 2, 4, 2, 14, 2, 3, 5, 14, 3, 2, 3, 30, 7, 20, 5, 3, 3, 31, 2, 3, 3, 2, 30, 28, 30, 3, 4, 30, 3, 2, 30, 2, 3, 4, 7, 14, 4, 3, 8, 1, 2, 1, 2, 1, 2, 4, 2, 2, 5, 14, 3, 4, 5, 2, 3, 6, 3, 2, 30, 20, 5, 2, 2, 2, 5, 3, 2, 4, 3, 4, 3, 4, 6, 3, 20, 1, 4, 1, 7, 1, 3, 30, 30, 30, 30, 30, 3, 3, 2, 4, 3, 7, 1, 16, 3, 1, 1, 3, 3, 1, 1, 3, 2, 1, 2, 4, 2, 5, 31, 4, 3, 4, 7, 5, 31, 3, 5, 2, 5, 3, 2, 14, 2, 5, 2, 3, 2, 5, 2, 21, 2, 2, 2, 3, 6, 14, 20, 3, 30, 30, 3, 1, 4, 1, 1, 2, 1, 1, 3, 7, 3, 4, 2, 4, 2, 30, 30, 2, 5, 30, 5, 3, 2, 4, 4, 2, 10, 14, 2, 4, 1, 2, 4, 2, 3, 3, 7, 5, 3, 30, 15, 3, 7, 3, 3, 28, 5, 3, 5, 5, 30, 2, 1, 2, 3, 3, 5, 3, 14, 2, 4, 2, 3, 3, 5, 1, 5, 4, 1, 5, 3, 2, 5, 10, 2, 2, 4, 2, 6, 3, 3, 6, 1, 2, 7, 1, 30, 1, 2, 3, 3, 2, 1, 1, 7, 2, 7, 5, 26, 2, 30, 30, 7, 2, 30, 14, 2, 30, 1, 2, 7, 7, 2, 1, 5, 28, 1, 7, 3, 3, 5, 4, 3, 1, 2, 4, 5, 1, 3, 1, 10, 1, 4, 3, 3, 21, 10, 5, 3, 4, 5, 30, 2, 14, 3, 3, 4, 2, 7, 4, 6, 5, 5, 2, 2, 3, 3, 3, 4, 3, 8, 3, 2, 2, 13, 2, 1, 7, 3, 30, 7, 2, 1, 29, 3, 3, 3, 1, 10, 2, 2, 2, 4, 4, 1, 5, 2, 5, 1, 3, 30, 2, 3, 7, 3, 5, 2, 2, 7, 1, 2, 2, 1, 20, 25, 2, 5, 1, 1, 7, 3, 1, 4, 7, 2, 2, 10, 9, 1, 2, 2, 1, 30, 14, 6, 6, 2, 7, 3, 26, 14, 4, 25, 5, 4, 2, 3, 3, 3, 5, 30, 2, 17, 1, 8, 10, 5, 2, 1, 4, 4, 30, 7, 3, 5, 1, 5, 4, 2, 3, 3, 5, 4, 7, 1, 3, 30, 4, 10, 5, 3, 7, 5, 7, 4, 3, 1, 3, 2, 8, 30, 4, 10, 5, 2, 7, 3, 2, 7, 30, 1, 2, 5, 2, 6, 2, 2, 2, 2, 3, 2, 2, 2, 2, 30, 1, 7, 7, 2, 2, 4, 5, 1, 1, 1, 5, 1, 21, 8, 1, 4, 2, 3, 3, 1, 3, 1, 2, 3, 5, 7, 1, 10, 4, 7, 15, 11, 2, 7, 2, 3, 5, 5, 2, 10, 2, 7, 5, 2, 7, 3, 2, 14, 15, 3, 3, 4, 4, 7, 1, 30, 3, 1, 1, 6, 1, 2, 2, 3, 18, 2, 30, 1, 30, 2, 5, 5, 4, 1, 2, 3, 2, 2, 5, 4, 7, 2, 2, 2, 31, 3, 3, 30, 5, 1, 1, 3, 2, 2, 2, 4, 5, 2, 5, 15, 1, 1, 1, 7, 2, 1, 3, 2, 2, 1, 2, 29, 1, 2, 4, 5, 7, 3, 31, 3, 30, 3, 10, 2, 4, 4, 2, 4, 2, 3, 3, 3, 30, 3, 3, 4, 2, 1, 2, 6, 3, 3, 2, 3, 4, 1, 1, 3, 3, 5, 2, 2, 2, 6, 1, 3, 2, 25, 2, 3, 1, 5, 3, 3, 3, 4, 1, 1, 4, 5, 3, 7, 2, 2, 3, 3, 2, 3, 3, 3, 1, 3, 1, 7, 2, 2, 2, 6, 7, 1, 3, 4, 28, 6, 1, 5, 29, 3, 30, 7, 7, 1, 2, 1, 3, 3, 30, 20, 29, 2, 14, 2, 1, 30, 1, 7, 5, 2, 3, 1, 4, 3, 5, 14, 1, 20, 40, 30, 2, 3, 7, 2, 7, 2, 1, 5, 3, 7, 6, 10, 1, 2, 28, 3, 2, 2, 2, 3, 2, 30, 3, 4, 1, 5, 1, 4, 10, 2, 3, 2, 2, 2, 3, 4, 9, 30, 30, 3, 4, 5, 3, 5, 5, 3, 2, 3, 3, 3, 30, 30, 30, 4, 30, 11, 7, 3, 4, 20, 7, 3, 28, 3, 2, 2, 7, 7, 1, 10, 3, 15, 1, 2, 7, 1, 7, 6, 5, 30, 5, 28, 3, 3, 3, 3, 3, 2, 7, 2, 2, 5, 5, 5, 5, 2, 2, 2, 7, 2, 2, 4, 3, 5, 3, 30, 6, 2, 2, 1, 5, 4, 3, 3, 3, 1, 30, 30, 2, 3, 3, 5, 1, 4, 1, 2, 4, 5, 7, 1, 1, 31, 2, 3, 1, 2, 2, 30, 3, 2, 3, 1, 2, 28, 3, 1, 2, 30, 30, 30, 1, 5, 2, 2, 14, 10, 1, 2, 5, 2, 2, 7, 1, 2, 7, 30, 4, 2, 2, 2, 3, 30, 4, 9, 1, 1, 4, 4, 4, 5, 4, 3, 2, 6, 2, 4, 3, 1, 2, 2, 1, 2, 3, 2, 3, 2, 5, 1, 5, 14, 28, 2, 3, 3, 5, 5, 3, 3, 2, 3, 3, 3, 14, 1, 14, 2, 30, 2, 3, 1, 5, 3, 3, 1, 4, 1, 3, 2, 1, 5, 30, 2, 5, 7, 1, 3, 14, 1, 1, 7, 1, 30, 1, 1, 3, 2, 2, 4, 5, 30, 2, 14, 30, 1, 2, 4, 30, 2, 7, 2, 15, 2, 7, 2, 4, 2, 1, 1, 6, 30, 1, 2, 14, 2, 7, 4, 2, 4, 3, 3, 1, 1, 2, 2, 7, 2, 2, 1, 3, 3, 1, 3, 8, 2, 2, 3, 29, 3, 2, 1, 5, 8, 4, 7, 1, 2, 3, 1, 30, 7, 30, 1, 2, 1, 5, 3, 7, 3, 4, 7, 5, 2, 3, 1, 30, 3, 2, 2, 3, 30, 3, 2, 1, 6, 5, 3, 5, 4, 5, 3, 1, 7, 3, 14, 2, 5, 1, 3, 3, 1, 1, 2, 30, 2, 5, 1, 1, 1, 7, 1, 2, 1, 3, 5, 2, 5, 3, 3, 2, 30, 2, 12, 1, 6, 4, 4, 5, 2, 4, 1, 2, 29, 14, 2, 1, 4, 2, 3, 30, 2, 2, 5, 1, 3, 25, 3, 1, 3, 30, 1, 3, 1, 3, 1, 2, 4, 3, 5, 2, 1, 1, 3, 3, 2, 3, 3, 3, 3, 1, 1, 25, 7, 6, 3, 1, 4, 7, 3, 7, 1, 39, 3, 2, 30, 7, 2, 1, 7, 3, 2, 3, 2, 3, 3, 2, 2, 2, 3, 3, 30, 2, 2, 5, 15, 3, 1, 1, 1, 1, 30, 1, 28, 2, 1, 10, 7, 4, 30, 1, 3, 5, 3, 4, 7, 2, 1, 1, 3, 30, 2, 4, 5, 1, 30, 28, 3, 3, 24, 4, 3, 1, 30, 3, 2, 5, 5, 4, 2, 2, 2, 3, 2, 5, 7, 1, 2, 30, 6, 1, 3, 30, 30, 7, 14, 5, 20, 6, 3, 3, 3, 1, 2, 5, 2, 30, 1, 3, 7, 3, 3, 2, 1, 30, 2, 10, 2, 2, 30, 4, 2, 2, 32, 2, 4, 30, 1, 4, 3, 2, 2, 1, 1, 1, 2, 2, 3, 2, 2, 3, 5, 30, 4, 1, 1, 2, 1, 3, 12, 3, 5, 3, 2, 15, 2, 12, 1, 3, 3, 1, 2, 3, 2, 5, 30, 4, 3, 21, 3, 3, 1, 2, 1, 2, 2, 7, 4, 2, 2, 5, 5, 1, 7, 4, 3, 5, 4, 6, 3, 3, 3, 3, 3, 2, 5, 30, 3, 4, 7, 2, 1, 2, 30, 1, 7, 7, 3, 1, 28, 2, 1, 2, 2, 1, 31, 3, 3, 2, 2, 5, 30, 1, 4, 30, 4, 2, 2, 2, 1, 1, 2, 2, 30, 1, 2, 7, 3, 4, 2, 4, 20, 28, 2, 1, 5, 1, 7, 2, 7, 7, 4, 30, 2, 5, 5, 1, 2, 3, 30, 7, 2, 30, 2, 4, 3, 7, 3, 5, 3, 1, 3, 4, 3, 5, 2, 3, 2, 1, 4, 4, 7, 6, 1, 3, 2, 2, 3, 2, 3, 3, 6, 20, 2, 5, 9, 3, 3, 3, 1, 30, 2, 30, 1, 30, 1, 3, 2, 5, 2, 4, 29, 3, 2, 6, 30, 5, 30, 30, 30, 1, 31, 2, 3, 1, 31, 2, 7, 1, 30, 3, 4, 31, 3, 1, 3, 2, 2, 1, 3, 2, 3, 3, 7, 3, 2, 30, 3, 2, 15, 4, 3, 2, 5, 1, 2, 4, 1, 3, 1, 5, 3, 2, 3, 7, 4, 1, 7, 1, 1, 2, 3, 14, 2, 2, 5, 1, 2, 1, 3, 30, 20, 2, 30, 3, 3, 2, 2, 5, 2, 3, 3, 1, 3, 2, 30, 5, 2, 2, 1, 2, 3, 3, 7, 2, 1, 4, 1, 3, 4, 4, 3, 2, 2, 1, 1, 5, 1, 5, 1, 5, 7, 2, 3, 3, 3, 10, 2, 1, 4, 2, 3, 5, 3, 2, 1, 3, 5, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 1, 5, 4, 3, 3, 10, 1, 7, 3, 30, 1, 2, 1, 2, 2, 1, 5, 1, 2, 30, 5, 3, 3, 2, 7, 1, 30, 1, 7, 3, 2, 3, 2, 3, 4, 3, 5, 5, 3, 5, 1, 7, 3, 4, 1, 2, 2, 2, 2, 5, 3, 2, 7, 5, 3, 3, 5, 3, 1, 3, 5, 4, 3, 4, 1, 5, 1, 2, 2, 2, 3, 7, 2, 6, 2, 20, 2, 3, 4, 5, 30, 3, 3, 3, 2, 2, 5, 1, 4, 3, 1, 2, 3, 4, 2, 5, 2, 4, 2, 5, 30, 5, 3, 1, 3, 4, 4, 5, 1, 6, 1, 4, 1, 1, 5, 3, 1, 30, 29, 30, 7, 1, 30, 2, 4, 3, 1, 3, 5, 3, 4, 3, 2, 1, 5, 25, 4, 3, 3, 2, 14, 8, 1, 5, 3, 3, 1, 2, 1, 3, 4, 30, 4, 10, 7, 5, 2, 7, 2, 3, 3, 2, 3, 21, 1, 3, 1, 5, 7, 1, 25, 2, 3, 14, 6, 4, 4, 3, 30, 5, 3, 5, 1, 2, 1, 2, 3, 4, 5, 1, 6, 30, 18, 2, 1, 3, 2, 2, 5, 2, 1, 3, 1, 2, 5, 7, 3, 30, 1, 2, 30, 2, 3, 3, 1, 4, 30, 10, 1, 1, 3, 3, 5, 3, 2, 3, 2, 2, 5, 3, 1, 3, 2, 3, 3, 7, 4, 5, 5, 4, 2, 3, 3, 4, 3, 30, 1, 1, 2, 30, 1, 1, 2, 4, 2, 5, 2, 30, 5, 2, 2, 2, 5, 1, 5, 2, 1, 2, 12, 4, 3, 6, 1, 3, 2, 30, 3, 3, 3, 7, 3, 3, 4, 4, 1, 4, 5, 1, 24, 3, 4, 2, 5, 2, 1, 2, 4, 2, 1, 1, 2, 2, 2, 5, 3, 1, 1, 7, 5, 5, 7, 13, 1, 7, 2, 7, 1, 30, 2, 4, 3, 2, 15, 1, 3, 3, 2, 2, 5, 7, 2, 5, 3, 30, 4, 4, 2, 1, 8, 3, 10, 2, 3, 14, 1, 5, 14, 4, 1, 2, 1, 28, 3, 7, 4, 4, 30, 4, 1, 2, 2, 7, 4, 3, 9, 1, 4, 1, 2, 7, 2, 4, 5, 2, 30, 3, 3, 2, 3, 1, 3, 30, 2, 3, 2, 3, 3, 30, 3, 30, 3, 1, 3, 10, 14, 5, 2, 29, 10, 1, 2, 5, 1, 1, 6, 3, 3, 2, 30, 30, 8, 4, 1, 2, 3, 3, 5, 30, 3, 2, 5, 2, 2, 3, 2, 2, 1, 2, 5, 2, 1, 1, 2, 3, 4, 3, 2, 1, 7, 3, 30, 2, 2, 29, 1, 5, 5, 5, 4, 3, 3, 6, 30, 2, 2, 3, 4, 7, 6, 2, 30, 2, 3, 3, 3, 30, 4, 2, 2, 5, 1, 2, 2, 8, 2, 2, 5, 1, 2, 7, 2, 1, 4, 2, 2, 3, 6, 1, 1, 2, 2, 3, 1, 3, 2, 4, 3, 4, 1, 3, 7, 2, 2, 7, 2, 3, 2, 5, 3, 1, 2, 1, 1, 4, 15, 7, 2, 5, 2, 2, 3, 2, 1, 1, 2, 5, 13, 3, 5, 30, 1, 2, 3, 14, 4, 30, 30, 1, 3, 1, 2, 4, 30, 1, 2, 26, 2, 1, 3, 30, 2, 30, 2, 2, 3, 5, 30, 3, 1, 1, 2, 3, 2, 4, 4, 5, 1, 1, 2, 2, 7, 1, 3, 3, 10, 2, 1, 4, 1, 1, 2, 1, 1, 3, 4, 2, 3, 7, 30, 3, 3, 3, 2, 3, 2, 3, 30, 5, 30, 2, 5, 2, 3, 1, 5, 2, 10, 2, 1, 30, 2, 5, 1, 30, 3, 1, 1, 1, 3, 4, 3, 3, 2, 2, 2, 4, 30, 3, 3, 1, 3, 1, 21, 1, 5, 5, 5, 2, 1, 2, 3, 2, 1, 2, 2, 30, 1, 5, 2, 10, 2, 10, 2, 2, 3, 3, 4, 2, 30, 30, 2, 3, 2, 5, 2, 1, 1, 3, 1, 1, 14, 1, 3, 1, 6, 5, 2, 7, 1, 30, 2, 2, 14, 7, 2, 1, 3, 2, 1, 7, 30, 30, 1, 3, 1, 5, 7, 5, 4, 30, 4, 2, 3, 2, 1, 8, 2, 2, 1, 6, 3, 4, 7, 6, 2, 1, 4, 3, 5, 2, 3, 2, 3, 6, 1, 7, 3, 1, 14, 14, 10, 2, 2, 1, 1, 1, 1, 5, 1, 1, 1, 1, 2, 2, 30, 1, 2, 1, 1, 3, 1, 2, 5, 1, 6, 1, 3, 30, 6, 1, 2, 4, 7, 2, 1, 3, 9, 1, 6, 10, 5, 3, 14, 13, 30, 3, 2, 1, 10, 3, 1, 7, 3, 1, 6, 20, 3, 5, 4, 7, 30, 5, 1, 3, 2, 30, 2, 30, 30, 30, 5, 1, 5, 3, 1, 3, 2, 1, 4, 4, 1, 1, 3, 30, 3, 10, 2, 1, 28, 3, 5, 2, 22, 1, 30, 10, 2, 2, 30, 4, 1, 3, 4, 30, 3, 5, 2, 5, 2, 5, 3, 1, 20, 3, 3, 2, 3, 1, 5, 3, 2, 7, 3, 5, 2, 10, 2, 3, 1, 1, 3, 30, 3, 2, 30, 2, 3, 3, 3, 5, 5, 6, 1, 30, 7, 2, 2, 5, 30, 2, 28, 4, 2, 3, 1, 2, 30, 4, 4, 5, 2, 4, 3, 1, 3, 5, 2, 1, 1, 5, 5, 3, 1, 4, 3, 1, 4, 5, 1, 5, 4, 2, 30, 30, 2, 1, 2, 13, 12, 3, 5, 10, 7, 30, 20, 1, 5, 30, 9, 2, 6, 1, 30, 3, 6, 1, 3, 1, 5, 5, 30, 1, 1, 31, 1, 30, 1, 3, 1, 5, 3, 4, 1, 5, 3, 2, 4, 4, 7, 30, 1, 1, 30, 5, 4, 30, 1, 3, 1, 3, 2, 2, 30, 1, 4, 2, 5, 2, 3, 30, 7, 30, 4, 30, 5, 29, 2, 6, 6, 2, 2, 30, 30, 1, 1, 21, 2, 5, 2, 1, 10, 5, 5, 2, 4, 2, 2, 25, 5, 2, 1, 7, 5, 6, 4, 2, 7, 1, 1, 2, 3, 1, 2, 3, 1, 7, 1, 4, 14, 2, 4, 5, 3, 2, 2, 4, 2, 4, 1, 2, 1, 2, 1, 3, 1, 3, 3, 3, 3, 1, 30, 3, 2, 1, 7, 3, 2, 1, 1, 1, 4, 1, 1, 5, 3, 14, 2, 4, 1, 2, 30, 7, 3, 2, 2, 30, 3, 2, 1, 2, 30, 30, 2, 7, 20, 1, 30, 3, 7, 2, 1, 6, 1, 30, 3, 8, 2, 4, 5, 2, 1, 2, 3, 30, 3, 25, 30, 1, 7, 1, 2, 1, 1, 30, 3, 14, 30, 30, 4, 3, 1, 3, 31, 2, 30, 2, 3, 30, 21, 2, 4, 8, 3, 30, 30, 3, 3, 4, 2, 1, 3, 29, 2, 1, 1, 4, 1, 1, 30, 14, 3, 6, 4, 30, 2, 2, 1, 7, 2, 2, 2, 4, 5, 2, 28, 3, 2, 2, 1, 2, 2, 1, 7, 30, 5, 2, 1, 2, 5, 5, 2, 5, 3, 1, 3, 14, 2, 3, 5, 1, 3, 3, 21, 30, 1, 1, 7, 2, 1, 5, 3, 5, 4, 2, 4, 3, 2, 7, 3, 2, 3, 2, 4, 2, 3, 3, 3, 3, 3, 2, 5, 3, 5, 3, 2, 2, 3, 7, 4, 5, 10, 3, 3, 28, 1, 2, 1, 3, 3, 3, 3, 5, 2, 7, 1, 3, 2, 3, 2, 2, 2, 6, 2, 4, 3, 7, 1, 1, 6, 5, 2, 3, 2, 7, 30, 6, 1, 14, 2, 2, 3, 2, 4, 1, 1, 1, 5, 2, 7, 2, 30, 2, 4, 5, 1, 3, 1, 5, 1, 3, 3, 3, 7, 3, 2, 4, 4, 2, 30, 4, 28, 4, 3, 3, 7, 3, 3, 5, 14, 4, 5, 1, 30, 3, 2, 3, 5, 2, 4, 3, 1, 30, 3, 30, 3, 12, 30, 5, 3, 2, 2, 5, 4, 3, 1, 3, 2, 20, 1, 30, 2, 3, 1, 1, 2, 7, 4, 18, 3, 30, 4, 2, 7, 1, 4, 3, 5, 29, 4, 30, 1, 1, 2, 30, 2, 10, 2, 5, 4, 1, 2, 5, 2, 1, 5, 5, 3, 30, 7, 5, 4, 3, 3, 3, 1, 3, 5, 5, 1, 2, 7, 4, 3, 10, 2, 1, 4, 2, 30, 5, 3, 3, 30, 2, 5, 5, 6, 3, 7, 2, 3, 21, 7, 3, 2, 30, 3, 2, 4, 5, 1, 7, 1, 2, 11, 2, 3, 2, 2, 2, 1, 5, 3, 1, 5, 30, 3, 2, 3, 1, 4, 3, 7, 2, 4, 10, 1, 7, 1, 3, 7, 2, 15, 3, 3, 5, 1, 5, 2, 1, 3, 1, 1, 1, 1, 3, 1, 15, 7, 30, 30, 2, 1, 4, 3, 1, 4, 3, 2, 3, 5, 1, 1, 2, 3, 3, 30, 2, 3, 5, 2, 1, 1, 2, 4, 3, 6, 1, 2, 3, 5, 30, 2, 20, 2, 5, 3, 1, 3, 30, 5, 2, 3, 1, 1, 1, 4, 4, 3, 5, 4, 3, 5, 2, 1, 4, 2, 1, 3, 1, 1, 2, 2, 2, 1, 5, 1, 1, 1, 3, 4, 2, 1, 3, 5, 3, 3, 4, 2, 5, 1, 30, 3, 1, 5, 5, 4, 2, 2, 5, 2, 1, 7, 4, 1, 2, 30, 14, 14, 4, 4, 1, 1, 2, 2, 1, 1, 2, 3, 30, 7, 1, 6, 30, 2, 2, 3, 2, 30, 2, 5, 3, 1, 6, 7, 2, 6, 3, 2, 2, 3, 3, 9, 3, 3, 1, 4, 3, 7, 2, 2, 2, 7, 2, 21, 1, 2, 1, 30, 10, 4, 21, 21, 6, 2, 4, 3, 30, 3, 1, 30, 30, 30, 5, 1, 6, 3, 6, 1, 2, 7, 1, 1, 30, 1, 5, 3, 3, 30, 4, 1, 5, 2, 3, 7, 3, 2, 3, 1, 3, 30, 2, 1, 30, 30, 2, 30, 11, 5, 7, 30, 3, 5, 5, 30, 2, 3, 2, 1, 2, 30, 3, 3, 4, 3, 30, 2, 5, 2, 14, 2, 2, 4, 2, 2, 2, 4, 2, 7, 5, 2, 4, 1, 2, 2, 1, 2, 3, 1, 3, 3, 5, 1, 3, 4, 3, 3, 1, 8, 7, 1, 30, 5, 1, 3, 2, 2, 3, 3, 2, 1, 2, 3, 7, 1, 2, 3, 30, 1, 1, 5, 30, 1, 5, 2, 2, 5, 1, 30, 30, 3, 3, 1, 8, 5, 3, 3, 3, 5, 5, 1, 7, 1, 30, 2, 3, 3, 7, 2, 5, 1, 1, 2, 3, 30, 1, 24, 4, 10, 13, 2, 3, 2, 2, 7, 3, 3, 1, 1, 1, 3, 2, 3, 1, 3, 3, 1, 2, 1, 2, 1, 5, 30, 30, 30, 1, 1, 3, 30, 7, 1, 2, 30, 3, 30, 4, 3, 3, 1, 1, 25, 3, 21, 3, 2, 1, 1, 30, 2, 2, 3, 14, 30, 1, 3, 30, 2, 2, 2, 30, 5, 30, 30, 30, 1, 3, 2, 30, 4, 5, 30, 4, 1, 1, 4, 3, 5, 30, 3, 4, 2, 3, 25, 3, 1, 2, 1, 2, 3, 3, 2, 4, 14, 4, 10, 2, 5, 3, 1, 1, 5, 2, 3, 5, 25, 1, 30, 10, 3, 2, 30, 5, 4, 2, 1, 3, 5, 3, 8, 3, 3, 5, 3, 30, 30, 4, 30, 2, 5, 1, 2, 4, 4, 1, 5, 6, 1, 1, 2, 2, 30, 4, 5, 2, 1, 2, 7, 3, 1, 5, 30, 4, 2, 7, 4, 28, 4, 4, 2, 3, 2, 29, 5, 3, 1, 10, 1, 3, 5, 2, 2, 1, 1, 3, 2, 2, 30, 3, 2, 1, 30, 1, 1, 30, 30, 5, 7, 2, 2, 1, 2, 1, 3, 28, 3, 30, 3, 1, 6, 3, 1, 5, 3, 7, 5, 14, 2, 3, 4, 3, 2, 7, 4, 2, 1, 3, 30, 2, 3, 6, 2, 4, 5, 1, 4, 2, 30, 3, 3, 14, 1, 4, 3, 2, 2, 5, 1, 30, 1, 2, 30, 2, 2, 2, 30, 2, 3, 3, 2, 2, 3, 2, 1, 1, 4, 1, 30, 30, 2, 2, 30, 2, 6, 3, 2, 4, 2, 1, 4, 3, 2, 1, 2, 2, 3, 4, 1, 1, 5, 2, 2, 1, 2, 2, 1, 5, 2, 2, 1, 2, 5, 2, 2, 6, 3, 1, 2, 5, 30, 2, 3, 4, 14, 4, 4, 1, 4, 2, 2, 1, 2, 1, 2, 2, 4, 4, 2, 2, 2, 2, 3, 1, 30, 3, 1, 1, 1, 1, 2, 5, 1, 21, 3, 1, 1, 3, 7, 2, 2, 2, 3, 4, 10, 3, 2, 2, 3, 1, 7, 2, 1, 2, 14, 4, 1, 3, 30, 3, 3, 2, 3, 5, 5, 2, 2, 3, 2, 4, 3, 2, 3, 29, 4, 1, 1, 1, 28, 2, 2, 3, 2, 5, 4, 10, 4, 6, 1, 1, 5, 1, 30, 1, 2, 3, 7, 5, 1, 2, 2, 2, 3, 14, 3, 2, 2, 2, 2, 2, 3, 2, 2, 3, 1, 1, 3, 2, 30, 1, 1, 1, 2, 7, 3, 2, 2, 4, 3, 3, 23, 12, 2, 3, 2, 30, 1, 30, 2, 2, 1, 6, 4, 30, 5, 4, 3, 4, 15, 2, 3, 9, 3, 3, 3, 1, 1, 3, 1, 2, 5, 2, 7, 3, 3, 15, 21, 5, 3, 3, 1, 3, 7, 30, 3, 2, 2, 30, 2, 1, 1, 1, 3, 2, 4, 7, 2, 7, 1, 1, 5, 7, 1, 5, 7, 1, 3, 1, 1, 2, 2, 3, 7, 2, 2, 2, 4, 1, 2, 1, 1, 2, 1, 2, 1, 2, 5, 2, 2, 4, 3, 10, 1, 4, 7, 30, 3, 2, 1, 2, 1, 1, 1, 1, 4, 2, 1, 7, 4, 2, 6, 1, 3, 6, 4, 2, 3, 30, 3, 10, 2, 31, 30, 1, 3, 2, 3, 2, 3, 1, 4, 2, 2, 2, 3, 3, 1, 4, 2, 2, 30, 1, 3, 2, 1, 2, 2, 3, 1, 1, 7, 2, 1, 4, 1, 2, 3, 3, 2, 1, 1, 1, 1, 1, 2, 30, 1, 4, 1, 2, 3, 2, 8, 1, 30, 1, 2, 1, 2, 2, 7, 3, 31, 3, 3, 10, 1, 2, 2, 6, 3, 10, 1, 3, 5, 30, 2, 1, 1, 6, 3, 30, 3, 3, 2, 4, 7, 1, 6, 1, 5, 3, 4, 14, 3, 26, 2, 5, 3, 2, 3, 2, 2, 2, 2, 3, 14, 1, 14, 2, 2, 4, 5, 3, 2, 3, 7, 5, 3, 4, 2, 3, 6, 8, 2, 2, 2, 2, 1, 3, 2, 21, 2, 3, 2, 2, 30, 1, 1, 30, 1, 2, 1, 1, 4, 1, 4, 4, 1, 2, 4, 3, 3, 1, 3, 2, 4, 4, 3, 2, 1, 2, 1, 3, 1, 3, 1, 7, 14, 3, 2, 1, 2, 30, 30, 1, 30, 3, 4, 6, 1, 4, 2, 2, 2, 5, 2, 2, 7, 1, 3, 2, 2, 2, 6, 2, 5, 1, 3, 30, 30, 2, 3, 2, 30, 1, 30, 2, 30, 1, 2, 2, 5, 2, 3, 3, 3, 1, 1, 3, 3, 2, 3, 2, 3, 7, 2, 4, 1, 2, 2, 3, 1, 30, 2, 3, 4, 3, 3, 14, 2, 2, 30, 3, 1, 2, 1, 3, 2, 2, 1, 3, 5, 8, 30, 30, 2, 1, 5, 2, 30, 2, 1, 7, 3, 2, 4, 28, 2, 2, 1, 30, 30, 2, 3, 1, 3, 30, 1, 5, 5, 2, 2, 1, 3, 3, 2, 1, 1, 3, 3, 1, 1, 2, 3, 7, 31, 1, 1, 1, 2, 2, 3, 4, 30, 2, 3, 1, 2, 5, 3, 4, 3, 2, 2, 3, 1, 28, 1, 1, 2, 1, 1, 5, 6, 25, 7, 5, 7, 1, 6, 21, 4, 2, 3, 6, 1, 4, 2, 8, 5, 2, 1, 3, 2, 30, 3, 3, 3, 5, 2, 2, 2, 3, 2, 3, 30, 2, 1, 1, 2, 2, 1, 30, 3, 1, 30, 1, 4, 15, 2, 3, 12, 1, 5, 3, 1, 7, 3, 7, 30, 2, 4, 2, 10, 3, 4, 7, 3, 2, 30, 30, 1, 2, 7, 7, 4, 2, 14, 1, 3, 4, 3, 5, 3, 3, 1, 2, 30, 2, 30, 1, 4, 1, 5, 3, 3, 1, 2, 5, 2, 2, 5, 3, 1, 1, 7, 5, 7, 2, 30, 4, 5, 2, 2, 4, 4, 6, 10, 14, 2, 3, 14, 4, 3, 1, 3, 5, 3, 2, 1, 5, 3, 3, 2, 14, 3, 30, 3, 7, 14, 3, 7, 3, 30, 30, 5, 30, 1, 3, 1, 4, 3, 3, 30, 5, 1, 1, 2, 7, 2, 1, 10, 30, 30, 7, 2, 4, 4, 1, 1, 3, 4, 3, 1, 7, 11, 20, 2, 3, 4, 4, 7, 2, 3, 2, 2, 7, 3, 1, 3, 1, 2, 1, 2, 3, 2, 10, 1, 2, 3, 30, 3, 2, 4, 6, 3, 3, 4, 4, 6, 1, 2, 1, 30, 2, 5, 1, 1, 30, 7, 1, 2, 1, 3, 4, 1, 4, 2, 14, 1, 1, 1, 1, 5, 3, 3, 2, 3, 3, 2, 30, 4, 4, 3, 2, 2, 2, 5, 1, 2, 12, 1, 3, 2, 1, 2, 2, 3, 15, 2, 3, 1, 2, 25, 30, 4, 2, 30, 1, 3, 9, 1, 2, 15, 30, 3, 2, 5, 7, 20, 7, 6, 5, 3, 1, 1, 2, 1, 5, 4, 2, 1, 3, 1, 2, 6, 20, 17, 1, 3, 1, 4, 3, 7, 6, 4, 1, 5, 4, 1, 1, 30, 5, 1, 2, 1, 3, 30, 2, 2, 1, 2, 1, 30, 1, 28, 5, 30, 30, 3, 30, 2, 2, 30, 2, 10, 2, 2, 4, 2, 3, 3, 30, 30, 1, 30, 14, 3, 4, 30, 3, 13, 2, 10, 4, 2, 2, 5, 5, 3, 10, 1, 2, 1, 30, 3, 4, 3, 2, 2, 3, 1, 2, 3, 4, 3, 1, 4, 14, 2, 5, 25, 1, 1, 2, 1, 1, 1, 1, 4, 5, 1, 1, 14, 1, 2, 3, 1, 4, 4, 10, 30, 5, 1, 1, 1, 2, 2, 2, 30, 7, 7, 7, 2, 3, 2, 1, 3, 1, 10, 3, 5, 2, 2, 3, 2, 1, 2, 1, 1, 3, 1, 1, 22, 6, 2, 30, 1, 2, 3, 2, 5, 4, 2, 3, 1, 5, 6, 1, 31, 4, 4, 2, 1, 4, 7, 1, 1, 30, 2, 4, 3, 30, 2, 1, 14, 15, 5, 3, 1, 6, 30, 14, 30, 30, 2, 15, 3, 1, 3, 4, 5, 1, 30, 6, 20, 1, 1, 2, 1, 2, 2, 30, 1, 3, 1, 7, 3, 1, 1, 1, 3, 2, 3, 2, 30, 2, 1, 4, 30, 4, 2, 3, 7, 2, 3, 20, 1, 3, 2, 1, 2, 2, 3, 2, 1, 3, 2, 1, 1, 4, 3, 1, 3, 7, 4, 4, 4, 2, 2, 30, 1, 2, 4, 3, 7, 3, 3, 4, 1, 30, 14, 5, 5, 4, 4, 7, 14, 1, 3, 5, 1, 1, 1, 14, 1, 1, 3, 1, 5, 10, 3, 3, 3, 4, 2, 3, 7, 6, 7, 2, 1, 1, 1, 2, 21, 2, 30, 2, 3, 3, 30, 30, 3, 14, 3, 30, 31, 2, 4, 3, 2, 2, 1, 3, 1, 3, 5, 4, 1, 3, 30, 2, 3, 1, 1, 1, 4, 1, 4, 1, 1, 7, 3, 10, 3, 30, 7, 3, 4, 2, 30, 4, 5, 30, 1, 5, 7, 3, 1, 2, 4, 7, 1, 7, 5, 4, 4, 2, 14, 1, 5, 1, 2, 10, 2, 1, 7, 1, 7, 2, 5, 21, 2, 2, 2, 3, 3, 3, 2, 1, 6, 3, 3, 3, 1, 1, 2, 30, 30, 6, 5, 2, 11, 4, 3, 2, 6, 1, 7, 1, 1, 1, 5, 1, 2, 1, 5, 30, 3, 10, 3, 3, 3, 2, 4, 2, 3, 4, 3, 5, 5, 4, 2, 5, 4, 2, 30, 1, 1, 2, 1, 3, 1, 2, 10, 2, 30, 30, 6, 5, 3, 15, 2, 3, 30, 8, 7, 2, 2, 3, 2, 5, 1, 2, 4, 2, 3, 21, 4, 21, 1, 2, 2, 30, 5, 12, 1, 2, 3, 1, 2, 1, 1, 3, 1, 4, 3, 2, 7, 3, 5, 2, 30, 1, 2, 1, 1, 1, 30, 2, 1, 2, 5, 1, 2, 6, 3, 30, 2, 30, 6, 2, 2, 1, 3, 12, 2, 1, 3, 1, 1, 1, 2, 5, 2, 15, 6, 30, 5, 2, 4, 2, 30, 1, 1, 4, 3, 4, 2, 30, 1, 1, 1, 1, 2, 10, 2, 1, 2, 2, 1, 30, 2, 2, 6, 7, 7, 1, 15, 2, 5, 30, 2, 4, 4, 7, 4, 30, 2, 2, 2, 3, 2, 2, 2, 30, 30, 14, 1, 4, 1, 30, 1, 30, 2, 7, 6, 30, 1, 1, 1, 1, 1, 2, 4, 3, 30, 2, 1, 2, 30, 30, 30, 14, 1, 2, 7, 2, 30, 4, 3, 2, 5, 2, 1, 1, 3, 3, 4, 1, 2, 7, 3, 4, 30, 30, 2, 30, 3, 2, 2, 4, 2, 5, 1, 1, 1, 3, 2, 2, 3, 10, 1, 2, 1, 15, 3, 3, 5, 2, 20, 3, 6, 3, 1, 7, 3, 14, 2, 30, 1, 2, 30, 4, 3, 2, 3, 2, 2, 7, 4, 1, 2, 1, 5, 3, 3, 5, 1, 2, 2, 3, 1, 25, 1, 4, 30, 2, 2, 2, 3, 2, 30, 3, 30, 3, 3, 2, 1, 1, 1, 30, 3, 14, 1, 1, 7, 2, 5, 2, 3, 1, 1, 3, 2, 4, 3, 2, 4, 2, 2, 5, 1, 3, 4, 30, 7, 30, 4, 2, 30, 3, 3, 2, 2, 4, 30, 7, 5, 2, 5, 3, 3, 14, 5, 7, 2, 3, 3, 3, 1, 6, 1, 3, 3, 3, 7, 3, 4, 3, 7, 3, 1, 5, 2, 5, 12, 1, 14, 2, 1, 3, 1, 2, 30, 2, 10, 1, 30, 1, 4, 1, 30, 30, 30, 4, 2, 7, 2, 2, 3, 2, 3, 7, 5, 5, 2, 1, 30, 7, 7, 3, 1, 4, 7, 4, 3, 2, 1, 2, 30, 2, 2, 7, 4, 1, 2, 2, 21, 30, 2, 1, 3, 30, 4, 2, 1, 3, 3, 10, 5, 1, 2, 5, 5, 7, 3, 2, 1, 1, 30, 7, 2, 3, 2, 30, 3, 1, 3, 1, 1, 14, 2, 6, 2, 1, 3, 1, 1, 1, 6, 3, 30, 30, 30, 5, 1, 7, 2, 1, 2, 6, 2, 1, 30, 25, 30, 5, 7, 1, 1, 2, 2, 1, 2, 5, 1, 2, 3, 3, 3, 3, 1, 3, 1, 5, 1, 3, 6, 14, 30, 30, 7, 2, 1, 3, 5, 3, 5, 1, 2, 1, 1, 2, 4, 7, 4, 30, 30, 30, 30, 30, 5, 5, 2, 5, 30, 4, 14, 2, 2, 5, 4, 12, 1, 2, 1, 2, 3, 1, 2, 7, 30, 2, 2, 5, 7, 3, 1, 5, 1, 1, 2, 2, 3, 1, 4, 3, 1, 2, 30, 2, 1, 7, 30, 2, 3, 3, 5, 10, 1, 5, 2, 5, 3, 2, 1, 2, 30, 2, 4, 3, 4, 1, 30, 2, 1, 1, 1, 2, 2, 2, 1, 30, 2, 2, 5, 2, 20, 7, 1, 4, 1, 3, 7, 30, 2, 2, 5, 3, 5, 2, 3, 2, 3, 2, 1, 3, 30, 2, 3, 10, 4, 1, 30, 2, 2, 4, 4, 3, 30, 2, 30, 4, 3, 1, 4, 1, 2, 3, 3, 2, 5, 2, 8, 5, 5, 2, 2, 5, 3, 2, 7, 2, 3, 3, 4, 1, 2, 3, 1, 3, 25, 3, 4, 3, 2, 1, 5, 3, 4, 5, 5, 30, 3, 30, 1, 30, 1, 7, 3, 6, 30, 5, 3, 1, 3, 30, 2, 2, 1, 2, 14, 3, 1, 10, 2, 5, 2, 2, 1, 30, 30, 4, 2, 1, 2, 3, 5, 1, 4, 3, 3, 3, 3, 1, 1, 1, 1, 3, 1, 2, 2, 6, 3, 1, 5, 1, 2, 2, 3, 4, 7, 2, 2, 30, 30, 4, 4, 2, 2, 15, 2, 31, 4, 1, 3, 30, 1, 7, 1, 4, 4, 3, 30, 3, 2, 2, 3, 4, 4, 2, 7, 2, 30, 1, 30, 30, 4, 4, 3, 4, 5, 2, 4, 3, 14, 30, 14, 30, 1, 3, 7, 2, 1, 3, 1, 3, 10, 2, 1, 2, 2, 5, 1, 2, 2, 1, 3, 3, 4, 1, 5, 3, 7, 3, 1, 6, 2, 1, 2, 1, 6, 4, 3, 30, 2, 1, 1, 1, 3, 2, 10, 3, 5, 2, 2, 1, 2, 1, 3, 3, 14, 1, 4, 1, 30, 3, 4, 6, 10, 3, 1, 30, 3, 1, 2, 3, 10, 2, 1, 7, 3, 5, 1, 30, 30, 2, 2, 2, 30, 2, 3, 1, 30, 3, 3, 3, 1, 1, 1, 5, 5, 3, 3, 1, 1, 3, 5, 7, 1, 5, 7, 4, 3, 4, 1, 2, 2, 3, 2, 1, 2, 3, 2, 2, 30, 3, 1, 1, 30, 3, 3, 1, 5, 1, 3, 3, 6, 2, 14, 1, 3, 3, 4, 2, 3, 1, 1, 1, 1, 3, 30, 4, 1, 2, 4, 1, 4, 1, 2, 4, 3, 1, 7, 1, 3, 1, 1, 1, 1, 7, 3, 3, 3, 3, 1, 5, 2, 2, 1, 3, 30, 3, 30, 1, 14, 2, 1, 3, 1, 4, 2, 2, 1, 3, 7, 1, 5, 4, 2, 1, 1, 3, 31, 1, 1, 2, 2, 1, 1, 4, 14, 7, 5, 5, 3, 5, 1, 4, 3, 1, 4, 1, 1, 5, 1, 4, 2, 2, 1, 1, 30, 4, 30, 1, 1, 1, 2, 1, 4, 6, 2, 3, 6, 2, 3, 1, 4, 14, 1, 4, 2, 2, 2, 2, 4, 3, 4, 2, 5, 1, 4, 4, 1, 3, 3, 3, 2, 1, 4, 3, 2, 3, 4, 1, 1, 2, 2, 1, 7, 4, 30, 2, 4, 3, 1, 6, 2, 1, 5, 2, 2, 6, 30, 1, 2, 5, 2, 5, 6, 7, 3, 2, 5, 30, 7, 4, 2, 4, 1, 3, 5, 2, 3, 3, 2, 5, 7, 2, 2, 10, 2, 2, 1, 30, 2, 3, 1, 4, 3, 1, 1, 1, 3, 1, 1, 1, 4, 3, 2, 7, 3, 2, 30, 2, 5, 1, 3, 2, 4, 1, 7, 2, 2, 2, 2, 3, 1, 2, 3, 20, 6, 7, 3, 2, 4, 30, 5, 3, 1, 8, 2, 5, 7, 3, 2, 2, 2, 2, 3, 3, 1, 2, 1, 2, 2, 7, 1, 4, 4, 3, 3, 3, 30, 1, 2, 4, 3, 9, 1, 3, 2, 2, 3, 1, 4, 4, 3, 2, 7, 1, 4, 4, 5, 3, 1, 3, 5, 2, 7, 3, 2, 4, 2, 3, 3, 10, 2, 10, 3, 1, 1, 3, 3, 2, 2, 6, 4, 1, 2, 2, 2, 1, 3, 1, 9, 5, 3, 4, 3, 4, 5, 1, 3, 7, 10, 5, 3, 2, 1, 18, 3, 4, 3, 2, 5, 5, 1, 3, 5, 2, 2, 1, 5, 5, 1, 1, 3, 1, 1, 2, 9, 3, 4, 1, 1, 1, 4, 1, 35, 30, 3, 1, 3, 1, 1, 1, 4, 30, 7, 2, 3, 1, 28, 1, 7, 2, 2, 30, 2, 2, 2, 2, 7, 4, 1, 3, 3, 5, 5, 6, 1, 10, 4, 2, 3, 5, 2, 1, 2, 1, 3, 2, 2, 2, 1, 7, 1, 1, 10, 2, 30, 30, 30, 2, 3, 7, 5, 2, 4, 1, 3, 3, 5, 3, 2, 10, 3, 5, 1, 14, 3, 7, 1, 3, 2, 2, 15, 1, 4, 3, 4, 4, 3, 6, 1, 3, 5, 3, 3, 1, 1, 1, 7, 5, 3, 2, 3, 3, 1, 3, 2, 4, 4, 15, 1, 3, 25, 5, 21, 4, 2, 3, 2, 4, 2, 5, 2, 7, 1, 30, 4, 2, 2, 1, 2, 4, 30, 2, 1, 1, 1, 2, 5, 1, 1, 1, 1, 10, 2, 10, 1, 1, 1, 1, 1, 1, 1, 1, 3, 2, 8, 5, 2, 5, 7, 6, 2, 5, 2, 5, 6, 2, 1, 4, 4, 2, 5, 1, 5, 6, 1, 3, 14, 4, 1, 3, 4, 2, 5, 14, 2, 1, 3, 1, 3, 20, 3, 3, 3, 2, 2, 4, 7, 1, 14, 2, 2, 3, 2, 29, 2, 3, 2, 3, 1, 30, 4, 2, 15, 3, 1, 1, 2, 2, 2, 2, 1, 1, 3, 1, 2, 2, 3, 1, 2, 2, 27, 5, 3, 3, 7, 1, 1, 2, 1, 12, 2, 5, 7, 30, 1, 3, 1, 1, 1, 3, 4, 1, 30, 3, 30, 1, 1, 7, 1, 5, 3, 1, 2, 2, 2, 5, 3, 2, 2, 3, 7, 4, 5, 8, 30, 4, 3, 4, 7, 7, 5, 6, 3, 1, 14, 2, 7, 5, 3, 2, 8, 3, 3, 1, 31, 5, 1, 2, 1, 1, 4, 5, 1, 14, 3, 30, 4, 2, 4, 1, 20, 3, 3, 3, 3, 2, 30, 1, 7, 4, 14, 2, 7, 30, 30, 2, 30, 30, 30, 30, 30, 1, 30, 30, 7, 4, 7, 1, 3, 1, 2, 1, 1, 2, 1, 1, 5, 1, 30, 30, 13, 2, 3, 2, 2, 2, 1, 1, 30, 3, 2, 2, 15, 1, 7, 2, 14, 3, 3, 4, 4, 6, 3, 2, 1, 1, 2, 2, 4, 3, 2, 1, 7, 21, 2, 3, 2, 2, 20, 7, 3, 3, 3, 1, 5, 2, 5, 2, 4, 1, 1, 6, 1, 1, 10, 5, 3, 1, 2, 7, 2, 5, 4, 1, 5, 1, 1, 2, 1, 2, 1, 3, 1, 1, 7, 3, 2, 1, 1, 4, 2, 2, 30, 3, 3, 3, 1, 2, 4, 2, 2, 3, 1, 7, 2, 6, 4, 2, 5, 1, 3, 5, 29, 2, 1, 4, 1, 30, 1, 2, 28, 4, 30, 1, 1, 2, 30, 2, 2, 14, 1, 1, 1, 2, 4, 2, 5, 7, 2, 9, 2, 3, 3, 7, 11, 1, 2, 7, 1, 2, 3, 4, 1, 2, 4, 3, 4, 4, 3, 2, 2, 2, 7, 1, 31, 1, 1, 14, 1, 2, 2, 4, 1, 1, 3, 7, 3, 5, 1, 1, 2, 4, 2, 2, 2, 5, 1, 3, 1, 2, 2, 3, 3, 1, 2, 3, 1, 1, 2, 6, 10, 3, 2, 2, 2, 3, 2, 3, 10, 2, 3, 2, 2, 3, 8, 2, 1, 15, 2, 7, 2, 2, 2, 1, 30, 4, 2, 1, 30, 4, 7, 3, 1, 5, 25, 5, 30, 7, 2, 5, 1, 1, 6, 3, 3, 3, 1, 5, 4, 1, 2, 21, 2, 1, 1, 1, 3, 1, 1, 4, 1, 5, 5, 3, 2, 1, 1, 1, 1, 3, 2, 1, 9, 1, 1, 5, 30, 2, 1, 3, 7, 5, 3, 3, 1, 4, 2, 1, 1, 3, 1, 30, 3, 3, 1, 2, 23, 2, 7, 5, 30, 3, 1, 2, 1, 5, 1, 1, 4, 1, 3, 3, 1, 2, 1, 2, 2, 7, 4, 3, 2, 1, 3, 3, 1, 30, 2, 3, 3, 3, 7, 4, 4, 1, 2, 2, 2, 3, 4, 5, 1, 2, 1, 1, 3, 1, 6, 2, 7, 2, 1, 1, 3, 5, 7, 1, 1, 5, 1, 2, 3, 1, 7, 4, 2, 1, 2, 2, 1, 5, 3, 2, 1, 1, 3, 1, 1, 1, 2, 2, 1, 7, 1, 1, 30, 1, 30, 1, 1, 2, 3, 1, 1, 3, 3, 28, 4, 3, 2, 3, 1, 3, 2, 2, 3, 7, 3, 1, 1, 3, 31, 31, 1, 1, 3, 1, 1, 5, 5, 3, 2, 2, 2, 5, 4, 1, 1, 1, 3, 1, 1, 2, 1, 1, 3, 5, 3, 3, 2, 2, 1, 7, 3, 1, 1, 3, 1, 2, 3, 1, 3, 6, 3, 4, 7, 8, 3, 2, 2, 1, 3, 4, 1, 3, 2, 5, 3, 3, 25, 1, 1, 4, 30, 4, 1, 4, 3, 1, 30, 3, 1, 1, 2, 2, 1, 3, 2, 5, 4, 3, 30, 2, 30, 3, 2, 3, 2, 14, 7, 2, 5, 1, 1, 8, 1, 30, 1, 1, 2, 2, 2, 3, 1, 1, 2, 3, 4, 14, 2, 5, 1, 1, 2, 4, 2, 2, 3, 14, 3, 2, 16, 1, 2, 2, 5, 1, 30, 30, 2, 3, 5, 4, 2, 4, 30, 30, 1, 1, 5, 3, 1, 1, 1, 2, 1, 3, 1, 2, 1, 3, 15, 2, 30, 3, 1, 21, 3, 2, 1, 2, 2, 2, 2, 4, 3, 14, 4, 7, 1, 3, 2, 2, 1, 7, 3, 4, 2, 30, 5, 6, 2, 6, 1, 1, 4, 2, 1, 1, 3, 10, 7, 3, 1, 7, 1, 3, 3, 3, 2, 3, 2, 2, 7, 1, 2, 3, 1, 2, 3, 2, 30, 5, 3, 3, 1, 5, 5, 1, 2, 4, 2, 2, 1, 1, 30, 30, 3, 1, 5, 7, 3, 15, 7, 1, 2, 5, 2, 1, 1, 1, 3, 7, 1, 2, 1, 1, 2, 1, 1, 3, 2, 5, 1, 2, 2, 1, 2, 3, 30, 3, 1, 5, 3, 2, 5, 3, 30, 1, 3, 1, 2, 3, 3, 1, 4, 3, 1, 3, 3, 2, 3, 3, 1, 1, 4, 1, 2, 1, 2, 1, 30, 6, 2, 1, 4, 3, 2, 4, 1, 2, 2, 1, 3, 1, 4, 1, 3, 1, 1, 1, 1, 2, 3, 3, 1, 1, 1, 30, 1, 5, 1, 2, 4, 2, 4, 1, 1, 3, 30, 1, 10, 5, 1, 4, 1, 1, 1, 2, 1, 3, 2, 2, 5, 2, 14, 1, 5, 5, 2, 3, 6, 30, 4, 4, 5, 3, 5, 2, 3, 30, 1, 7, 1, 1, 3, 1, 5, 1, 2, 3, 4, 4, 2, 2, 3, 3, 1, 2, 4, 4, 7, 2, 3, 30, 1, 30, 4, 30, 30, 2, 2, 2, 7, 2, 1, 1, 3, 1, 30, 14, 5, 2, 4, 3, 2, 2, 30, 2, 1, 2, 5, 3, 1, 2, 1, 6, 1, 7, 1, 7, 2, 30, 3, 4, 3, 7, 1, 1, 4, 3, 1, 3, 3, 2, 1, 5, 2, 2, 2, 2, 5, 3, 12, 10, 1, 3, 2, 30, 4, 30, 1, 3, 1, 2, 2, 1, 2, 2, 3, 1, 3, 2, 2, 30, 2, 2, 3, 3, 30, 1, 2, 3, 1, 2, 5, 2, 2, 20, 3, 1, 2, 3, 2, 1, 4, 2, 2, 1, 1, 2, 4, 30, 1, 3, 3, 2, 2, 6, 7, 1, 3, 3, 2, 2, 30, 2, 3, 2, 2, 1, 1, 1, 7, 1, 15, 3, 11, 2, 2, 2, 1, 1, 2, 2, 14, 4, 4, 3, 3, 5, 2, 2, 5, 1, 2, 2, 3, 1, 1, 1, 13, 14, 1, 2, 2, 2, 5, 3, 2, 2, 6, 1, 2, 3, 7, 3, 2, 1, 1, 1, 1, 3, 1, 1, 26, 2, 2, 4, 2, 2, 30, 2, 1, 1, 3, 2, 1, 4, 1, 3, 2, 10, 3, 1, 3, 3, 2, 1, 2, 4, 30, 6, 1, 2, 5, 5, 1, 1, 2, 3, 1, 2, 3, 3, 13, 5, 2, 1, 1, 1, 2, 3, 5, 2, 2, 2, 6, 1, 5, 3, 1, 10, 1, 4, 1, 1, 2, 1, 15, 7, 1, 1, 1, 1, 1, 1, 1, 3, 3, 10, 1, 1, 1, 1, 3, 1, 3, 1, 3, 1, 4, 30, 3, 4, 5, 4, 1, 4, 5, 3, 3, 1, 1, 1, 7, 1, 1, 2, 4, 1, 2, 31, 2, 2, 2, 3, 2, 25, 10, 6, 3, 3, 3, 4, 7, 30, 3, 4, 1, 4, 2, 1, 1, 5, 30, 1, 1, 2, 2, 3, 1, 7, 2, 7, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 15, 29, 31, 3, 1, 4, 6, 10, 3, 3, 1, 3, 3, 7, 2, 1, 4, 1, 1, 3, 1, 2, 4, 3, 4, 30, 1, 2, 30, 3, 1, 3, 2, 2, 30, 1, 10, 4, 3, 1, 1, 3, 2, 4, 7, 2, 2, 1, 2, 1, 2, 1, 1, 4, 2, 5, 7, 2, 2, 1, 2, 1, 2, 1, 30, 2, 2, 3, 3, 7, 7, 7, 2, 2, 2, 5, 14, 2, 6, 13, 2, 2, 5, 4, 5, 3, 2, 1, 1, 3, 2, 2, 2, 2, 2, 2, 1, 3, 30, 2, 3, 1, 2, 4, 31, 5, 3, 1, 4, 7, 1, 13, 3, 2, 2, 1, 2, 1, 3, 3, 1, 2, 3, 5, 1, 2, 2, 1, 2, 1, 1, 4, 5, 30, 1, 7, 14, 1, 2, 4, 2, 4, 4, 2, 3, 1, 1, 2, 20, 15, 3, 2, 9, 3, 1, 3, 3, 2, 5, 2, 3, 1, 4, 2, 2, 1, 1, 2, 5, 3, 1, 3, 4, 5, 7, 8, 1, 2, 2, 4, 3, 3, 2, 1, 2, 5, 3, 4, 2, 3, 1, 2, 1, 1, 2, 1, 1, 3, 30, 30, 4, 3, 7, 2, 2, 4, 3, 2, 1, 2, 2, 2, 1, 2, 7, 5, 2, 4, 5, 2, 2, 5, 2, 3, 2, 2, 1, 4, 5, 4, 5, 2, 6, 5, 1, 10, 1, 2, 4, 2, 1, 1, 3, 16, 4, 2, 3, 3, 3, 5, 1, 3, 2, 3, 4, 4, 1, 1, 2, 3, 1, 4, 6, 2, 2, 5, 6, 2, 1, 7, 3, 2, 3, 1, 2, 2, 5, 1, 4, 1, 3, 3, 3, 2, 2, 6, 1, 1, 1, 2, 2, 2, 3, 7, 2, 2, 2, 3, 2, 1, 3, 1, 4, 4, 4, 4, 3, 1, 5, 10, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 4, 1, 2, 1, 2, 2, 1, 1, 1, 30, 1, 2, 7, 2, 30, 4, 1, 1, 7, 1, 1, 5, 1, 2, 1, 4, 2, 3, 3, 5, 1, 1, 2, 3, 3, 2, 7, 2, 1, 2, 2, 1, 4, 6, 1, 5, 1, 3, 1, 3, 3, 3, 5, 1, 5, 1, 5, 1, 3, 2, 10, 5, 2, 2, 2, 1, 1, 1, 4, 3, 2, 2, 1, 3, 1, 1, 3, 1, 30, 2, 1, 3, 1, 30, 2, 2, 4, 1, 3, 2, 2, 5, 1, 30, 3, 2, 2, 5, 6, 4, 1, 1, 4, 2, 1, 2, 1, 3, 5, 1, 5, 6, 4, 3, 2, 3, 2, 5, 5, 1, 2, 1, 4, 4, 3, 2, 2, 30, 4, 3, 1, 1, 4, 1, 3, 2, 30, 14, 5, 3, 2, 2, 3, 1, 1, 4, 1, 3, 7, 1, 4, 2, 7, 2, 1, 2, 5, 29, 2, 15, 3, 3, 2, 5, 2, 1, 31, 1, 1, 9, 3, 2, 1, 14, 1, 6, 7, 3, 5, 4, 2, 2, 1, 1, 3, 1, 1, 14, 1, 20, 1, 2, 2, 2, 5, 3, 2, 3, 2, 1, 1, 3, 3, 30, 5, 4, 1, 3, 1, 5, 1, 2, 30, 3, 3, 1, 2, 3, 2, 1, 1, 1, 14, 2, 4, 2, 30, 1, 1, 5, 1, 1, 5, 2, 3, 1, 4, 1, 2, 30, 2, 2, 3, 1, 3, 2, 3, 4, 3, 7, 5, 1, 2, 2, 1, 5, 1, 1, 2, 5, 28, 5, 1, 1, 30, 2, 30, 3, 6, 2, 1, 2, 2, 2, 30, 1, 3, 2, 2, 30, 1, 3, 1, 1, 5, 1, 2, 1, 1, 3, 5, 1, 2, 7, 1, 3, 1, 5, 2, 4, 3, 3, 1, 15, 1, 10, 7, 1, 2, 1, 7, 9, 6, 2, 1, 1, 30, 1, 2, 1, 5, 2, 5, 1, 2, 1, 12, 28, 4, 2, 2, 3, 2, 2, 2, 3, 1, 3, 10, 3, 1, 1, 3, 3, 5, 3, 2, 1, 2, 3, 5, 2, 1, 4, 1, 1, 3, 2, 1, 3, 2, 2, 2, 5, 2, 4, 2, 1, 2, 2, 1, 30, 1, 3, 2, 2, 3, 1, 3, 10, 1, 1, 1, 2, 1, 1, 3, 1, 1, 4, 2, 2, 3, 3, 6, 1, 15, 1, 1, 1, 2, 1, 5, 1, 1, 1, 1, 6, 3, 2, 1, 1, 2, 3, 2, 2, 30, 2, 1, 3, 2, 7, 3, 3, 5, 1, 3, 4, 4, 40, 1, 1, 5, 4, 3, 1, 3, 1, 5, 1, 14, 1, 1, 3, 5, 30, 1, 1, 7, 1, 1, 1, 1, 1, 2, 28, 2, 2, 2, 7, 7, 5, 2, 2, 3, 2, 30, 5, 3, 2, 1, 2, 3, 3, 14, 2, 2, 6, 20, 1, 3, 2, 3, 2, 3, 2, 3, 1, 1, 1, 5, 2, 3, 1, 3, 1, 3, 30, 4, 1, 14, 30, 5, 30, 1, 2, 2, 1, 1, 1, 1, 3, 3, 3, 4, 30, 3, 5, 30, 1, 3, 29, 3, 2, 27, 3, 7, 4, 1, 7, 2, 30, 2, 1, 7, 4, 3, 1, 7, 4, 3, 1, 2, 2, 1, 2, 3, 3, 5, 3, 1, 2, 2, 2, 3, 2, 1, 3, 5, 1, 1, 3, 30, 2, 2, 2, 2, 1, 2, 1, 4, 1, 3, 2, 1, 1, 2, 7, 2, 2, 5, 5, 2, 1, 1, 6, 3, 30, 3, 3, 1, 4, 2, 4, 1, 2, 3, 1, 2, 6, 7, 5, 4, 1, 3, 28, 2, 2, 5, 2, 1, 2, 2, 1, 15, 1, 3, 4, 3, 1, 4, 1, 1, 2, 4, 6, 2, 2, 2, 1, 14, 1, 3, 1, 30, 1, 7, 2, 5, 3, 1, 30, 2, 1, 5, 3, 1, 10, 7, 2, 6, 2, 1, 3, 20, 5, 7, 2, 3, 1, 7, 1, 2, 1, 1, 3, 4, 1, 4, 4, 1, 1, 7, 7, 5, 1, 2, 1, 30, 2, 5, 1, 1, 5, 1, 3, 1, 2, 2, 1, 1, 3, 3, 5, 1, 3, 1, 1, 1, 3, 1, 2, 2, 5, 1, 1, 30, 1, 30, 2, 3, 4, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 6, 1, 28, 1, 1, 5, 3, 5, 3, 2, 4, 1, 2, 1, 2, 1, 2, 5, 1, 3, 2, 2, 6, 1, 14, 7, 2, 13, 2, 2, 3, 1, 3, 1, 1, 30, 2, 7, 30, 2, 3, 1, 2, 1, 10, 1, 2, 2, 1, 5, 1, 15, 14, 1, 2, 4, 4, 2, 3, 30, 3, 5, 4, 2, 7, 4, 2, 3, 6, 1, 1, 7, 2, 1, 7, 1, 1, 2, 8, 30, 2, 1, 2, 3, 3, 5, 1, 5, 2, 2, 30, 1, 1, 5, 1, 4, 2, 2, 1, 4, 4, 4, 2, 3, 1, 2, 2, 8, 1, 7, 5, 3, 3, 2, 1, 3, 4, 2, 2, 3, 3, 2, 30, 2, 29, 3, 5, 2, 30, 2, 2, 7, 1, 2, 14, 1, 3, 1, 31, 4, 15, 2, 1, 2, 4, 3, 3, 5, 30, 14, 1, 3, 3, 5, 3, 2, 1, 2, 1, 1, 5, 5, 30, 4, 7, 2, 1, 1, 3, 3, 1, 2, 2, 4, 2, 4, 2, 1, 1, 2, 3, 2, 2, 3, 1, 5, 1, 2, 2, 2, 3, 1, 1, 1, 3, 5, 1, 2, 1, 30, 2, 2, 1, 3, 5, 3, 4, 2, 1, 5, 1, 2, 5, 30, 3, 1, 2, 2, 30, 30, 3, 30, 1, 3, 4, 1, 4, 2, 2, 1, 2, 1, 3, 1, 1, 3, 4, 2, 4, 1, 10, 3, 3, 2, 1, 20, 6, 1, 4, 1, 3, 30, 10, 4, 14, 1, 1, 4, 1, 2, 1, 30, 2, 1, 2, 1, 2, 30, 4, 3, 1, 7, 6, 10, 3, 2, 4, 4, 1, 1, 4, 3, 2, 4, 7, 8, 4, 2, 7, 4, 5, 2, 3, 3, 3, 7, 5, 4, 5, 1, 1, 5, 7, 5, 2, 3, 5, 5, 30, 2, 4, 3, 2, 5, 2, 3, 1, 30, 1, 3, 7, 30, 7, 5, 2, 1, 2, 1, 2, 3, 10, 1, 4, 1, 3, 2, 3, 3, 1, 2, 4, 2, 2, 30, 20, 4, 3, 1, 7, 5, 1, 5, 2, 1, 3, 5, 2, 2, 2, 1, 1, 3, 30, 30, 1, 12, 2, 1, 2, 3, 2, 2, 1, 3, 2, 1, 5, 6, 2, 3, 1, 1, 1, 3, 2, 2, 2, 4, 2, 3, 2, 1, 4, 3, 2, 7, 2, 3, 14, 30, 2, 1, 1, 3, 30, 2, 2, 14, 6, 1, 2, 1, 4, 1, 2, 1, 2, 1, 2, 4, 1, 1, 20, 1, 3, 14, 3, 3, 1, 4, 1, 4, 2, 3, 3, 2, 5, 3, 1, 4, 2, 2, 7, 1, 2, 2, 5, 4, 1, 3, 3, 4, 1, 2, 1, 4, 5, 3, 3, 1, 7, 4, 2, 1, 3, 5, 2, 5, 3, 2, 2, 2, 2, 3, 10, 2, 25, 3, 30, 3, 2, 2, 2, 3, 2, 2, 2, 2, 1, 3, 3, 3, 5, 4, 28, 2, 5, 1, 1, 2, 1, 1, 4, 2, 1, 30, 3, 1, 1, 1, 1, 3, 1, 2, 2, 3, 1, 4, 2, 40, 5, 1, 3, 1, 1, 2, 3, 2, 3, 12, 3, 4, 3, 4, 1, 3, 4, 2, 1, 7, 4, 1, 4, 2, 4, 2, 7, 2, 2, 1, 1, 1, 7, 1, 2, 3, 7, 2, 2, 2, 3, 1, 2, 1, 2, 6, 30, 10, 3, 3, 2, 3, 2, 2, 7, 2, 2, 3, 1, 3, 5, 5, 1, 3, 3, 30, 6, 30, 7, 4, 1, 3, 2, 1, 3, 1, 30, 1, 3, 1, 1, 7, 28, 7, 1, 1, 7, 7, 2, 4, 2, 3, 2, 5, 1, 3, 28, 1, 2, 1, 5, 2, 5, 3, 6, 2, 2, 2, 2, 1, 31, 1, 3, 1, 4, 3, 3, 3, 1, 1, 2, 4, 7, 4, 30, 3, 5, 1, 1, 7, 7, 5, 5, 2, 2, 2, 3, 1, 3, 2, 5, 7, 14, 30, 4, 2, 30, 1, 28, 5, 1, 3, 3, 2, 1, 1, 4, 3, 10, 1, 3, 2, 1, 1, 15, 2, 10, 1, 1, 4, 3, 4, 30, 2, 2, 30, 1, 1, 2, 3, 1, 9, 2, 3, 5, 6, 1, 7, 7, 2, 1, 30, 4, 3, 30, 2, 2, 30, 2, 5, 6, 28, 1, 2, 2, 3, 2, 2, 1, 7, 1, 4, 1, 5, 1, 4, 1, 2, 2, 3, 2, 1, 2, 3, 3, 5, 5, 3, 3, 2, 5, 10, 3, 31, 4, 1, 4, 2, 1, 5, 2, 3, 30, 2, 6, 4, 9, 2, 6, 2, 7, 3, 3, 2, 2, 30, 3, 2, 1, 5, 2, 4, 2, 2, 2, 30, 3, 1, 1, 30, 3, 3, 5, 3, 1, 3, 2, 14, 1, 3, 4, 2, 7, 4, 2, 7, 30, 3, 2, 7, 30, 2, 30, 5, 1, 2, 1, 30, 2, 2, 30, 6, 2, 7, 2, 2, 15, 2, 1, 1, 1, 2, 2, 30, 3, 1, 2, 7, 4, 2, 13, 3, 2, 3, 2, 1, 4, 3, 1, 4, 7, 2, 2, 1, 1, 7, 2, 2, 1, 3, 2, 2, 7, 4, 28, 3, 1, 1, 1, 7, 1, 1, 1, 1, 1, 7, 2, 1, 2, 1, 3, 2, 30, 5, 1, 2, 5, 2, 1, 1, 30, 3, 6, 30, 1, 29, 30, 30, 30, 30, 2, 2, 4, 2, 2, 2, 1, 7, 1, 2, 2, 1, 1, 1, 1, 2, 5, 3, 3, 3, 3, 6, 2, 2, 20, 1, 2, 1, 1, 3, 1, 3, 3, 1, 7, 4, 5, 1, 7, 5, 2, 1, 2, 2, 5, 1, 1, 16, 28, 14, 1, 1, 5, 1, 2, 2, 1, 1, 4, 1, 5, 3, 1, 1, 3, 4, 1, 30, 1, 2, 1, 1, 1, 3, 3, 4, 6, 1, 3, 2, 2, 2, 2, 3, 2, 14, 1, 1, 3, 1, 30, 2, 1, 3, 10, 2, 1, 30, 3, 30, 1, 29, 30, 30, 30, 30, 1, 30, 30, 2, 1, 2, 3, 4, 2, 2, 1, 15, 2, 14, 2, 30, 1, 5, 30, 28, 5, 3, 30, 1, 3, 5, 6, 30, 2, 3, 3, 4, 2, 3, 4, 1, 3, 3, 3, 1, 3, 1, 1, 2, 3, 5, 5, 5, 7, 4, 2, 1, 4, 29, 1, 3, 10, 3, 3, 2, 2, 3, 1, 1, 3, 3, 2, 3, 14, 2, 3, 7, 30, 3, 4, 2, 2, 1, 3, 3, 14, 3, 3, 1, 16, 4, 1, 2, 2, 5, 1, 3, 2, 4, 2, 2, 4, 1, 2, 3, 3, 1, 1, 2, 1, 1, 2, 3, 30, 30, 2, 2, 4, 1, 1, 4, 4, 2, 2, 1, 2, 1, 31, 2, 1, 5, 6, 2, 2, 3, 1, 1, 1, 1, 1, 1, 3, 1, 3, 2, 1, 3, 1, 7, 4, 29, 2, 2, 4, 1, 4, 2, 1, 1, 3, 2, 4, 2, 2, 1, 1, 1, 3, 1, 2, 7, 3, 2, 1, 30, 1, 5, 2, 3, 2, 1, 3, 30, 2, 3, 3, 7, 1, 3, 1, 1, 5, 2, 30, 1, 4, 1, 2, 15, 1, 3, 3, 1, 2, 30, 4, 5, 1, 1, 2, 2, 2, 3, 1, 1, 1, 3, 1, 7, 5, 4, 2, 30, 15, 2, 1, 2, 2, 3, 3, 5, 2, 30, 30, 2, 30, 2, 4, 3, 14, 3, 1, 1, 3, 2, 2, 1, 5, 1, 1, 5, 30, 5, 4, 4, 3, 5, 3, 30, 5, 2, 1, 7, 3, 1, 2, 1, 3, 4, 1, 3, 4, 1, 6, 30, 3, 2, 1, 2, 1, 1, 1, 4, 1, 2, 1, 1, 2, 2, 21, 1, 3, 30, 30, 5, 2, 5, 1, 3, 2, 3, 1, 1, 1, 3, 5, 3, 3, 30, 5, 1, 28, 1, 1, 30, 1, 1, 1, 10, 1, 2, 2, 1, 3, 5, 3, 3, 14, 4, 2, 3, 2, 2, 3, 2, 1, 2, 4, 1, 1, 2, 2, 1, 1, 30, 2, 2, 1, 1, 1, 1, 3, 1, 3, 1, 3, 1, 5, 2, 3, 4, 2, 2, 3, 30, 1, 5, 3, 30, 30, 3, 2, 3, 2, 1, 1, 1, 1, 5, 5, 5, 2, 6, 5, 1, 3, 30, 3, 5, 2, 1, 1, 20, 2, 1, 2, 1, 1, 1, 1, 2, 5, 30, 4, 1, 1, 4, 1, 3, 15, 5, 4, 5, 31, 1, 6, 4, 3, 2, 1, 1, 2, 2, 7, 3, 3, 1, 1, 3, 31, 12, 7, 3, 31, 1, 7, 5, 2, 5, 1, 1, 3, 4, 10, 1, 1, 12, 4, 30, 1, 2, 2, 3, 1, 3, 1, 2, 5, 1, 4, 30, 2, 1, 3, 3, 2, 1, 1, 2, 5, 14, 1, 1, 5, 1, 2, 4, 1, 4, 4, 3, 30, 1, 3, 4, 3, 3, 2, 1, 2, 3, 4, 3, 2, 30, 2, 2, 3, 1, 1, 10, 1, 2, 1, 1, 31, 1, 2, 2, 4, 30, 5, 20, 2, 7, 1, 4, 30, 2, 5, 2, 21, 7, 4, 2, 1, 4, 2, 10, 3, 1, 1, 1, 30, 1, 1, 1, 3, 2, 1, 3, 3, 2, 1, 1, 1, 3, 1, 5, 2, 6, 1, 3, 3, 2, 14, 2, 3, 1, 1, 3, 7, 2, 10, 7, 4, 2, 1, 2, 2, 2, 1, 6, 30, 3, 30, 3, 28, 1, 3, 2, 5, 1, 1, 1, 1, 5, 2, 1, 1, 2, 1, 2, 3, 4, 2, 2, 1, 2, 1, 14, 4, 1, 2, 1, 3, 2, 4, 1, 3, 4, 2, 1, 3, 2, 1, 14, 1, 12, 2, 5, 5, 2, 4, 30, 3, 3, 2, 2, 5, 3, 2, 30, 3, 1, 3, 1, 3, 3, 7, 2, 1, 3, 5, 14, 3, 1, 2, 2, 3, 3, 2, 1, 1, 12, 30, 7, 1, 1, 3, 3, 28, 2, 3, 2, 1, 2, 7, 1, 2, 1, 1, 2, 3, 7, 1, 30, 5, 2, 1, 1, 2, 2, 1, 4, 1, 1, 1, 1, 3, 2, 2, 1, 2, 2, 3, 3, 3, 4, 1, 2, 1, 4, 4, 1, 3, 30, 3, 2, 1, 25, 30, 3, 10, 2, 2, 7, 4, 1, 2, 3, 2, 4, 5, 1, 3, 30, 1, 30, 2, 2, 5, 30, 4, 3, 30, 4, 1, 1, 5, 1, 30, 2, 30, 4, 4, 1, 30, 3, 30, 1, 31, 2, 2, 1, 2, 1, 1, 1, 3, 4, 3, 21, 1, 1, 5, 3, 2, 2, 3, 1, 2, 2, 25, 1, 7, 2, 3, 1, 3, 5, 3, 3, 2, 5, 6, 2, 1, 4, 3, 16, 7, 1, 5, 6, 1, 10, 1, 5, 3, 1, 1, 2, 2, 1, 2, 7, 1, 1, 4, 1, 30, 3, 2, 4, 30, 2, 1, 3, 1, 3, 2, 5, 2, 1, 3, 2, 2, 1, 1, 3, 3, 4, 2, 3, 3, 1, 2, 2, 1, 2, 3, 4, 2, 4, 21, 1, 2, 2, 1, 5, 1, 2, 2, 1, 40, 3, 30, 2, 2, 2, 3, 2, 5, 1, 3, 30, 3, 30, 30, 2, 1, 30, 3, 2, 10, 1, 4, 1, 14, 30, 5, 2, 1, 29, 4, 4, 30, 1, 2, 30, 2, 30, 3, 3, 3, 2, 2, 4, 1, 4, 3, 14, 1, 16, 2, 2, 1, 3, 5, 2, 1, 2, 30, 4, 3, 1, 1, 7, 2, 1, 1, 2, 31, 1, 30, 2, 3, 3, 3, 30, 6, 5, 3, 5, 4, 1, 4, 5, 1, 1, 2, 2, 30, 1, 30, 1, 3, 1, 3, 5, 1, 14, 1, 1, 2, 2, 2, 1, 5, 1, 1, 3, 1, 1, 2, 1, 2, 2, 3, 1, 5, 1, 1, 4, 6, 3, 30, 5, 4, 1, 4, 30, 30, 15, 30, 4, 30, 30, 2, 1, 3, 30, 2, 3, 2, 5, 30, 3, 3, 1, 7, 1, 30, 1, 30, 30, 1, 1, 2, 1, 1, 2, 3, 4, 6, 14, 3, 3, 15, 30, 1, 1, 1, 2, 1, 4, 2, 1, 30, 30, 1, 30, 7, 3, 28, 30, 3, 2, 7, 2, 5, 5, 1, 1, 2, 4, 3, 2, 30, 2, 2, 12, 30, 30, 30, 2, 2, 1, 7, 1, 2, 2, 2, 1, 30, 7, 2, 2, 30, 2, 1, 30, 5, 5, 1, 28, 1, 7, 5, 5, 30, 30, 30, 1, 7, 1, 2, 5, 2, 3, 2, 30, 5, 3, 5, 1, 1, 15, 30, 30, 30, 30, 5, 2, 5, 1, 5, 30, 30, 30, 1, 1, 2, 30, 4, 30, 20, 30, 30, 3, 3, 21, 30, 1, 1, 3, 3, 3, 2, 4, 3, 7, 2, 1, 7, 1, 7, 4, 5, 4, 4, 4, 1, 2, 1, 30, 2, 9, 3, 1, 14, 1, 1, 3, 2, 2, 2, 3, 2, 1, 5, 2, 1, 7, 30, 2, 30, 2, 1, 1, 2, 30, 30, 2, 2, 2, 4, 5, 3, 1, 1, 6, 30, 20, 3, 1, 1, 30, 3, 1, 2, 1, 10, 1, 1, 3, 30, 3, 2, 4, 1, 1, 2, 5, 1, 4, 2, 2, 1, 4, 4, 3, 4, 2, 4, 25, 3, 1, 3, 4, 2, 5, 1, 5, 4, 3, 4, 2, 3, 8, 6, 2, 3, 1, 7, 6, 2, 1, 3, 1, 1, 3, 2, 2, 5, 30, 1, 2, 30, 1, 1, 1, 1, 1, 30, 3, 30, 30, 1, 2, 5, 5, 2, 20, 3, 2, 30, 2, 3, 3, 30, 1, 1, 2, 5, 2, 2, 1, 3, 3, 1, 3, 29, 1, 1, 2, 3, 4, 1, 1, 2, 1, 2, 1, 1, 32, 2, 1, 1, 1, 2, 1, 2, 2, 9, 9, 1, 2, 2, 1, 5, 3, 1, 3, 1, 5, 5, 4, 7, 2, 5, 3, 6, 2, 3, 2, 7, 4, 1, 1, 30, 2, 12, 11, 3, 4, 30, 1, 3, 2, 30, 1, 5, 3, 1, 2, 2, 30, 30, 3, 1, 1, 1, 2, 31, 1, 5, 30, 1, 4, 3, 30, 7, 5, 1, 3, 3, 30, 1, 1, 2, 1, 3, 2, 3, 2, 2, 1, 1, 2, 4, 1, 1, 2, 2, 1, 2, 2, 4, 1, 2, 5, 3, 3, 2, 4, 6, 1, 3, 2, 1, 29, 2, 2, 1, 2, 5, 1, 1, 12, 2, 4, 2, 1, 7, 1, 3, 1, 30, 2, 3, 1, 40, 1, 1, 1, 4, 2, 2, 2, 5, 1, 1, 5, 2, 1, 4, 2, 2, 3, 2, 4, 5, 2, 2, 5, 2, 30, 2, 1, 30, 1, 1, 1, 2, 2, 1, 7, 3, 7, 1, 1, 1, 1, 1, 4, 1, 7, 2, 1, 30, 28, 2, 1, 7, 30, 2, 2, 2, 2, 3, 7, 3, 1, 1, 1, 3, 1, 2, 4, 5, 30, 1, 3, 3, 4, 3, 2, 6, 14, 2, 30, 1, 3, 3, 1, 2, 2, 10, 1, 3, 4, 4, 2, 3, 2, 2, 4, 2, 1, 14, 4, 1, 2, 4, 1, 3, 1, 3, 3, 2, 3, 1, 4, 5, 3, 1, 1, 7, 3, 1, 1, 2, 3, 1, 1, 3, 2, 3, 3, 30, 5, 1, 3, 1, 3, 3, 3, 1, 2, 4, 3, 1, 1, 2, 2, 20, 2, 1, 2, 2, 4, 2, 1, 1, 30, 1, 3, 2, 4, 7, 7, 4, 14, 2, 1, 1, 1, 2, 7, 1, 7, 5, 2, 5, 2, 1, 30, 5, 2, 4, 2, 2, 4, 1, 2, 5, 2, 2, 3, 2, 1, 4, 2, 30, 2, 5, 1, 2, 2, 2, 1, 3, 1, 5, 2, 1, 4, 3, 2, 2, 2, 3, 30, 1, 3, 1, 5, 5, 4, 1, 1, 2, 5, 2, 3, 3, 29, 4, 2, 30, 3, 1, 5, 1, 6, 30, 3, 1, 4, 4, 2, 2, 30, 6, 2, 2, 1, 30, 4, 1, 1, 7, 1, 2, 3, 2, 5, 2, 1, 2, 1, 4, 3, 4, 4, 28, 3, 5, 3, 2, 2, 2, 1, 1, 5, 2, 2, 3, 3, 1, 1, 30, 4, 30, 30, 4, 1, 3, 1, 3, 2, 2, 20, 5, 30, 2, 3, 2, 2, 2, 2, 4, 4, 3, 3, 7, 1, 6, 4, 3, 1, 2, 2, 1, 4, 2, 30, 4, 1, 3, 1, 1, 2, 2, 2, 5, 5, 2, 4, 6, 1, 1, 3, 5, 10, 30, 1, 4, 1, 2, 6, 2, 2, 2, 2, 1, 2, 4, 1, 1, 1, 30, 7, 1, 3, 30, 30, 1, 2, 14, 1, 7, 3, 3, 1, 7, 1, 30, 3, 30, 4, 1, 1, 3, 2, 3, 4, 5, 1, 3, 7, 5, 3, 1, 3, 1, 3, 14, 2, 1, 3, 2, 3, 3, 2, 3, 7, 3, 30, 1, 2, 2, 3, 2, 15, 10, 2, 4, 1, 5, 3, 2, 1, 2, 1, 5, 1, 6, 30, 3, 14, 2, 2, 1, 2, 2, 2, 2, 3, 3, 14, 2, 3, 1, 3, 5, 1, 3, 3, 5, 4, 3, 2, 21, 2, 3, 3, 2, 25, 30, 2, 1, 5, 1, 3, 2, 1, 3, 3, 3, 3, 7, 3, 4, 1, 3, 1, 2, 1, 2, 1, 30, 30, 30, 1, 1, 3, 5, 3, 1, 3, 14, 13, 30, 30, 30, 1, 2, 3, 4, 30, 7, 4, 29, 30, 2, 1, 1, 1, 6, 3, 1, 3, 2, 2, 3, 1, 30, 1, 30, 30, 5, 3, 30, 1, 1, 2, 5, 3, 2, 1, 1, 2, 2, 30, 1, 2, 2, 30, 30, 30, 2, 7, 21, 1, 1, 3, 1, 7, 4, 1, 1, 2, 30, 30, 1, 3, 8, 2, 3, 30, 1, 1, 1, 4, 3, 4, 3, 4, 1, 1, 4, 7, 1, 1, 1, 5, 31, 2, 5, 3, 2, 3, 2, 1, 1, 18, 30, 7, 2, 2, 6, 2, 30, 2, 1, 3, 5, 1, 3, 1, 3, 1, 2, 5, 1, 1, 7, 32, 1, 2, 1, 5, 30, 2, 2, 3, 3, 2, 1, 4, 1, 1, 1, 6, 3, 1, 1, 1, 2, 4, 3, 4, 6, 6, 30, 10, 1, 1, 28, 2, 30, 2, 29, 14, 3, 7, 1, 4, 2, 2, 1, 7, 2, 2, 3, 5, 2, 2, 30, 30, 3, 1, 4, 2, 2, 1, 2, 2, 4, 31, 2, 2, 2, 5, 3, 5, 2, 3, 2, 1, 1, 3, 3, 3, 1, 3, 1, 1, 5, 3, 2, 7, 1, 2, 2, 3, 3, 6, 1, 2, 3, 1, 1, 2, 2, 1, 1, 30, 1, 1, 4, 20, 30, 2, 3, 30, 30, 30, 30, 2, 3, 2, 1, 1, 1, 1, 2, 30, 1, 2, 3, 5, 2, 4, 3, 4, 5, 2, 30, 2, 5, 6, 3, 1, 2, 1, 3, 3, 30, 2, 17, 7, 2, 4, 30, 30, 1, 3, 1, 2, 30, 2, 2, 1, 1, 3, 3, 7, 5, 7, 8, 2, 30, 30, 2, 1, 30, 1, 30, 30, 3, 1, 3, 2, 4, 30, 1, 2, 3, 4, 1, 13, 5, 2, 1, 4, 2, 10, 6, 2, 2, 30, 30, 1, 3, 1, 1, 30, 30, 2, 1, 3, 4, 30, 2, 14, 1, 1, 2, 1, 4, 7, 6, 30, 10, 1, 2, 1, 2, 5, 1, 2, 2, 7, 1, 2, 2, 2, 1, 2, 3, 30, 1, 5, 3, 2, 1, 2, 4, 30, 2, 1, 3, 3, 1, 1, 1, 1, 2, 3, 2, 3, 2, 3, 4, 2, 3, 1, 3, 2, 7, 30, 1, 30, 2, 3, 1, 1, 2, 6, 4, 6, 4, 7, 3, 1, 3, 2, 2, 30, 1, 2, 2, 4, 4, 2, 2, 1, 5, 30, 1, 30, 14, 5, 2, 2, 1, 1, 2, 2, 10, 3, 31, 1, 2, 1, 3, 1, 2, 4, 2, 1, 29, 1, 30, 15, 2, 1, 2, 1, 2, 3, 16, 2, 2, 4, 1, 3, 1, 5, 3, 4, 3, 1, 3, 1, 3, 2, 1, 3, 28, 2, 1, 7, 5, 3, 3, 1, 3, 1, 3, 2, 24, 30, 30, 30, 2, 5, 1, 10, 5, 1, 15, 30, 13, 3, 1, 1, 1, 7, 3, 29, 1, 2, 30, 3, 1, 5, 1, 1, 1, 2, 3, 3, 3, 5, 14, 1, 4, 1, 2, 1, 2, 4, 5, 4, 3, 3, 2, 12, 1, 7, 1, 26, 2, 14, 3, 5, 1, 3, 2, 1, 3, 1, 1, 3, 30, 1, 3, 30, 3, 2, 2, 2, 1, 2, 2, 2, 1, 7, 2, 2, 1, 3, 2, 3, 1, 2, 4, 2, 4, 2, 2, 1, 31, 2, 7, 30, 2, 3, 2, 15, 1, 2, 2, 3, 6, 2, 4, 2, 2, 3, 1, 15, 14, 2, 1, 1, 2, 1, 14, 1, 4, 1, 2, 1, 12, 3, 14, 3, 14, 1, 2, 1, 3, 2, 2, 2, 7, 5, 30, 1, 2, 3, 3, 2, 2, 3, 1, 10, 31, 4, 3, 4, 2, 10, 4, 2, 1, 7, 3, 1, 4, 30, 3, 2, 1, 3, 10, 2, 1, 2, 3, 3, 1, 2, 2, 3, 4, 21, 2, 2, 20, 3, 3, 3, 2, 2, 7, 1, 3, 2, 4, 4, 5, 3, 2, 4, 2, 1, 1, 5, 6, 1, 2, 1, 4, 7, 3, 7, 7, 2, 2, 2, 3, 1, 1, 2, 2, 2, 1, 1, 30, 3, 1, 3, 2, 2, 4, 1, 2, 30, 1, 31, 1, 7, 1, 30, 30, 31, 1, 4, 2, 2, 2, 3, 5, 3, 1, 7, 2, 3, 1, 2, 30, 1, 4, 1, 1, 2, 3, 3, 30, 7, 31, 2, 1, 4, 29, 1, 7, 2, 3, 2, 30, 2, 7, 1, 1, 1, 7, 2, 30, 5, 2, 1, 1, 7, 30, 10, 30, 30, 30, 30, 2, 30, 2, 30, 5, 2, 2, 3, 2, 30, 30, 30, 1, 1, 5, 7, 2, 2, 1, 5, 30, 30, 3, 2, 2, 2, 6, 2, 5, 1, 3, 30, 3, 2, 1, 3, 10, 1, 1, 1, 5, 15, 2, 4, 5, 30, 3, 5, 3, 3, 2, 5, 1, 1, 2, 2, 2, 3, 6, 5, 2, 5, 3, 3, 2, 4, 2, 1, 2, 4, 4, 1, 2, 3, 28, 7, 2, 30, 1, 1, 1, 3, 1, 5, 4, 3, 1, 2, 4, 3, 2, 7, 1, 3, 1, 3, 28, 4, 20, 2, 7, 2, 2, 7, 2, 10, 7, 5, 6, 4, 1, 2, 1, 10, 2, 3, 3, 2, 2, 30, 32, 15, 4, 1, 1, 4, 2, 2, 14, 4, 1, 5, 3, 30, 4, 2, 14, 4, 30, 5, 5, 6, 5, 4, 2, 2, 1, 1, 4, 1, 2, 3, 2, 1, 3, 3, 4, 2, 2, 30, 2, 1, 1, 30, 1, 2, 3, 1, 30, 30, 2, 3, 30, 2, 14, 2, 3, 1, 30, 6, 30, 7, 2, 3, 5, 30, 1, 1, 6, 1, 1, 3, 2, 30, 1, 6, 4, 2, 2, 3, 3, 4, 2, 1, 21, 2, 3, 2, 17, 1, 1, 1, 1, 2, 5, 3, 2, 1, 2, 2, 3, 5, 19, 2, 2, 1, 1, 2, 2, 4, 30, 3, 2, 2, 2, 4, 2, 3, 1, 1, 3, 3, 1, 2, 7, 3, 3, 2, 1, 2, 3, 3, 2, 2, 6, 10, 30, 1, 3, 1, 2, 2, 2, 7, 3, 5, 1, 3, 3, 3, 30, 5, 1, 1, 1, 1, 5, 28, 2, 3, 2, 2, 25, 2, 2, 2, 2, 3, 2, 3, 6, 3, 2, 5, 3, 4, 3, 2, 4, 2, 5, 1, 3, 2, 4, 5, 1, 14, 5, 2, 1, 7, 1, 5, 2, 14, 4, 3, 4, 3, 3, 1, 1, 1, 7, 2, 2, 3, 6, 1, 30, 6, 10, 7, 4, 2, 3, 2, 1, 2, 2, 1, 2, 2, 1, 30, 2, 2, 30, 1, 2, 4, 3, 5, 2, 2, 3, 6, 4, 30, 30, 3, 2, 3, 3, 2, 3, 1, 2, 4, 3, 2, 10, 1, 1, 5, 1, 1, 1, 3, 1, 1, 3, 6, 2, 2, 7, 2, 2, 1, 2, 5, 4, 7, 4, 4, 1, 3, 7, 1, 1, 2, 4, 2, 3, 2, 3, 1, 5, 30, 3, 1, 1, 2, 7, 2, 1, 2, 1, 1, 2, 2, 2, 5, 3, 30, 30, 1, 4, 3, 3, 3, 1, 3, 1, 2, 1, 1, 3, 2, 2, 5, 3, 8, 1, 2, 3, 1, 3, 5, 2, 3, 2, 3, 3, 2, 2, 2, 2, 3, 2, 2, 7, 1, 2, 1, 1, 1, 1, 1, 4, 30, 2, 2, 3, 1, 7, 1, 5, 1, 2, 4, 5, 1, 30, 2, 2, 1, 2, 1, 2, 2, 30, 2, 2, 1, 1, 2, 5, 1, 3, 7, 7, 2, 3, 3, 1, 4, 1, 3, 1, 1, 1, 4, 3, 2, 30, 3, 1, 4, 6, 2, 4, 1, 2, 4, 3, 2, 2, 4, 1, 3, 1, 3, 1, 7, 1, 4, 4, 2, 7, 1, 2, 2, 16, 7, 7, 30, 3, 1, 30, 2, 7, 2, 4, 5, 5, 5, 2, 10, 1, 3, 5, 2, 5, 1, 2, 5, 1, 1, 4, 4, 4, 3, 4, 3, 10, 7, 3, 1, 2, 7, 2, 2, 3, 4, 30, 7, 3, 1, 2, 2, 1, 1, 3, 1, 2, 3, 5, 2, 2, 4, 2, 5, 2, 2, 3, 1, 30, 1, 1, 1, 2, 5, 1, 3, 7, 30, 2, 6, 3, 1, 1, 3, 3, 3, 30, 1, 2, 1, 5, 30, 1, 1, 6, 3, 3, 2, 2, 14, 1, 4, 1, 1, 1, 3, 3, 2, 2, 6, 1, 15, 3, 1, 2, 1, 3, 3, 2, 30, 5, 3, 30, 7, 2, 1, 1, 3, 3, 15, 2, 2, 28, 4, 2, 3, 2, 2, 7, 3, 1, 1, 1, 30, 3, 1, 3, 4, 4, 2, 2, 2, 2, 1, 2, 2, 4, 2, 2, 1, 3, 1, 3, 3, 1, 2, 30, 2, 5, 5, 1, 3, 1, 1, 2, 2, 4, 2, 4, 1, 1, 30, 5, 30, 5, 2, 10, 1, 3, 7, 2, 2, 30, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 3, 1, 2, 3, 1, 3, 3, 5, 1, 1, 14, 5, 1, 3, 2, 1, 3, 10, 2, 2, 4, 1, 2, 4, 3, 2, 7, 2, 7, 1, 2, 3, 5, 1, 1, 3, 2, 30, 5, 1, 5, 2, 2, 2, 30, 1, 2, 27, 1, 15, 2, 4, 30, 1, 3, 5, 30, 3, 1, 30, 2, 5, 1, 2, 2, 1, 3, 1, 30, 1, 27, 4, 3, 1, 1, 2, 1, 7, 3, 2, 30, 2, 1, 7, 1, 1, 1, 1, 3, 1, 28, 5, 2, 3, 30, 30, 3, 5, 3, 30, 1, 1, 2, 3, 2, 3, 2, 3, 3, 3, 30, 3, 1, 2, 3, 3, 2, 3, 2, 2, 1, 2, 2, 1, 2, 2, 3, 2, 3, 1, 1, 3, 2, 30, 3, 5, 1, 1, 1, 2, 2, 4, 2, 5, 3, 1, 2, 7, 1, 1, 5, 2, 5, 1, 2, 2, 1, 2, 30, 2, 2, 7, 1, 1, 1, 1, 3, 3, 2, 1, 2, 1, 1, 30, 3, 7, 2, 1, 1, 2, 2, 3, 1, 2, 1, 1, 7, 5, 3, 2, 9, 2, 4, 2, 2, 12, 4, 2, 1, 1, 6, 2, 2, 2, 1, 3, 2, 2, 7, 3, 1, 2, 1, 3, 4, 1, 2, 3, 10, 1, 1, 3, 2, 1, 1, 29, 3, 1, 1, 8, 1, 1, 2, 4, 30, 5, 1, 2, 15, 2, 30, 3, 2, 2, 2, 4, 2, 1, 2, 30, 20, 1, 1, 30, 2, 30, 2, 3, 3, 1, 1, 4, 2, 30, 4, 2, 2, 20, 2, 2, 2, 2, 2, 3, 1, 2, 2, 2, 2, 5, 1, 3, 2, 2, 30, 1, 4, 3, 5, 4, 7, 2, 2, 5, 1, 1, 2, 3, 2, 3, 2, 1, 2, 2, 3, 4, 7, 3, 6, 7, 2, 1, 4, 1, 2, 3, 3, 2, 2, 2, 30, 2, 3, 2, 3, 1, 1, 2, 2, 2, 2, 5, 3, 1, 5, 4, 5, 1, 2, 2, 4, 5, 5, 1, 2, 3, 1, 3, 2, 1, 6, 2, 1, 2, 4, 30, 3, 1, 3, 5, 5, 3, 2, 2, 4, 2, 1, 3, 2, 3, 2, 3, 7, 12, 2, 3, 1, 2, 1, 2, 4, 1, 2, 2, 2, 2, 30, 3, 6, 1, 2, 2, 30, 2, 30, 30, 2, 3, 1, 2, 1, 3, 1, 2, 4, 3, 1, 15, 1, 2, 2, 2, 1, 2, 4, 1, 1, 4, 8, 2, 3, 3, 2, 4, 1, 2, 3, 2, 3, 2, 1, 1, 2, 2, 1, 4, 2, 12, 1, 3, 3, 2, 14, 4, 5, 2, 3, 1, 7, 2, 1, 4, 3, 30, 1, 5, 2, 30, 3, 2, 1, 30, 5, 30, 4, 30, 1, 2, 3, 2, 30, 2, 2, 5, 2, 1, 2, 7, 6, 2, 3, 3, 2, 3, 15, 2, 1, 3, 10, 5, 4, 3, 30, 2, 2, 10, 3, 30, 3, 1, 2, 5, 5, 5, 1, 3, 1, 1, 2, 2, 7, 30, 2, 2, 3, 30, 5, 3, 3, 6, 4, 2, 30, 5, 1, 1, 3, 2, 1, 3, 3, 2, 1, 5, 1, 1, 4, 2, 2, 2, 2, 21, 1, 3, 5, 3, 4, 4, 2, 3, 1, 1, 1, 1, 2, 5, 5, 1, 5, 3, 1, 3, 4, 4, 1, 3, 5, 3, 1, 2, 30, 30, 1, 2, 4, 7, 1, 1, 4, 1, 4, 3, 30, 3, 7, 1, 2, 1, 1, 4, 30, 2, 2, 30, 3, 1, 2, 1, 2, 1, 20, 2, 29, 2, 2, 2, 5, 1, 2, 3, 3, 1, 32, 3, 2, 2, 3, 2, 2, 1, 4, 1, 1, 4, 1, 4, 30, 1, 2, 2, 2, 2, 1, 3, 28, 5, 2, 1, 1, 1, 2, 2, 4, 2, 3, 3, 20, 30, 1, 30, 30, 30, 2, 5, 30, 30, 2, 2, 3, 1, 4, 1, 30, 14, 30, 3, 3, 1, 2, 14, 1, 2, 7, 2, 4, 1, 2, 3, 1, 4, 4, 1, 2, 4, 30, 1, 2, 14, 1, 2, 2, 1, 10, 30, 3, 1, 30, 1, 2, 5, 30, 30, 3, 6, 2, 3, 2, 2, 2, 1, 3, 3, 30, 2, 3, 30, 2, 5, 2, 1, 30, 3, 2, 3, 2, 4, 1, 30, 1, 30, 2, 2, 2, 1, 19, 2, 2, 2, 3, 1, 4, 30, 3, 4, 1, 3, 3, 30, 1, 1, 3, 1, 1, 1, 1, 1, 1, 2, 2, 3, 4, 2, 3, 1, 3, 2, 5, 3, 2, 4, 30, 3, 2, 29, 2, 3, 3, 3, 2, 2, 25, 1, 10, 1, 4, 1, 1, 5, 7, 1, 2, 1, 30, 2, 30, 1, 1, 2, 2, 2, 2, 1, 2, 30, 2, 3, 5, 1, 3, 3, 2, 3, 5, 1, 3, 2, 3, 1, 7, 31, 3, 1, 1, 2, 3, 2, 3, 2, 14, 2, 2, 30, 1, 1, 1, 2, 2, 2, 30, 3, 1, 2, 3, 3, 3, 1, 2, 2, 10, 5, 1, 1, 7, 1, 3, 1, 3, 2, 4, 1, 2, 3, 2, 5, 1, 2, 2, 2, 3, 2, 3, 5, 7, 2, 4, 3, 1, 4, 2, 2, 3, 1, 2, 1, 1, 3, 3, 3, 1, 2, 30, 4, 1, 1, 1, 1, 30, 3, 2, 1, 4, 1, 2, 1, 2, 2, 2, 2, 5, 1, 5, 1, 3, 3, 2, 5, 2, 1, 1, 30, 4, 1, 2, 3, 1, 1, 2, 5, 7, 1, 2, 3, 7, 1, 1, 1, 3, 2, 30, 5, 6, 30, 2, 30, 3, 2, 30, 30, 2, 4, 1, 1, 2, 4, 30, 2, 6, 2, 2, 3, 3, 2, 30, 4, 2, 3, 30, 2, 2, 3, 4, 1, 30, 2, 7, 3, 1, 4, 1, 30, 1, 3, 4, 3, 14, 5, 2, 2, 3, 3, 3, 3, 10, 1, 2, 2, 3, 3, 2, 2, 3, 2, 3, 2, 2, 4, 4, 1, 5, 3, 2, 4, 2, 3, 1, 2, 2, 3, 30, 2, 1, 2, 1, 30, 1, 3, 1, 1, 3, 1, 2, 30, 3, 2, 1, 3, 4, 1, 1, 14, 3, 1, 2, 5, 2, 3, 7, 1, 1, 2, 30, 2, 5, 3, 1, 5, 1, 1, 2, 4, 1, 1, 2, 7, 2, 30, 10, 30, 3, 2, 9, 30, 1, 2, 2, 1, 2, 2, 2, 3, 1, 2, 5, 2, 5, 4, 3, 1, 3, 3, 1, 14, 3, 20, 2, 3, 2, 2, 2, 30, 1, 3, 1, 4, 2, 30, 2, 2, 2, 3, 2, 1, 3, 3, 4, 1, 30, 2, 1, 3, 30, 2, 2, 2, 3, 30, 2, 2, 1, 7, 2, 30, 30, 1, 1, 1, 3, 3, 1, 2, 2, 5, 2, 3, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 5, 3, 3, 2, 1, 5, 30, 2, 25, 30, 1, 5, 2, 3, 1, 3, 1, 1, 7, 1, 3, 25, 7, 1, 4, 1, 1, 3, 1, 3, 7, 1, 1, 2, 3, 3, 3, 2, 2, 1, 4, 1, 14, 28, 2, 2, 2, 8, 1, 3, 3, 2, 26, 2, 3, 1, 3, 1, 4, 3, 3, 3, 2, 3, 2, 1, 6, 1, 2, 3, 4, 7, 1, 1, 3, 1, 2, 4, 2, 3, 2, 6, 2, 1, 2, 2, 1, 3, 3, 3, 2, 2, 7, 1, 4, 1, 2, 6, 2, 3, 1, 5, 3, 7, 10, 2, 2, 3, 2, 2, 2, 1, 1, 2, 2, 2, 3, 1, 1, 4, 5, 2, 1, 2, 3, 1, 2, 1, 2, 2, 3, 3, 2, 2, 3, 2, 14, 1, 9, 3, 2, 1, 1, 1, 1, 2, 3, 1, 5, 1, 3, 1, 3, 3, 3, 2, 2, 2, 1, 1, 2, 3, 2, 3, 5, 30, 30, 3, 1, 31, 30, 1, 1, 2, 4, 1, 10, 4, 1, 2, 30, 3, 3, 2, 2, 3, 4, 5, 2, 5, 5, 3, 4, 1, 1, 2, 3, 2, 4, 7, 6, 2, 2, 2, 1, 2, 7, 3, 2, 1, 1, 2, 14, 3, 1, 3, 3, 5, 7, 2, 4, 2, 2, 14, 20, 6, 1, 3, 5, 1, 2, 3, 2, 8, 2, 3, 3, 1, 1, 1, 2, 1, 3, 5, 28, 5, 2, 2, 2, 1, 4, 2, 1, 2, 3, 2, 1, 1, 7, 2, 2, 5, 5, 7, 2, 2, 30, 3, 3, 1, 2, 3, 6, 4, 5, 7, 1, 1, 2, 5, 4, 5, 4, 4, 3, 4, 30, 2, 1, 2, 2, 2, 3, 2, 1, 3, 30, 1, 2, 5, 1, 1, 3, 1, 2, 1, 2, 1, 2, 1, 30, 5, 3, 1, 1, 1, 3, 1, 1, 4, 3, 4, 1, 3, 2, 1, 4, 1, 1, 2, 2, 1, 3, 2, 3, 3, 30, 5, 2, 1, 3, 2, 1, 3, 5, 4, 1, 2, 4, 21, 7, 5, 5, 1, 3, 1, 3, 30, 20, 5, 3, 2, 1, 2, 3, 3, 3, 3, 2, 2, 6, 2, 3, 2, 1, 5, 30, 10, 2, 2, 7, 30, 1, 5, 5, 2, 1, 30, 30, 16, 4, 30, 2, 2, 4, 2, 6, 3, 2, 7, 2, 4, 2, 3, 1, 30, 1, 1, 1, 2, 3, 4, 4, 30, 1, 3, 5, 1, 30, 1, 6, 2, 4, 1, 5, 2, 1, 7, 10, 5, 1, 3, 2, 7, 9, 30, 1, 2, 2, 4, 6, 5, 2, 1, 1, 4, 2, 5, 1, 1, 3, 1, 3, 4, 2, 2, 2, 2, 2, 2, 30, 1, 15, 30, 2, 3, 3, 30, 1, 2, 2, 6, 2, 3, 1, 2, 1, 2, 1, 7, 2, 3, 2, 1, 7, 20, 1, 2, 2, 2, 1, 5, 2, 1, 1, 2, 1, 5, 5, 1, 1, 4, 4, 1, 2, 1, 5, 30, 2, 3, 2, 5, 4, 2, 2, 4, 1, 1, 15, 5, 1, 4, 3, 30, 2, 1, 4, 7, 3, 6, 7, 3, 3, 1, 1, 3, 3, 7, 10, 5, 3, 7, 1, 2, 10, 2, 2, 4, 2, 2, 30, 3, 2, 1, 4, 3, 1, 3, 1, 2, 2, 5, 2, 10, 4, 4, 2, 5, 4, 1, 1, 2, 1, 30, 2, 3, 3, 1, 4, 2, 5, 4, 2, 1, 2, 2, 2, 3, 3, 2, 3, 4, 2, 1, 4, 4, 3, 3, 4, 1, 4, 2, 3, 1, 5, 4, 2, 1, 1, 7, 3, 1, 1, 2, 11, 2, 7, 2, 30, 4, 14, 30, 30, 1, 30, 3, 2, 8, 2, 1, 2, 1, 1, 2, 7, 30, 3, 3, 4, 1, 1, 2, 20, 10, 3, 2, 21, 2, 3, 2, 5, 3, 3, 30, 2, 4, 1, 2, 3, 5, 2, 4, 2, 1, 1, 2, 5, 2, 3, 2, 1, 20, 2, 21, 4, 1, 1, 2, 2, 17, 3, 3, 4, 4, 2, 2, 1, 30, 3, 2, 2, 1, 2, 7, 1, 2, 5, 2, 2, 3, 2, 1, 2, 4, 1, 3, 5, 14, 4, 4, 2, 4, 3, 4, 8, 5, 2, 2, 10, 3, 31, 4, 2, 3, 1, 30, 2, 30, 2, 1, 1, 7, 1, 1, 1, 2, 4, 3, 2, 5, 4, 2, 6, 3, 5, 4, 1, 5, 4, 1, 2, 1, 20, 4, 2, 5, 2, 2, 14, 7, 31, 5, 1, 2, 4, 2, 3, 2, 3, 3, 3, 7, 3, 1, 2, 5, 30, 30, 3, 2, 4, 2, 5, 2, 7, 3, 29, 4, 2, 2, 5, 2, 5, 1, 3, 5, 2, 5, 2, 3, 2, 2, 4, 30, 2, 3, 3, 6, 2, 3, 3, 2, 2, 2, 3, 3, 4, 2, 2, 2, 1, 5, 4, 1, 1, 30, 1, 2, 1, 4, 4, 3, 2, 30, 4, 5, 1, 1, 3, 30, 1, 2, 2, 5, 2, 3, 3, 7, 1, 2, 1, 1, 2, 1, 3, 1, 20, 3, 4, 3, 20, 3, 2, 1, 2, 2, 2, 1, 2, 30, 1, 8, 3, 1, 2, 5, 3, 2, 1, 10, 30, 1, 2, 2, 1, 30, 3, 5, 2, 2, 1, 1, 7, 1, 2, 1, 1, 1, 1, 3, 1, 2, 3, 1, 3, 3, 2, 2, 4, 1, 14, 30, 2, 7, 7, 3, 27, 31, 1, 3, 4, 7, 2, 3, 1, 4, 7, 2, 5, 4, 9, 3, 7, 3, 8, 2, 1, 1, 1, 1, 1, 28, 7, 7, 2, 21, 2, 3, 2, 1, 3, 1, 12, 5, 1, 2, 2, 2, 2, 4, 2, 1, 1, 30, 1, 2, 3, 30, 2, 6, 3, 10, 1, 2, 2, 3, 1, 5, 5, 3, 1, 1, 5, 5, 2, 3, 4, 2, 3, 2, 3, 3, 5, 3, 2, 2, 3, 1, 2, 3, 3, 4, 7, 2, 1, 14, 3, 1, 30, 2, 3, 3, 31, 1, 2, 3, 30, 1, 7, 2, 5, 1, 5, 25, 30, 3, 2, 2, 4, 1, 2, 1, 2, 2, 30, 30, 2, 2, 30, 30, 4, 3, 2, 2, 3, 1, 3, 4, 2, 2, 1, 2, 2, 4, 1, 2, 6, 3, 4, 4, 3, 2, 4, 1, 7, 2, 1, 8, 3, 26, 2, 1, 2, 1, 3, 3, 10, 2, 1, 7, 2, 1, 2, 2, 2, 2, 6, 4, 2, 4, 4, 3, 4, 3, 3, 1, 2, 2, 2, 3, 4, 5, 1, 3, 6, 30, 2, 2, 2, 1, 3, 1, 10, 2, 1, 1, 4, 4, 2, 2, 4, 14, 2, 4, 15, 2, 4, 3, 1, 3, 4, 3, 7, 3, 28, 30, 30, 5, 1, 3, 2, 1, 2, 2, 15, 2, 1, 5, 2, 2, 2, 2, 2, 1, 5, 1, 1, 7, 2, 1, 1, 3, 1, 30, 3, 1, 3, 1, 4, 7, 3, 15, 8, 7, 2, 5, 29, 1, 4, 30, 2, 3, 4, 2, 3, 3, 2, 2, 1, 3, 3, 4, 1, 4, 8, 3, 7, 3, 8, 3, 1, 6, 3, 4, 2, 2, 6, 3, 3, 3, 1, 7, 1, 3, 1, 1, 2, 3, 1, 3, 4, 1, 3, 6, 10, 30, 1, 2, 2, 3, 9, 3, 2, 1, 2, 2, 1, 1, 2, 2, 2, 6, 1, 5, 5, 3, 2, 2, 2, 1, 30, 5, 1, 5, 2, 3, 4, 25, 7, 3, 1, 4, 1, 4, 4, 2, 1, 1, 2, 1, 1, 5, 4, 1, 5, 30, 3, 7, 3, 1, 2, 1, 3, 4, 1, 3, 2, 2, 3, 1, 1, 2, 1, 7, 4, 15, 4, 4, 3, 4, 3, 2, 30, 1, 3, 2, 4, 1, 2, 2, 3, 2, 3, 3, 2, 14, 5, 2, 2, 5, 5, 2, 4, 2, 30, 20, 3, 1, 2, 1, 14, 1, 2, 1, 3, 2, 30, 2, 2, 5, 2, 4, 5, 3, 3, 7, 6, 7, 3, 2, 1, 1, 4, 2, 2, 4, 3, 1, 1, 6, 8, 1, 1, 3, 2, 2, 4, 1, 2, 1, 2, 2, 1, 2, 1, 3, 4, 1, 2, 2, 2, 1, 30, 3, 1, 1, 2, 2, 1, 1, 3, 2, 2, 1, 5, 1, 1, 5, 30, 1, 3, 1, 10, 4, 2, 1, 3, 1, 2, 4, 5, 2, 2, 2, 3, 1, 3, 1, 3, 2, 2, 1, 2, 3, 1, 2, 2, 1, 1, 7, 1, 2, 4, 2, 2, 2, 2, 30, 1, 4, 1, 1, 2, 2, 2, 2, 4, 2, 7, 1, 3, 5, 3, 3, 2, 3, 1, 3, 7, 5, 2, 2, 30, 3, 30, 5, 3, 3, 30, 2, 30, 4, 5, 2, 13, 1, 2, 2, 1, 3, 3, 5, 3, 2, 2, 2, 3, 4, 1, 30, 30, 1, 2, 1, 3, 2, 1, 1, 3, 28, 1, 2, 1, 1, 1, 1, 2, 5, 3, 31, 30, 3, 2, 3, 2, 3, 30, 1, 1, 3, 4, 3, 4, 4, 2, 2, 2, 3, 9, 2, 6, 3, 2, 2, 5, 3, 3, 1, 3, 3, 6, 30, 3, 4, 7, 3, 2, 1, 1, 2, 3, 2, 7, 5, 2, 1, 2, 1, 2, 1, 5, 2, 7, 2, 2, 1, 3, 3, 4, 3, 3, 30, 4, 12, 30, 2, 5, 2, 4, 5, 3, 3, 2, 3, 5, 28, 2, 3, 1, 7, 1, 3, 1, 30, 11, 3, 2, 5, 4, 1, 3, 1, 1, 5, 2, 4, 1, 30, 2, 3, 1, 4, 5, 5, 1, 1, 1, 2, 1, 3, 1, 1, 10, 3, 30, 5, 2, 1, 30, 2, 2, 1, 3, 5, 1, 1, 3, 2, 3, 2, 5, 3, 1, 1, 5, 2, 2, 1, 2, 1, 6, 3, 2, 2, 2, 5, 2, 5, 6, 30, 1, 1, 14, 8, 2, 1, 13, 2, 3, 14, 1, 3, 4, 1, 30, 1, 31, 30, 4, 1, 31, 31, 31, 2, 30, 25, 1, 2, 2, 1, 5, 30, 3, 3, 2, 3, 3, 1, 1, 2, 30, 1, 10, 2, 1, 2, 3, 2, 3, 3, 3, 3, 3, 10, 3, 1, 5, 1, 3, 1, 2, 1, 5, 3, 2, 1, 3, 1, 1, 1, 3, 5, 1, 5, 1, 1, 5, 1, 2, 2, 3, 4, 2, 1, 4, 3, 2, 30, 4, 2, 3, 1, 2, 2, 3, 2, 2, 5, 1, 3, 3, 3, 2, 3, 20, 3, 1, 2, 6, 5, 1, 2, 1, 1, 1, 1, 1, 30, 2, 1, 5, 1, 1, 1, 5, 4, 2, 1, 2, 1, 4, 4, 3, 1, 30, 4, 2, 10, 3, 2, 2, 1, 1, 1, 4, 1, 20, 2, 2, 2, 3, 3, 2, 2, 7, 2, 2, 1, 3, 30, 2, 2, 2, 1, 12, 30, 2, 4, 1, 3, 4, 31, 31, 31, 4, 2, 1, 1, 1, 2, 30, 1, 4, 2, 2, 1, 1, 1, 5, 2, 1, 2, 5, 4, 1, 2, 2, 1, 1, 2, 2, 2, 3, 2, 7, 2, 2, 4, 2, 5, 1, 7, 1, 5, 1, 3, 1, 2, 2, 21, 2, 15, 3, 2, 2, 2, 4, 7, 30, 30, 3, 14, 4, 3, 2, 4, 2, 1, 1, 1, 2, 10, 3, 6, 1, 1, 30, 1, 3, 5, 5, 2, 5, 2, 1, 1, 5, 6, 5, 2, 28, 5, 3, 4, 2, 1, 1, 1, 1, 2, 2, 3, 3, 5, 3, 2, 3, 2, 4, 4, 30, 4, 4, 15, 3, 5, 14, 2, 2, 3, 1, 15, 7, 4, 2, 3, 4, 3, 2, 1, 2, 5, 2, 3, 4, 7, 4, 20, 30, 1, 2, 1, 30, 1, 1, 1, 30, 2, 7, 3, 5, 15, 6, 6, 2, 4, 1, 10, 3, 4, 2, 3, 2, 2, 2, 2, 3, 30, 1, 7, 3, 1, 28, 1, 1, 3, 2, 1, 1, 2, 1, 3, 1, 2, 2, 3, 30, 7, 3, 4, 2, 4, 2, 2, 3, 2, 2, 2, 30, 1, 28, 30, 30, 30, 30, 30, 2, 1, 1, 3, 3, 1, 5, 1, 30, 3, 2, 3, 3, 2, 4, 2, 2, 2, 14, 3, 22, 16, 1, 3, 1, 2, 5, 2, 6, 14, 7, 2, 5, 2, 6, 2, 1, 3, 2, 5, 1, 1, 2, 5, 1, 2, 1, 1, 3, 2, 3, 1, 3, 1, 3, 30, 7, 7, 1, 2, 1, 1, 7, 30, 1, 12, 30, 3, 3, 4, 2, 3, 30, 3, 23, 3, 1, 3, 1, 1, 3, 3, 2, 2, 1, 2, 30, 1, 13, 2, 2, 7, 5, 3, 5, 2, 1, 5, 1, 1, 1, 1, 1, 30, 3, 4, 1, 3, 2, 3, 3, 3, 1, 2, 3, 31, 30, 2, 1, 2, 3, 1, 3, 9, 1, 4, 1, 1, 6, 3, 2, 1, 4, 1, 7, 5, 2, 28, 2, 1, 1, 1, 31, 7, 3, 1, 2, 4, 7, 1, 2, 4, 28, 4, 2, 7, 2, 7, 3, 3, 1, 2, 3, 7, 1, 5, 6, 5, 4, 1, 2, 3, 4, 2, 1, 3, 4, 2, 2, 1, 1, 3, 3, 1, 4, 1, 1, 1, 7, 1, 4, 1, 5, 2, 1, 2, 14, 4, 1, 2, 2, 1, 1, 2, 3, 2, 1, 7, 2, 2, 20, 7, 2, 3, 8, 2, 2, 3, 3, 4, 3, 1, 5, 3, 4, 2, 1, 3, 1, 1, 1, 3, 2, 2, 1, 1, 6, 1, 1, 2, 30, 2, 25, 2, 5, 2, 4, 3, 7, 7, 7, 1, 2, 1, 4, 3, 1, 1, 6, 1, 1, 1, 1, 1, 5, 1, 1, 5, 1, 3, 2, 6, 3, 7, 2, 2, 1, 7, 3, 1, 1, 2, 1, 2, 2, 15, 3, 7, 4, 2, 2, 3, 5, 9, 30, 4, 4, 2, 1, 3, 2, 3, 5, 4, 1, 4, 3, 2, 3, 2, 15, 3, 7, 3, 2, 3, 2, 1, 8, 2, 2, 2, 2, 1, 2, 20, 3, 5, 2, 3, 3, 2, 1, 3, 14, 7, 5, 2, 1, 20, 1, 2, 5, 2, 4, 2, 2, 2, 7, 2, 4, 1, 5, 3, 3, 3, 5, 7, 3, 1, 1, 3, 2, 10, 2, 1, 2, 4, 4, 1, 4, 4, 5, 2, 1, 2, 30, 5, 6, 30, 1, 1, 4, 8, 1, 2, 2, 2, 1, 3, 2, 3, 3, 7, 1, 2, 15, 2, 3, 2, 2, 1, 2, 7, 7, 1, 3, 2, 3, 14, 3, 1, 1, 5, 5, 3, 3, 30, 1, 3, 1, 2, 7, 2, 2, 1, 1, 1, 2, 4, 1, 2, 30, 3, 10, 4, 3, 2, 1, 30, 2, 4, 2, 2, 2, 1, 1, 28, 2, 12, 7, 1, 22, 1, 4, 2, 2, 4, 3, 1, 2, 2, 28, 2, 1, 1, 3, 2, 3, 2, 5, 1, 3, 5, 6, 3, 5, 2, 4, 5, 2, 1, 2, 3, 2, 1, 4, 4, 21, 3, 3, 2, 1, 5, 3, 1, 5, 1, 2, 1, 3, 3, 2, 2, 5, 30, 2, 1, 1, 20, 2, 1, 1, 2, 1, 7, 30, 1, 2, 1, 2, 2, 3, 5, 4, 30, 4, 2, 2, 2, 2, 4, 5, 3, 2, 1, 5, 30, 6, 5, 5, 2, 1, 5, 1, 2, 3, 5, 5, 2, 3, 2, 1, 5, 1, 3, 4, 3, 2, 1, 30, 1, 29, 2, 30, 4, 3, 1, 1, 1, 6, 3, 1, 3, 1, 30, 2, 6, 2, 2, 2, 1, 3, 1, 30, 4, 2, 3, 2, 5, 4, 3, 7, 1, 1, 1, 7, 5, 4, 2, 4, 3, 1, 2, 1, 3, 1, 1, 4, 14, 3, 3, 1, 2, 2, 1, 3, 1, 1, 3, 2, 14, 3, 3, 4, 4, 2, 30, 2, 1, 1, 6, 5, 2, 2, 35, 3, 3, 1, 3, 1, 3, 7, 1, 5, 1, 2, 3, 13, 30, 20, 28, 4, 7, 5, 30, 1, 2, 3, 1, 30, 4, 2, 30, 2, 31, 5, 3, 3, 1, 2, 1, 2, 3, 2, 5, 5, 1, 2, 2, 1, 7, 1, 1, 1, 2, 6, 14, 30, 4, 1, 28, 3, 5, 3, 4, 3, 2, 1, 10, 1, 3, 2, 2, 1, 4, 2, 30, 2, 5, 4, 14, 4, 1, 3, 6, 2, 2, 3, 4, 2, 5, 9, 1, 3, 2, 5, 1, 1, 2, 2, 30, 3, 4, 3, 1, 1, 5, 1, 30, 1, 14, 2, 30, 1, 3, 4, 30, 2, 30, 2, 1, 3, 10, 1, 1, 7, 2, 1, 4, 2, 2, 2, 2, 30, 30, 1, 2, 28, 2, 2, 2, 3, 4, 2, 3, 2, 2, 2, 1, 14, 15, 4, 2, 2, 1, 2, 14, 2, 1, 2, 2, 4, 14, 1, 1, 2, 2, 1, 4, 30, 7, 3, 2, 2, 10, 7, 2, 1, 2, 1, 21, 1, 5, 1, 3, 3, 30, 1, 3, 31, 1, 30, 3, 5, 2, 1, 1, 7, 2, 2, 30, 4, 3, 30, 1, 2, 31, 2, 3, 30, 2, 3, 3, 2, 2, 30, 7, 2, 5, 1, 1, 2, 7, 2, 2, 2, 1, 1, 3, 4, 3, 2, 3, 2, 3, 2, 2, 14, 1, 5, 7, 6, 1, 30, 3, 3, 6, 2, 15, 1, 1, 1, 2, 2, 4, 5, 2, 3, 1, 4, 2, 7, 1, 3, 2, 3, 2, 4, 2, 2, 4, 10, 4, 5, 2, 4, 2, 2, 1, 1, 1, 31, 5, 28, 3, 1, 2, 6, 4, 3, 4, 2, 2, 4, 4, 5, 3, 2, 2, 1, 2, 2, 2, 1, 2, 3, 1, 3, 3, 1, 3, 2, 3, 2, 2, 3, 1, 4, 2, 1, 1, 2, 2, 2, 3, 6, 30, 4, 1, 2, 2, 12, 1, 8, 1, 25, 1, 3, 2, 2, 1, 2, 7, 2, 15, 2, 3, 1, 30, 1, 2, 1, 6, 4, 30, 1, 30, 2, 1, 14, 1, 1, 5, 2, 31, 2, 1, 2, 4, 6, 3, 2, 3, 4, 1, 1, 3, 3, 4, 1, 5, 3, 3, 5, 2, 4, 1, 3, 2, 2, 2, 2, 1, 30, 3, 2, 5, 2, 3, 30, 3, 3, 3, 7, 2, 3, 3, 1, 3, 1, 1, 1, 3, 5, 7, 1, 2, 1, 3, 2, 7, 1, 3, 1, 2, 1, 1, 1, 3, 1, 3, 7, 3, 7, 3, 7, 1, 30, 1, 1, 1, 2, 3, 4, 2, 1, 7, 3, 4, 2, 3, 2, 2, 1, 2, 2, 30, 2, 3, 1, 3, 2, 20, 2, 4, 30, 30, 1, 3, 4, 4, 3, 3, 1, 31, 2, 2, 3, 1, 3, 2, 5, 4, 15, 2, 30, 2, 5, 3, 20, 2, 2, 1, 30, 2, 2, 5, 2, 2, 5, 5, 1, 1, 1, 2, 2, 2, 1, 2, 5, 2, 7, 1, 5, 1, 2, 1, 3, 3, 2, 1, 3, 1, 3, 4, 1, 3, 30, 3, 1, 2, 3, 1, 2, 1, 7, 2, 3, 2, 29, 30, 5, 6, 3, 10, 3, 3, 1, 30, 1, 2, 2, 3, 2, 2, 4, 30, 1, 2, 2, 2, 3, 30, 2, 2, 2, 7, 2, 5, 30, 1, 1, 30, 3, 1, 1, 10, 31, 1, 30, 5, 4, 1, 5, 1, 30, 1, 2, 2, 30, 1, 2, 1, 4, 2, 2, 1, 2, 3, 7, 1, 7, 2, 5, 2, 3, 2, 21, 1, 1, 5, 2, 2, 1, 1, 1, 1, 1, 4, 2, 2, 2, 30, 5, 2, 4, 30, 3, 4, 1, 30, 1, 4, 30, 30, 6, 3, 3, 1, 2, 4, 2, 1, 3, 1, 6, 7, 2, 5, 2, 3, 2, 1, 1, 6, 2, 2, 1, 2, 3, 2, 2, 5, 2, 1, 4, 2, 4, 3, 2, 3, 2, 2, 3, 2, 3, 2, 4, 3, 7, 2, 1, 3, 1, 2, 4, 2, 1, 2, 2, 3, 31, 1, 1, 3, 2, 7, 3, 1, 2, 2, 1, 2, 1, 7, 1, 2, 3, 3, 3, 10, 3, 3, 2, 2, 2, 26, 1, 30, 12, 1, 2, 4, 2, 1, 7, 1, 2, 2, 1, 1, 3, 2, 4, 2, 1, 3, 6, 1, 1, 3, 1, 3, 3, 2, 1, 1, 1, 2, 3, 8, 3, 3, 5, 2, 1, 4, 1, 14, 30, 3, 2, 5, 6, 2, 3, 1, 2, 30, 2, 3, 4, 1, 2, 3, 4, 2, 1, 2, 7, 3, 2, 1, 2, 6, 1, 3, 2, 7, 14, 2, 1, 1, 3, 4, 5, 6, 3, 5, 2, 4, 2, 20, 30, 3, 1, 1, 2, 6, 2, 3, 7, 2, 8, 2, 1, 2, 1, 1, 2, 2, 2, 21, 3, 3, 5, 3, 28, 1, 7, 5, 1, 10, 3, 2, 1, 2, 14, 1, 2, 3, 3, 30, 30, 2, 3, 3, 3, 2, 1, 4, 2, 2, 10, 10, 1, 3, 2, 2, 20, 3, 2, 2, 30, 4, 8, 3, 3, 5, 2, 3, 30, 3, 3, 5, 2, 2, 1, 1, 1, 3, 1, 1, 3, 1, 3, 4, 1, 2, 14, 30, 3, 1, 7, 2, 3, 2, 1, 28, 2, 1, 1, 2, 3, 5, 3, 2, 3, 2, 6, 1, 2, 7, 3, 5, 3, 2, 15, 5, 28, 4, 7, 1, 2, 1, 1, 2, 3, 1, 3, 1, 3, 3, 30, 10, 4, 1, 3, 28, 30, 4, 4, 3, 3, 4, 28, 1, 3, 2, 1, 2, 7, 2, 3, 12, 1, 5, 1, 1, 2, 1, 6, 3, 4, 6, 1, 3, 1, 4, 3, 2, 1, 2, 2, 1, 3, 3, 3, 1, 1, 18, 1, 1, 3, 3, 2, 4, 4, 1, 2, 1, 3, 30, 5, 4, 2, 5, 3, 3, 2, 6, 5, 2, 2, 3, 31, 5, 1, 1, 2, 14, 3, 10, 3, 21, 2, 3, 2, 3, 1, 7, 2, 4, 1, 1, 3, 30, 2, 4, 1, 7, 3, 2, 4, 4, 20, 4, 7, 2, 2, 2, 1, 1, 1, 1, 3, 1, 2, 2, 5, 3, 4, 4, 2, 6, 7, 5, 4, 2, 1, 1, 1, 2, 1, 3, 3, 1, 13, 3, 3, 1, 2, 2, 30, 7, 2, 31, 2, 5, 4, 2, 4, 5, 7, 3, 1, 2, 4, 2, 2, 25, 2, 3, 2, 6, 3, 2, 1, 2, 2, 2, 5, 3, 3, 5, 7, 3, 1, 30, 3, 2, 1, 2, 4, 1, 2, 7, 3, 3, 2, 3, 3, 15, 2, 1, 2, 3, 1, 2, 2, 3, 3, 3, 1, 5, 5, 5, 4, 13, 2, 3, 5, 3, 1, 30, 7, 1, 2, 30, 14, 5, 5, 1, 1, 2, 3, 1, 2, 30, 1, 3, 2, 2, 1, 30, 2, 30, 1, 3, 5, 30, 3, 1, 2, 4, 1, 2, 5, 1, 3, 2, 5, 2, 1, 3, 2, 2, 25, 4, 5, 3, 7, 2, 14, 2, 5, 1, 2, 2, 1, 1, 1, 1, 1, 3, 2, 3, 22, 2, 2, 3, 5, 4, 7, 1, 2, 2, 2, 4, 2, 3, 30, 5, 2, 4, 2, 2, 2, 2, 1, 3, 3, 30, 2, 2, 8, 4, 2, 3, 3, 1, 1, 1, 2, 3, 4, 2, 2, 4, 2, 1, 2, 7, 7, 4, 2, 30, 30, 3, 1, 2, 2, 2, 6, 2, 3, 3, 2, 15, 6, 5, 30, 3, 2, 3, 24, 14, 30, 2, 1, 3, 2, 2, 30, 3, 1, 2, 1, 1, 3, 4, 1, 2, 10, 1, 1, 2, 3, 1, 2, 1, 1, 1, 2, 3, 2, 2, 10, 2, 2, 2, 3, 1, 3, 2, 3, 4, 10, 1, 2, 4, 7, 7, 3, 2, 3, 5, 5, 3, 3, 3, 1, 2, 5, 3, 31, 2, 2, 1, 3, 2, 2, 2, 4, 5, 1, 10, 2, 3, 2, 1, 1, 2, 3, 3, 3, 1, 1, 1, 1, 2, 1, 2, 28, 1, 2, 3, 2, 1, 2, 2, 20, 2, 3, 30, 2, 3, 1, 1, 3, 2, 3, 3, 2, 2, 1, 1, 1, 21, 3, 3, 6, 2, 2, 1, 3, 4, 4, 3, 1, 3, 5, 1, 3, 2, 1, 7, 2, 1, 2, 30, 3, 3, 5, 3, 1, 7, 2, 1, 2, 1, 1, 5, 30, 2, 1, 9, 2, 1, 2, 3, 5, 3, 3, 8, 1, 2, 3, 30, 2, 1, 2, 2, 30, 1, 2, 2, 7, 30, 6, 2, 3, 2, 7, 6, 6, 5, 1, 30, 2, 2, 3, 4, 4, 2, 7, 1, 1, 1, 5, 7, 2, 1, 3, 2, 2, 2, 2, 30, 2, 2, 2, 1, 3, 10, 2, 2, 1, 1, 2, 3, 2, 1, 4, 1, 4, 4, 3, 3, 2, 2, 1, 1, 2, 2, 2, 1, 6, 1, 1, 7, 30, 1, 26, 2, 1, 14, 5, 2, 5, 2, 1, 1, 2, 1, 3, 1, 1, 2, 1, 1, 1, 3, 1, 1, 1, 1, 1, 2, 30, 2, 4, 3, 2, 1, 4, 2, 1, 2, 3, 4, 1, 1, 2, 2, 2, 1, 3, 2, 1, 3, 2, 30, 2, 30, 30, 3, 3, 1, 2, 3, 1, 1, 2, 3, 3, 1, 4, 7, 2, 2, 30, 1, 30, 1, 2, 5, 2, 2, 5, 2, 4, 3, 2, 2, 1, 1, 3, 2, 4, 2, 2, 1, 2, 3, 3, 3, 1, 2, 30, 6, 2, 2, 4, 3, 2, 30, 1, 3, 1, 2, 30, 3, 30, 3, 2, 1, 1, 1, 2, 1, 1, 2, 3, 3, 7, 2, 1, 4, 4, 2, 2, 3, 6, 2, 3, 7, 30, 2, 2, 3, 2, 3, 3, 1, 2, 2, 5, 7, 3, 3, 2, 2, 10, 2, 4, 30, 2, 2, 1, 3, 6, 2, 3, 1, 2, 2, 1, 1, 3, 1, 14, 4, 2, 1, 30, 3, 2, 3, 2, 2, 13, 2, 3, 2, 1, 2, 2, 30, 2, 2, 3, 1, 2, 4, 3, 3, 30, 1, 2, 2, 1, 7, 3, 7, 14, 2, 3, 1, 2, 2, 1, 2, 1, 1, 1, 7, 4, 2, 3, 1, 1, 5, 30, 2, 1, 2, 5, 2, 1, 3, 2, 3, 3, 2, 3, 1, 2, 1, 5, 1, 4, 3, 2, 4, 5, 1, 1, 1, 30, 3, 1, 2, 3, 3, 3, 3, 3, 7, 2, 7, 3, 4, 1, 4, 1, 30, 12, 5, 3, 1, 3, 2, 5, 1, 3, 3, 20, 3, 7, 2, 1, 3, 3, 1, 3, 1, 6, 2, 7, 3, 2, 2, 1, 3, 3, 30, 4, 1, 1, 3, 6, 2, 3, 2, 1, 3, 5, 2, 2, 1, 5, 2, 30, 2, 7, 1, 14, 2, 1, 2, 30, 2, 30, 30, 2, 3, 10, 1, 3, 1, 2, 1, 2, 2, 6, 5, 7, 3, 4, 4, 2, 30, 14, 4, 3, 3, 3, 3, 3, 1, 3, 1, 1, 1, 2, 1, 2, 1, 3, 1, 5, 2, 1, 30, 3, 4, 4, 4, 30, 1, 2, 21, 1, 1, 2, 2, 2, 2, 5, 1, 3, 10, 30, 3, 2, 4, 10, 30, 14, 1, 4, 1, 7, 2, 3, 7, 5, 10, 5, 1, 2, 1, 2, 1, 5, 2, 1, 15, 2, 2, 3, 1, 1, 1, 2, 2, 1, 3, 2, 2, 3, 1, 3, 5, 1, 2, 5, 2, 3, 2, 2, 3, 1, 1, 1, 2, 1, 30, 1, 6, 30, 30, 30, 2, 1, 2, 4, 2, 14, 5, 5, 1, 2, 1, 2, 4, 2, 2, 3, 4, 3, 1, 2, 4, 4, 1, 30, 2, 1, 3, 1, 3, 7, 3, 1, 7, 2, 1, 2, 2, 4, 3, 2, 26, 5, 2, 1, 2, 4, 2, 5, 3, 12, 4, 2, 2, 3, 12, 15, 1, 7, 1, 3, 1, 5, 3, 2, 1, 3, 1, 1, 3, 2, 1, 5, 3, 2, 2, 2, 3, 3, 1, 2, 3, 14, 1, 1, 7, 1, 4, 2, 5, 2, 2, 3, 3, 3, 3, 7, 1, 1, 1, 3, 2, 3, 1, 20, 1, 1, 2, 5, 3, 5, 1, 30, 3, 2, 1, 7, 4, 30, 3, 3, 1, 1, 1, 2, 3, 1, 2, 3, 5, 3, 7, 3, 3, 3, 1, 2, 1, 1, 2, 3, 7, 2, 4, 3, 4, 3, 3, 3, 2, 4, 4, 30, 2, 5, 3, 5, 2, 9, 1, 1, 1, 2, 1, 5, 3, 30, 4, 1, 1, 10, 2, 2, 2, 1, 30, 2, 15, 3, 30, 2, 3, 2, 1, 1, 2, 1, 7, 7, 2, 5, 1, 7, 3, 1, 3, 1, 2, 1, 3, 1, 3, 3, 2, 2, 2, 4, 2, 1, 3, 2, 4, 7, 5, 20, 1, 3, 1, 3, 2, 1, 1, 3, 2, 3, 3, 2, 3, 3, 4, 1, 2, 1, 1, 1, 2, 2, 2, 30, 30, 1, 2, 2, 3, 30, 28, 1, 28, 1, 2, 2, 1, 2, 1, 3, 5, 7, 1, 4, 30, 30, 1, 2, 30, 3, 1, 3, 6, 5, 2, 2, 2, 2, 2, 2, 4, 1, 2, 30, 1, 3, 5, 3, 1, 2, 3, 3, 1, 1, 2, 5, 6, 1, 2, 1, 4, 2, 2, 2, 1, 5, 3, 7, 1, 2, 2, 2, 2, 3, 2, 1, 2, 2, 2, 7, 1, 1, 5, 3, 1, 3, 30, 6, 1, 3, 1, 9, 3, 3, 3, 2, 3, 3, 5, 1, 1, 2, 4, 2, 30, 5, 3, 2, 2, 3, 3, 5, 1, 3, 1, 7, 2, 2, 4, 30, 1, 2, 1, 1, 2, 2, 5, 1, 2, 2, 5, 3, 10, 2, 2, 1, 1, 3, 1, 1, 1, 1, 5, 3, 3, 3, 2, 1, 1, 4, 3, 1, 30, 6, 3, 3, 2, 7, 1, 1, 30, 5, 1, 4, 5, 3, 3, 2, 2, 3, 3, 10, 2, 1, 1, 1, 1, 1, 4, 1, 2, 1, 2, 2, 2, 1, 1, 3, 1, 2, 4, 3, 3, 2, 1, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 4, 2, 3, 30, 1, 2, 1, 2, 14, 16, 1, 7, 4, 2, 5, 1, 6, 2, 3, 1, 1, 1, 30, 2, 2, 7, 2, 2, 6, 7, 1, 1, 2, 1, 2, 2, 2, 1, 3, 4, 2, 5, 3, 2, 7, 2, 2, 1, 1, 1, 2, 5, 2, 5, 5, 8, 1, 1, 4, 3, 2, 3, 2, 3, 14, 14, 2, 10, 1, 2, 2, 2, 2, 2, 3, 7, 30, 2, 4, 2, 2, 2, 3, 1, 4, 4, 1, 2, 2, 3, 3, 1, 4, 1, 1, 1, 4, 2, 7, 4, 30, 3, 3, 2, 4, 4, 5, 30, 3, 5, 2, 2, 1, 1, 4, 1, 1, 2, 2, 4, 2, 5, 3, 4, 7, 2, 1, 2, 1, 2, 30, 2, 2, 2, 2, 2, 2, 1, 5, 1, 7, 3, 1, 2, 2, 1, 1, 2, 1, 3, 1, 3, 5, 3, 1, 1, 1, 2, 30, 2, 3, 1, 1, 2, 4, 6, 2, 1, 6, 1, 1, 2, 3, 2, 2, 4, 14, 1, 3, 1, 3, 2, 2, 7, 2, 3, 2, 1, 2, 30, 1, 30, 3, 2, 4, 1, 7, 30, 1, 3, 4, 2, 2, 3, 30, 2, 1, 3, 4, 4, 3, 2, 2, 3, 4, 2, 1, 2, 2, 2, 2, 3, 5, 2, 2, 5, 7, 5, 2, 6, 2, 2, 4, 2, 4, 7, 2, 1, 1, 2, 3, 30, 3, 2, 3, 3, 2, 2, 7, 1, 1, 1, 30, 2, 2, 2, 2, 3, 5, 2, 3, 4, 3, 2, 5, 1, 3, 3, 4, 5, 3, 7, 2, 5, 3, 1, 1, 2, 3, 3, 3, 4, 2, 2, 2, 2, 2, 1, 1, 2, 1, 3, 30, 7, 1, 1, 5, 2, 7, 3, 5, 1, 2, 3, 2, 3, 2, 2, 3, 3, 3, 7, 2, 3, 3, 4, 31, 3, 1, 1, 3, 1, 1, 2, 1, 4, 3, 2, 30, 2, 2, 1, 4, 30, 1, 30, 12, 5, 3, 1, 2, 4, 3, 1, 3, 3, 5, 3, 3, 3, 3, 2, 3, 30, 2, 15, 4, 2, 1, 14, 3, 1, 3, 3, 7, 3, 1, 2, 10, 1, 3, 2, 1, 7, 2, 5, 5, 1, 7, 3, 30, 3, 30, 1, 25, 2, 1, 2, 2, 2, 7, 4, 2, 2, 1, 3, 2, 1, 3, 2, 11, 2, 2, 3, 1, 3, 5, 2, 2, 7, 2, 30, 3, 7, 2, 1, 2, 1, 1, 1, 1, 4, 2, 2, 1, 3, 1, 3, 4, 3, 3, 4, 18, 2, 3, 5, 30, 4, 7, 3, 1, 6, 4, 2, 28, 2, 2, 3, 1, 2, 1, 2, 5, 2, 2, 4, 2, 2, 4, 2, 6, 2, 1, 2, 2, 3, 2, 2, 4, 2, 2, 1, 2, 2, 3, 4, 1, 2, 1, 7, 1, 4, 1, 5, 5, 2, 3, 4, 1, 2, 21, 3, 2, 3, 3, 1, 3, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 5, 2, 3, 3, 4, 3, 1, 2, 2, 2, 1, 2, 2, 30, 30, 30, 30, 3, 5, 3, 1, 30, 4, 7, 3, 4, 4, 2, 1, 3, 1, 3, 1, 5, 30, 5, 1, 1, 7, 2, 2, 1, 3, 1, 1, 2, 1, 30, 30, 2, 2, 1, 3, 1, 5, 1, 4, 2, 2, 1, 5, 7, 2, 2, 2, 6, 2, 3, 2, 2, 1, 15, 3, 4, 2, 1, 2, 2, 3, 3, 2, 1, 2, 3, 1, 5, 7, 1, 2, 2, 2, 3, 2, 1, 4, 30, 2, 1, 2, 1, 7, 2, 1, 2, 4, 2, 2, 5, 2, 3, 2, 5, 2, 3, 30, 2, 2, 5, 1, 4, 21, 14, 2, 3, 1, 1, 2, 2, 2, 5, 30, 1, 1, 4, 4, 3, 1, 1, 3, 3, 1, 14, 3, 5, 2, 5, 2, 1, 2, 7, 4, 4, 1, 2, 1, 1, 30, 1, 3, 4, 2, 2, 3, 2, 1, 3, 4, 2, 1, 3, 3, 1, 2, 30, 7, 3, 3, 3, 2, 1, 2, 1, 8, 1, 3, 2, 1, 3, 2, 3, 5, 6, 2, 3, 2, 2, 1, 3, 3, 4, 2, 2, 5, 1, 2, 2, 30, 30, 30, 3, 30, 1, 3, 4, 1, 3, 2, 3, 1, 2, 2, 3, 1, 3, 2, 7, 1, 2, 3, 2, 1, 3, 3, 3, 2, 5, 2, 6, 1, 4, 1, 2, 30, 1, 2, 1, 5, 2, 2, 1, 2, 1, 30, 1, 1, 2, 2, 30, 1, 4, 4, 1, 2, 1, 1, 2, 5, 1, 4, 3, 2, 3, 1, 30, 2, 7, 2, 3, 1, 2, 1, 5, 4, 15, 2, 1, 2, 3, 6, 2, 2, 3, 5, 2, 2, 2, 1, 1, 1, 15, 3, 30, 1, 1, 2, 3, 28, 7, 1, 1, 2, 1, 30, 1, 3, 7, 30, 6, 3, 3, 3, 2, 30, 2, 1, 2, 11, 1, 3, 2, 2, 2, 2, 30, 1, 2, 2, 1, 3, 2, 4, 2, 30, 3, 30, 30, 4, 1, 1, 3, 1, 3, 2, 20, 1, 30, 4, 1, 30, 2, 2, 3, 4, 30, 3, 5, 1, 3, 4, 3, 3, 1, 2, 2, 30, 1, 3, 1, 3, 2, 30, 1, 2, 2, 30, 1, 15, 3, 2, 1, 1, 3, 3, 30, 1, 2, 4, 3, 28, 2, 30, 4, 1, 3, 2, 15, 3, 2, 4, 2, 2, 1, 3, 1, 2, 7, 2, 2, 1, 2, 2, 2, 30, 3, 1, 3, 3, 2, 1, 1, 7, 1, 8, 2, 3, 30, 3, 1, 30, 4, 2, 4, 2, 2, 2, 3, 1, 3, 1, 1, 2, 1, 1, 30, 15, 30, 2, 2, 5, 3, 3, 5, 2, 1, 3, 7, 3, 2, 1, 30, 30, 1, 30, 5, 1, 1, 20, 30, 1, 3, 1, 3, 2, 2, 10, 3, 9, 4, 30, 30, 2, 1, 4, 30, 2, 1, 4, 1, 30, 2, 1, 1, 30, 1, 7, 2, 2, 4, 30, 2, 6, 2, 1, 1, 4, 1, 3, 30, 3, 3, 1, 4, 5, 1, 5, 2, 1, 2, 2, 30, 2, 4, 10, 1, 3, 4, 2, 2, 2, 3, 25, 5, 2, 2, 3, 2, 1, 1, 1, 4, 2, 2, 2, 30, 2, 1, 2, 2, 4, 3, 1, 2, 1, 2, 1, 2, 3, 3, 2, 31, 2, 5, 5, 3, 2, 2, 3, 1, 5, 3, 1, 2, 30, 2, 2, 1, 2, 3, 1, 2, 2, 2, 5, 4, 1, 1, 3, 1, 1, 3, 1, 2, 7, 2, 1, 3, 1, 20, 2, 2, 1, 2, 2, 3, 1, 14, 1, 2, 4, 3, 2, 7, 1, 10, 1, 2, 2, 2, 3, 1, 2, 4, 7, 4, 4, 7, 1, 5, 2, 3, 3, 1, 2, 2, 1, 4, 1, 2, 3, 1, 10, 1, 2, 1, 1, 3, 2, 3, 30, 3, 2, 2, 30, 1, 30, 1, 1, 1, 1, 31, 2, 1, 4, 4, 4, 3, 4, 1, 1, 3, 2, 1, 3, 3, 2, 1, 1, 2, 4, 3, 4, 1, 2, 3, 2, 2, 3, 3, 3, 7, 30, 31, 1, 1, 2, 3, 4, 2, 1, 1, 4, 4, 1, 1, 1, 1, 5, 4, 2, 2, 2, 4, 2, 2, 4, 2, 4, 4, 3, 1, 3, 5, 2, 2, 5, 3, 2, 2, 2, 2, 3, 1, 3, 6, 30, 1, 3, 31, 1, 3, 3, 1, 1, 3, 1, 5, 5, 4, 4, 5, 1, 1, 1, 1, 3, 1, 2, 1, 14, 3, 2, 2, 1, 3, 1, 2, 1, 3, 2, 6, 2, 2, 4, 7, 6, 5, 1, 3, 20, 1, 3, 2, 2, 3, 2, 2, 3, 3, 3, 2, 3, 2, 2, 1, 3, 2, 1, 1, 18, 2, 1, 1, 3, 1, 1, 4, 14, 2, 2, 3, 3, 1, 1, 5, 2, 2, 1, 3, 3, 2, 30, 1, 2, 3, 2, 2, 2, 7, 1, 30, 3, 2, 1, 5, 1, 6, 2, 2, 2, 3, 2, 3, 5, 1, 2, 2, 1, 1, 6, 8, 2, 10, 10, 1, 1, 6, 5, 4, 2, 2, 2, 2, 1, 2, 2, 1, 3, 7, 35, 1, 3, 1, 2, 5, 5, 2, 1, 2, 1, 3, 4, 30, 1, 3, 1, 2, 1, 2, 4, 2, 2, 5, 30, 30, 30, 3, 2, 4, 2, 2, 1, 2, 3, 2, 2, 2, 5, 5, 3, 1, 3, 3, 1, 4, 2, 4, 3, 1, 1, 1, 1, 3, 2, 1, 1, 1, 2, 2, 2, 3, 2, 2, 2, 2, 21, 30, 2, 2, 2, 2, 2, 1, 1, 3, 1, 2, 3, 3, 2, 30, 1, 30, 4, 2, 7, 2, 2, 6, 4, 1, 1, 2, 3, 3, 2, 2, 1, 2, 1, 2, 2, 2, 3, 1, 2, 7, 5, 3, 2, 6, 10, 3, 30, 4, 4, 1, 3, 1, 5, 1, 2, 2, 3, 2, 4, 14, 1, 4, 2, 1, 7, 2, 4, 2, 2, 31, 7, 30, 3, 1, 1, 3, 30, 1, 2, 2, 5, 1, 2, 1, 2, 3, 7, 3, 3, 4, 1, 2, 3, 2, 1, 2, 2, 3, 3, 1, 2, 1, 2, 1, 5, 1, 1, 31, 31, 2, 4, 2, 2, 7, 1, 3, 2, 4, 1, 1, 30, 1, 3, 1, 3, 11, 1, 1, 1, 2, 3, 2, 1, 4, 1, 5, 1, 1, 1, 1, 4, 2, 1, 1, 3, 2, 2, 1, 3, 1, 2, 2, 4, 3, 3, 2, 1, 15, 2, 3, 5, 1, 4, 2, 3, 4, 1, 1, 3, 2, 3, 5, 1, 2, 3, 2, 2, 2, 2, 2, 2, 12, 7, 4, 1, 3, 3, 8, 1, 2, 1, 2, 3, 2, 3, 2, 2, 1, 6, 1, 1, 15, 3, 4, 1, 30, 1, 2, 4, 3, 6, 5, 6, 1, 2, 3, 1, 1, 20, 2, 2, 2, 1, 7, 2, 10, 4, 5, 4, 4, 3, 3, 2, 1, 4, 3, 30, 2, 4, 3, 3, 3, 3, 3, 1, 1, 2, 3, 4, 3, 2, 2, 7, 5, 5, 1, 7, 1, 3, 1, 3, 5, 3, 1, 7, 3, 1, 3, 2, 1, 2, 5, 5, 3, 3, 1, 4, 6, 3, 3, 1, 3, 1, 2, 1, 7, 1, 2, 3, 7, 2, 3, 3, 2, 2, 3, 3, 2, 2, 3, 2, 2, 2, 2, 4, 4, 3, 1, 7, 3, 3, 2, 1, 4, 2, 2, 1, 1, 3, 3, 3, 5, 2, 4, 2, 1, 14, 1, 4, 3, 14, 2, 4, 5, 10, 2, 1, 4, 7, 1, 1, 11, 2, 3, 5, 3, 12, 3, 3, 3, 1, 2, 4, 1, 2, 3, 1, 1, 2, 4, 1, 7, 3, 1, 1, 1, 3, 2, 1, 1, 1, 30, 2, 3, 5, 3, 3, 6, 4, 4, 2, 3, 2, 2, 3, 4, 30, 2, 3, 1, 5, 3, 28, 3, 2, 3, 1, 4, 5, 3, 3, 3, 5, 30, 3, 3, 2, 3, 2, 1, 4, 1, 1, 5, 10, 1, 3, 3, 3, 6, 7, 3, 7, 2, 2, 3, 2, 2, 5, 2, 30, 2, 2, 2, 3, 7, 3, 14, 2, 1, 3, 1, 5, 7, 1, 4, 3, 2, 3, 4, 3, 3, 1, 6, 5, 1, 3, 2, 5, 4, 1, 1, 5, 4, 3, 14, 2, 2, 1, 4, 5, 2, 2, 2, 3, 4, 3, 30, 3, 2, 1, 28, 2, 1, 1, 3, 1, 2, 1, 2, 2, 2, 3, 4, 3, 4, 1, 2, 7, 4, 30, 1, 14, 1, 1, 3, 4, 1, 1, 27, 2, 3, 10, 1, 1, 1, 2, 2, 1, 3, 1, 2, 1, 2, 7, 2, 14, 2, 2, 2, 2, 25, 1, 5, 7, 3, 2, 2, 7, 3, 2, 3, 3, 3, 7, 1, 1, 4, 1, 7, 1, 5, 5, 2, 2, 3, 2, 3, 3, 7, 3, 3, 2, 5, 3, 1, 2, 2, 7, 15, 6, 3, 1, 3, 2, 2, 1, 2, 4, 1, 2, 2, 2, 1, 1, 1, 3, 1, 1, 1, 1, 1, 2, 6, 2, 4, 3, 1, 3, 1, 1, 2, 30, 3, 5, 10, 4, 30, 4, 30, 1, 3, 1, 3, 3, 4, 3, 1, 3, 1, 1, 3, 5, 1, 2, 1, 30, 2, 1, 7, 5, 1, 30, 30, 2, 2, 2, 5, 7, 1, 3, 7, 2, 2, 4, 3, 3, 2, 5, 1, 3, 2, 1, 30, 5, 1, 1, 1, 1, 30, 1, 7, 2, 25, 3, 1, 2, 3, 3, 4, 1, 2, 5, 1, 2, 2, 2, 1, 3, 28, 3, 13, 4, 3, 2, 1, 7, 1, 1, 2, 30, 1, 5, 8, 3, 1, 1, 3, 3, 1, 1, 2, 30, 1, 2, 4, 6, 2, 1, 1, 4, 3, 7, 1, 7, 3, 3, 2, 7, 4, 2, 2, 15, 3, 2, 30, 1, 3, 2, 1, 1, 1, 2, 4, 1, 5, 3, 2, 2, 7, 6, 3, 3, 5, 1, 7, 4, 4, 2, 5, 4, 30, 1, 1, 7, 3, 2, 3, 3, 3, 2, 2, 30, 3, 2, 2, 2, 1, 1, 2, 2, 2, 1, 3, 2, 3, 2, 4, 4, 2, 3, 1, 2, 30, 14, 30, 30, 7, 3, 5, 2, 1, 14, 5, 2, 1, 3, 2, 5, 2, 3, 4, 2, 2, 7, 1, 2, 2, 1, 3, 3, 2, 3, 4, 1, 12, 5, 30, 2, 4, 4, 7, 6, 1, 1, 1, 30, 4, 4, 2, 1, 18, 1, 1, 3, 2, 3, 4, 3, 5, 7, 1, 3, 2, 1, 1, 1, 1, 7, 7, 3, 2, 5, 1, 3, 2, 2, 1, 2, 4, 30, 3, 9, 5, 1, 2, 2, 4, 3, 4, 1, 3, 3, 3, 1, 1, 2, 5, 20, 1, 4, 4, 5, 1, 2, 1, 4, 3, 4, 7, 2, 3, 2, 2, 1, 2, 5, 1, 4, 2, 4, 1, 1, 6, 2, 3, 1, 5, 3, 1, 3, 30, 3, 5, 1, 3, 3, 2, 1, 1, 2, 2, 2, 2, 1, 30, 3, 5, 2, 30, 7, 4, 2, 14, 5, 3, 2, 3, 2, 4, 30, 2, 1, 3, 5, 2, 2, 2, 1, 1, 1, 5, 2, 1, 3, 5, 5, 2, 30, 1, 1, 2, 3, 10, 3, 24, 4, 2, 2, 28, 5, 7, 3, 2, 2, 30, 3, 4, 2, 4, 2, 2, 2, 1, 1, 1, 3, 2, 5, 2, 4, 3, 3, 3, 7, 20, 30, 2, 1, 2, 6, 3, 5, 4, 30, 2, 2, 1, 5, 3, 1, 7, 2, 1, 5, 2, 2, 3, 4, 30, 1, 21, 4, 1, 7, 1, 4, 2, 2, 7, 30, 7, 2, 1, 5, 3, 2, 6, 2, 3, 4, 2, 2, 1, 6, 7, 2, 3, 4, 4, 5, 1, 3, 4, 2, 1, 1, 4, 6, 1, 3, 3, 3, 1, 1, 6, 2, 2, 2, 4, 2, 2, 3, 4, 2, 4, 2, 4, 2, 2, 6, 4, 1, 3, 3, 30, 30, 1, 2, 4, 3, 2, 1, 6, 1, 1, 4, 5, 4, 3, 2, 3, 3, 2, 2, 3, 1, 2, 2, 1, 1, 9, 2, 1, 3, 2, 1, 2, 1, 3, 1, 30, 1, 1, 1, 1, 2, 2, 6, 11, 7, 1, 3, 2, 2, 2, 9, 3, 2, 1, 3, 1, 3, 1, 2, 7, 4, 3, 2, 2, 28, 3, 2, 1, 4, 2, 1, 2, 3, 4, 10, 1, 3, 1, 2, 4, 7, 2, 5, 5, 1, 4, 3, 4, 3, 2, 3, 4, 1, 1, 1, 2, 1, 5, 2, 2, 1, 21, 14, 3, 2, 30, 3, 1, 30, 2, 3, 6, 2, 1, 2, 5, 7, 3, 7, 1, 2, 3, 2, 5, 2, 2, 1, 2, 2, 2, 2, 3, 2, 1, 7, 2, 30, 4, 1, 1, 2, 2, 2, 1, 4, 3, 3, 4, 2, 4, 2, 6, 4, 2, 3, 3, 4, 4, 1, 2, 2, 1, 3, 2, 5, 2, 1, 7, 3, 30, 4, 2, 3, 1, 3, 2, 10, 3, 2, 30, 3, 4, 7, 2, 2, 30, 2, 1, 5, 2, 2, 14, 1, 2, 2, 3, 30, 2, 30, 3, 4, 2, 5, 3, 2, 12, 1, 5, 2, 3, 1, 1, 3, 1, 5, 3, 1, 2, 2, 1, 2, 1, 3, 3, 1, 30, 2, 1, 2, 1, 9, 2, 1, 1, 1, 1, 7, 7, 4, 3, 31, 31, 2, 4, 3, 3, 12, 2, 2, 1, 5, 1, 1, 2, 2, 28, 2, 2, 1, 3, 5, 1, 2, 4, 2, 3, 1, 1, 2, 2, 1, 4, 7, 2, 2, 2, 5, 1, 4, 7, 1, 4, 1, 4, 3, 15, 3, 1, 1, 2, 4, 3, 5, 1, 1, 1, 2, 1, 3, 4, 3, 1, 1, 1, 13, 2, 3, 1, 2, 30, 3, 4, 2, 1, 5, 7, 2, 2, 2, 2, 2, 2, 30, 3, 5, 1, 1, 1, 2, 2, 2, 3, 3, 14, 4, 1, 5, 21, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 4, 5, 1, 30, 2, 2, 1, 4, 4, 2, 2, 7, 3, 1, 3, 1, 1, 4, 4, 1, 1, 1, 3, 2, 1, 1, 1, 30, 2, 30, 4, 1, 3, 3, 4, 3, 1, 7, 1, 1, 2, 3, 2, 2, 1, 1, 6, 1, 6, 3, 3, 3, 3, 1, 2, 1, 1, 3, 2, 3, 3, 2, 1, 2, 3, 6, 3, 2, 3, 3, 1, 1, 1, 3, 2, 1, 3, 2, 1, 29, 4, 2, 2, 1, 3, 1, 1, 3, 2, 2, 3, 1, 2, 2, 1, 3, 30, 3, 1, 4, 14, 1, 14, 2, 4, 1, 2, 1, 1, 3, 1, 4, 2, 1, 1, 1, 1, 2, 3, 1, 1, 29, 2, 2, 2, 1, 30, 3, 2, 7, 1, 1, 1, 1, 2, 4, 3, 3, 3, 2, 1, 3, 2, 2, 2, 1, 2, 2, 1, 30, 2, 30, 1, 1, 1, 30, 1, 6, 1, 30, 3, 5, 30, 30, 1, 4, 2, 1, 14, 1, 1, 2, 31, 1, 4, 3, 2, 2, 30, 7, 1, 1, 4, 1, 3, 4, 2, 4, 5, 5, 3, 1, 2, 2, 10, 1, 1, 2, 2, 2, 2, 1, 1, 2, 3, 1, 30, 3, 30, 1, 30, 1, 1, 1, 3, 1, 1, 3, 1, 3, 1, 3, 3, 30, 6, 3, 1, 2, 2, 6, 2, 4, 2, 1, 2, 6, 3, 3, 2, 3, 3, 1, 2, 2, 5, 12, 3, 2, 1, 4, 1, 2, 1, 3, 4, 28, 2, 3, 30, 1, 1, 1, 1, 2, 5, 2, 30, 5, 2, 2, 14, 14, 1, 3, 2, 10, 1, 2, 2, 2, 1, 2, 3, 1, 2, 1, 4, 2, 2, 4, 3, 2, 2, 7, 1, 3, 1, 1, 4, 1, 10, 2, 14, 1, 4, 1, 2, 15, 2, 4, 1, 2, 4, 3, 2, 1, 1, 4, 1, 5, 30, 4, 4, 3, 1, 1, 3, 2, 2, 3, 2, 1, 30, 2, 5, 1, 5, 2, 3, 10, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 4, 3, 4, 2, 4, 2, 5, 2, 3, 2, 5, 5, 30, 3, 2, 4, 3, 7, 2, 1, 2, 2, 2, 1, 4, 1, 1, 2, 1, 5, 2, 2, 5, 30, 1, 14, 3, 2, 1, 2, 5, 4, 3, 4, 30, 3, 2, 4, 2, 1, 3, 5, 2, 3, 2, 1, 3, 1, 1, 2, 7, 30, 5, 3, 1, 3, 2, 1, 1, 3, 1, 1, 3, 7, 2, 2, 4, 1, 1, 14, 1, 14, 2, 3, 1, 1, 2, 30, 2, 5, 2, 7, 1, 2, 3, 1, 1, 2, 2, 1, 1, 2, 1, 4, 2, 30, 5, 2, 1, 1, 3, 30, 3, 2, 5, 8, 1, 1, 1, 2, 1, 7, 1, 1, 1, 1, 1, 2, 1, 3, 1, 3, 5, 1, 1, 1, 2, 4, 1, 4, 2, 1, 3, 3, 1, 4, 3, 25, 3, 1, 7, 3, 2, 1, 3, 3, 4, 1, 2, 7, 2, 3, 2, 2, 2, 3, 2, 2, 1, 2, 2, 1, 31, 1, 2, 7, 6, 5, 31, 1, 7, 5, 4, 6, 2, 1, 30, 2, 3, 2, 2, 30, 2, 1, 3, 2, 1, 3, 1, 5, 15, 30, 2, 3, 1, 6, 29, 1, 2, 28, 4, 1, 1, 3, 2, 3, 1, 3, 4, 1, 5, 3, 2, 2, 5, 5, 2, 1, 3, 3, 1, 2, 2, 4, 4, 3, 2, 1, 4, 3, 1, 2, 2, 2, 2, 2, 1, 4, 1, 2, 2, 3, 1, 2, 2, 3, 3, 3, 3, 3, 3, 4, 2, 1, 3, 1, 1, 30, 3, 14, 6, 3, 1, 3, 4, 3, 2, 6, 4, 3, 2, 3, 3, 30, 1, 30, 5, 31, 2, 5, 31, 5, 31, 3, 31, 31, 2, 1, 1, 1, 2, 4, 1, 31, 1, 2, 5, 1, 2, 14, 7, 30, 1, 1, 3, 2, 2, 3, 2, 1, 3, 2, 2, 6, 3, 7, 5, 2, 2, 7, 2, 1, 4, 1, 4, 1, 2, 5, 2, 3, 3, 4, 2, 1, 4, 2, 2, 2, 30, 2, 7, 4, 10, 3, 4, 1, 5, 4, 1, 2, 1, 4, 1, 4, 7, 4, 2, 1, 15, 2, 2, 4, 4, 4, 1, 4, 2, 3, 2, 4, 2, 2, 2, 3, 2, 1, 4, 3, 4, 4, 10, 1, 2, 4, 3, 1, 5, 3, 3, 2, 2, 14, 1, 3, 5, 10, 1, 3, 2, 2, 1, 3, 1, 7, 1, 1, 2, 1, 10, 31, 1, 14, 2, 1, 6, 5, 2, 30, 3, 2, 1, 2, 5, 1, 1, 3, 2, 2, 2, 4, 5, 30, 5, 2, 1, 3, 1, 2, 3, 4, 1, 5, 3, 3, 2, 1, 2, 7, 1, 1, 2, 2, 2, 3, 3, 1, 3, 7, 5, 2, 3, 4, 1, 1, 1, 30, 1, 4, 1, 2, 3, 2, 4, 4, 1, 2, 3, 2, 1, 2, 2, 30, 2, 31, 2, 28, 4, 3, 3, 2, 2, 2, 5, 4, 1, 1, 3, 4, 1, 1, 1, 2, 3, 1, 6, 6, 2, 4, 1, 2, 2, 1, 15, 3, 1, 1, 2, 2, 1, 1, 4, 3, 2, 5, 2, 1, 10, 7, 3, 20, 1, 3, 30, 2, 3, 2, 3, 3, 1, 2, 1, 1, 2, 4, 1, 2, 4, 5, 1, 1, 2, 5, 2, 1, 2, 2, 6, 5, 3, 2, 4, 1, 6, 1, 2, 3, 1, 3, 1, 3, 5, 2, 3, 2, 2, 3, 2, 5, 6, 5, 30, 2, 2, 2, 3, 2, 1, 2, 2, 1, 3, 6, 30, 2, 3, 1, 1, 29, 2, 1, 1, 30, 2, 2, 3, 3, 6, 1, 1, 2, 4, 1, 3, 1, 1, 3, 2, 1, 2, 2, 3, 5, 4, 2, 4, 3, 1, 3, 30, 2, 3, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 1, 1, 30, 2, 4, 3, 1, 1, 2, 2, 2, 4, 3, 2, 4, 2, 1, 1, 1, 7, 7, 25, 10, 3, 5, 1, 2, 4, 1, 2, 2, 2, 3, 5, 30, 1, 1, 2, 3, 1, 6, 3, 5, 3, 2, 3, 1, 2, 12, 6, 2, 2, 4, 3, 2, 7, 2, 5, 2, 2, 2, 3, 1, 1, 1, 1, 7, 6, 7, 1, 30, 2, 2, 2, 3, 1, 1, 1, 2, 3, 1, 5, 2, 3, 3, 1, 2, 14, 2, 3, 3, 4, 3, 3, 6, 1, 5, 1, 21, 1, 3, 1, 3, 3, 3, 3, 4, 3, 7, 2, 1, 1, 1, 30, 14, 1, 4, 2, 1, 30, 2, 1, 3, 2, 3, 5, 2, 2, 2, 1, 2, 2, 1, 2, 2, 30, 6, 2, 1, 1, 10, 2, 1, 3, 3, 2, 2, 10, 2, 3, 3, 1, 1, 2, 1, 31, 7, 3, 1, 2, 4, 1, 5, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 30, 2, 2, 1, 1, 1, 4, 2, 3, 3, 3, 2, 15, 3, 3, 1, 2, 3, 4, 1, 30, 5, 14, 3, 1, 3, 1, 1, 1, 29, 2, 3, 2, 5, 1, 4, 2, 2, 29, 2, 1, 2, 3, 30, 1, 3, 4, 3, 2, 2, 2, 2, 4, 3, 6, 2, 1, 1, 3, 5, 1, 1, 5, 1, 4, 30, 2, 2, 3, 5, 2, 3, 3, 1, 2, 2, 21, 5, 7, 5, 9, 2, 1, 3, 30, 5, 2, 2, 2, 2, 2, 30, 2, 1, 2, 5, 2, 3, 2, 4, 1, 2, 2, 2, 1, 1, 1, 30, 2, 30, 30, 2, 1, 1, 3, 3, 30, 1, 6, 1, 1, 2, 1, 7, 5, 3, 5, 5, 30, 3, 6, 3, 2, 2, 1, 3, 2, 1, 5, 1, 6, 2, 6, 30, 3, 3, 30, 3, 3, 2, 4, 3, 1, 3, 2, 5, 20, 1, 2, 5, 3, 2, 1, 1, 3, 2, 3, 2, 1, 3, 10, 14, 3, 30, 5, 2, 2, 1, 2, 29, 30, 29, 2, 2, 29, 2, 3, 3, 2, 2, 2, 2, 3, 2, 3, 1, 4, 3, 1, 2, 1, 7, 4, 3, 3, 1, 3, 2, 3, 3, 3, 2, 4, 1, 6, 1, 1, 2, 1, 7, 3, 3, 2, 1, 1, 7, 3, 5, 30, 30, 21, 1, 2, 3, 10, 1, 3, 1, 30, 3, 2, 3, 1, 2, 30, 3, 1, 1, 1, 5, 2, 1, 3, 2, 1, 2, 2, 6, 2, 5, 3, 1, 1, 2, 3, 5, 1, 2, 3, 3, 3, 1, 5, 3, 2, 1, 1, 1, 7, 2, 6, 2, 2, 2, 4, 1, 4, 2, 2, 2, 5, 1, 3, 3, 2, 2, 3, 3, 1, 7, 1, 30, 30, 2, 1, 1, 3, 2, 2, 2, 1, 2, 1, 2, 3, 2, 1, 6, 1, 3, 4, 7, 1, 6, 3, 2, 3, 7, 7, 1, 5, 1, 2, 1, 7, 20, 1, 2, 1, 3, 7, 3, 3, 2, 2, 1, 3, 3, 1, 2, 2, 2, 30, 2, 2, 21, 2, 2, 3, 7, 5, 2, 3, 1, 2, 1, 3, 3, 1, 1, 30, 30, 2, 30, 1, 4, 1, 5, 1, 7, 2, 1, 3, 2, 2, 3, 4, 7, 3, 1, 2, 1, 1, 4, 30, 4, 2, 4, 2, 15, 3, 5, 4, 3, 2, 1, 30, 1, 30, 2, 3, 2, 2, 2, 2, 7, 2, 3, 5, 3, 20, 2, 10, 2, 6, 2, 3, 2, 1, 1, 1, 1, 4, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 7, 2, 1, 3, 1, 1, 2, 28, 2, 2, 30, 1, 1, 1, 2, 2, 1, 3, 1, 3, 7, 4, 5, 2, 3, 3, 4, 1, 2, 2, 1, 1, 3, 3, 2, 7, 2, 5, 4, 30, 7, 7, 1, 2, 2, 2, 4, 3, 7, 2, 2, 7, 3, 15, 2, 2, 3, 2, 2, 2, 14, 30, 2, 3, 1, 7, 1, 1, 5, 2, 30, 2, 20, 7, 3, 3, 2, 5, 2, 2, 3, 2, 1, 1, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 4, 2, 1, 30, 2, 30, 5, 2, 5, 1, 3, 3, 8, 1, 3, 2, 4, 2, 2, 3, 2, 1, 2, 1, 3, 1, 4, 1, 2, 1, 2, 2, 2, 2, 6, 3, 3, 3, 7, 4, 7, 1, 5, 3, 3, 1, 1, 30, 30, 30, 30, 2, 5, 1, 3, 3, 2, 8, 2, 3, 3, 6, 4, 3, 2, 3, 1, 2, 1, 3, 1, 2, 4, 3, 4, 3, 2, 2, 2, 3, 3, 1, 7, 3, 14, 3, 2, 30, 2, 2, 1, 3, 3, 5, 30, 2, 2, 2, 1, 3, 1, 1, 2, 2, 3, 4, 1, 1, 3, 1, 2, 5, 30, 2, 30, 1, 1, 3, 1, 2, 4, 12, 30, 1, 2, 4, 1, 14, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 3, 30, 6, 2, 6, 2, 2, 3, 3, 3, 3, 2, 4, 1, 28, 30, 1, 1, 30, 5, 1, 30, 1, 7, 7, 3, 3, 3, 1, 4, 1, 3, 20, 3, 4, 2, 2, 2, 10, 2, 3, 1, 5, 3, 2, 3, 4, 1, 2, 7, 30, 2, 3, 2, 30, 3, 30, 30, 30, 30, 2, 30, 3, 3, 2, 3, 3, 2, 2, 29, 2, 2, 7, 2, 2, 15, 2, 1, 3, 3, 7, 3, 3, 29, 29, 2, 1, 7, 1, 1, 5, 2, 4, 2, 29, 1, 3, 2, 5, 5, 2, 1, 2, 2, 3, 2, 3, 4, 4, 3, 14, 1, 7, 4, 7, 4, 5, 3, 1, 3, 4, 2, 2, 3, 4, 3, 3, 2, 6, 3, 3, 1, 3, 2, 3, 15, 3, 3, 3, 3, 1, 2, 4, 2, 3, 15, 1, 2, 3, 4, 2, 5, 1, 2, 3, 1, 2, 6, 30, 1, 30, 2, 2, 2, 2, 1, 2, 1, 2, 2, 5, 4, 2, 3, 1, 3, 14, 2, 2, 2, 14, 3, 2, 2, 30, 2, 30, 30, 6, 3, 3, 3, 1, 3, 10, 1, 30, 2, 2, 1, 5, 1, 2, 30, 2, 2, 3, 1, 1, 3, 1, 6, 2, 3, 4, 4, 6, 3, 1, 1, 1, 7, 3, 2, 35, 2, 3, 2, 3, 2, 5, 6, 2, 1, 2, 3, 2, 1, 2, 3, 2, 3, 1, 1, 5, 4, 3, 1, 1, 30, 4, 2, 2, 13, 3, 4, 2, 7, 2, 5, 1, 2, 1, 1, 2, 1, 2, 3, 10, 5, 28, 3, 30, 1, 2, 1, 7, 2, 2, 4, 3, 2, 1, 3, 7, 29, 3, 2, 2, 3, 7, 5, 1, 2, 3, 4, 1, 4, 2, 5, 2, 2, 12, 1, 2, 2, 3, 3, 1, 3, 1, 3, 1, 3, 1, 4, 3, 4, 1, 8, 3, 3, 2, 4, 3, 1, 1, 1, 30, 7, 27, 4, 1, 10, 1, 4, 15, 2, 5, 1, 2, 2, 3, 2, 3, 7, 2, 2, 1, 1, 1, 2, 1, 1, 2, 3, 2, 29, 1, 2, 3, 3, 2, 2, 3, 30, 4, 1, 1, 5, 2, 4, 2, 30, 1, 6, 3, 2, 5, 1, 1, 7, 1, 3, 1, 7, 1, 1, 1, 5, 6, 3, 2, 1, 5, 5, 4, 1, 1, 1, 2, 6, 30, 2, 5, 2, 4, 2, 2, 2, 2, 2, 7, 30, 3, 5, 1, 1, 4, 30, 7, 1, 10, 2, 2, 3, 1, 30, 2, 1, 4, 2, 1, 4, 2, 2, 2, 3, 1, 2, 1, 4, 1, 1, 10, 2, 5, 1, 2, 2, 4, 3, 10, 4, 2, 3, 1, 2, 1, 2, 2, 2, 1, 5, 30, 20, 2, 2, 2, 2, 1, 3, 2, 3, 3, 7, 1, 2, 1, 2, 2, 1, 3, 2, 3, 3, 31, 3, 3, 3, 2, 1, 3, 31, 3, 1, 2, 2, 1, 2, 1, 5, 3, 1, 3, 2, 10, 2, 3, 3, 28, 3, 2, 3, 2, 2, 3, 1, 1, 1, 1, 2, 30, 10, 1, 4, 1, 1, 1, 1, 30, 3, 2, 4, 2, 7, 1, 1, 20, 4, 9, 7, 7, 5, 1, 3, 1, 7, 2, 2, 3, 3, 7, 2, 3, 30, 3, 5, 1, 2, 1, 2, 2, 3, 1, 4, 7, 2, 30, 1, 4, 2, 2, 2, 3, 30, 5, 2, 7, 1, 30, 1, 30, 1, 1, 4, 2, 5, 3, 5, 2, 2, 5, 3, 2, 1, 3, 1, 3, 30, 2, 1, 3, 2, 3, 3, 2, 2, 3, 1, 1, 4, 2, 1, 4, 1, 2, 3, 3, 30, 2, 2, 2, 31, 4, 30, 7, 3, 4, 2, 2, 30, 5, 1, 3, 4, 2, 2, 3, 1, 30, 1, 2, 1, 1, 4, 5, 4, 3, 2, 2, 3, 2, 20, 3, 30, 10, 2, 2, 1, 2, 1, 1, 2, 3, 4, 2, 1, 1, 30, 3, 29, 2, 1, 2, 2, 1, 1, 3, 30, 29, 2, 3, 2, 3, 1, 2, 14, 3, 4, 1, 2, 3, 1, 1, 1, 1, 3, 2, 30, 1, 3, 1, 4, 1, 1, 5, 2, 5, 2, 1, 3, 2, 3, 2, 1, 2, 7, 3, 7, 2, 1, 1, 1, 3, 30, 1, 1, 3, 1, 3, 2, 30, 1, 3, 2, 2, 4, 2, 1, 2, 29, 4, 1, 1, 2, 2, 2, 1, 21, 1, 1, 2, 20, 2, 1, 3, 2, 7, 3, 3, 2, 2, 30, 2, 6, 2, 2, 1, 4, 2, 1, 7, 1, 5, 3, 4, 3, 2, 2, 3, 2, 3, 3, 2, 2, 2, 1, 2, 5, 1, 2, 2, 4, 4, 1, 4, 3, 28, 2, 2, 7, 2, 2, 2, 1, 31, 15, 2, 1, 30, 1, 1, 10, 2, 3, 1, 1, 3, 1, 1, 3, 3, 2, 4, 1, 1, 2, 1, 3, 3, 2, 3, 2, 30, 1, 3, 2, 3, 4, 7, 2, 5, 2, 1, 3, 3, 3, 2, 4, 5, 2, 1, 2, 1, 3, 28, 1, 2, 2, 1, 1, 2, 2, 2, 5, 2, 1, 2, 2, 3, 30, 2, 2, 1, 1, 1, 7, 1, 4, 10, 3, 3, 7, 2, 1, 7, 1, 7, 3, 1, 1, 1, 6, 3, 30, 3, 29, 3, 2, 1, 3, 1, 2, 29, 5, 29, 2, 5, 2, 4, 7, 1, 2, 10, 1, 1, 1, 1, 2, 4, 2, 7, 1, 14, 3, 4, 1, 2, 2, 3, 3, 3, 2, 1, 1, 2, 7, 1, 2, 30, 3, 6, 3, 2, 2, 2, 1, 30, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 3, 2, 3, 1, 2, 1, 15, 4, 3, 3, 2, 3, 1, 3, 1, 2, 4, 2, 14, 3, 3, 1, 2, 3, 4, 2, 30, 1, 7, 1, 1, 2, 3, 2, 1, 1, 1, 1, 2, 5, 1, 1, 5, 1, 2, 30, 1, 2, 29, 3, 3, 1, 4, 2, 1, 1, 3, 1, 4, 3, 2, 14, 1, 2, 7, 10, 3, 1, 5, 30, 1, 2, 1, 2, 2, 3, 1, 1, 3, 4, 1, 1, 1, 1, 4, 7, 7, 3, 2, 3, 2, 3, 2, 1, 3, 2, 2, 10, 1, 2, 2, 2, 30, 7, 7, 2, 2, 4, 4, 2, 5, 2, 3, 1, 1, 3, 1, 3, 2, 2, 1, 2, 2, 2, 1, 4, 2, 2, 1, 7, 3, 3, 3, 2, 2, 2, 10, 2, 5, 2, 1, 2, 2, 7, 3, 4, 5, 2, 2, 3, 2, 5, 6, 1, 7, 1, 30, 30, 3, 2, 1, 1, 1, 3, 2, 7, 1, 3, 5, 1, 1, 1, 2, 4, 2, 1, 3, 3, 2, 2, 14, 3, 2, 2, 2, 2, 2, 1, 2, 2, 4, 14, 7, 30, 2, 7, 7, 3, 1, 3, 4, 3, 2, 2, 1, 2, 7, 1, 3, 1, 5, 5, 4, 3, 2, 7, 3, 1, 7, 5, 1, 3, 1, 2, 30, 7, 3, 3, 2, 1, 2, 1, 2, 2, 7, 1, 1, 5, 2, 1, 1, 1, 3, 1, 1, 1, 6, 2, 1, 6, 1, 6, 5, 5, 1, 1, 2, 2, 18, 3, 1, 21, 5, 30, 3, 2, 4, 2, 2, 2, 1, 2, 1, 2, 1, 10, 2, 4, 1, 3, 1, 4, 2, 2, 2, 2, 2, 2, 2, 5, 3, 2, 3, 30, 4, 1, 10, 4, 4, 2, 3, 2, 2, 2, 3, 2, 30, 29, 29, 1, 1, 1, 3, 1, 3, 2, 4, 1, 3, 1, 2, 30, 1, 2, 3, 1, 1, 3, 14, 1, 4, 2, 3, 2, 1, 1, 3, 1, 3, 1, 7, 1, 35, 2, 1, 30, 1, 5, 5, 1, 4, 3, 3, 2, 2, 5, 3, 2, 1, 1, 2, 1, 2, 3, 2, 1, 29, 1, 5, 2, 1, 1, 1, 2, 12, 1, 1, 1, 2, 3, 1, 3, 2, 3, 2, 2, 3, 2, 1, 3, 2, 1, 1, 2, 20, 2, 1, 1, 2, 1, 1, 2, 1, 1, 3, 2, 1, 3, 1, 2, 5, 3, 3, 2, 3, 3, 2, 2, 1, 3, 21, 3, 3, 3, 7, 5, 4, 2, 7, 3, 30, 1, 2, 4, 1, 1, 1, 3, 3, 20, 30, 2, 2, 5, 2, 3, 2, 4, 28, 2, 1, 2, 2, 2, 18, 4, 7, 3, 3, 3, 2, 1, 1, 1, 14, 4, 5, 5, 2, 28, 6, 2, 2, 7, 7, 1, 1, 2, 2, 3, 1, 4, 4, 2, 3, 2, 5, 7, 4, 2, 2, 2, 1, 3, 2, 30, 30, 30, 1, 2, 3, 3, 1, 2, 1, 4, 2, 2, 3, 2, 2, 1, 30, 2, 14, 1, 2, 1, 5, 7, 1, 3, 1, 5, 5, 4, 2, 2, 1, 1, 3, 2, 4, 7, 2, 1, 10, 2, 2, 30, 5, 3, 7, 5, 5, 2, 3, 2, 3, 2, 30, 5, 2, 1, 2, 10, 2, 2, 3, 3, 29, 2, 1, 1, 2, 3, 3, 4, 2, 1, 4, 30, 1, 3, 2, 1, 10, 1, 2, 1, 7, 5, 5, 2, 5, 4, 1, 14, 1, 7, 3, 1, 7, 2, 1, 1, 1, 1, 3, 2, 2, 3, 2, 2, 2, 1, 5, 3, 1, 7, 2, 3, 2, 3, 2, 2, 1, 7, 30, 30, 3, 2, 1, 1, 3, 3, 3, 3, 1, 1, 3, 1, 1, 1, 5, 2, 3, 1, 14, 1, 3, 2, 2, 1, 3, 2, 2, 4, 3, 2, 2, 2, 30, 2, 6, 2, 3, 2, 2, 2, 1, 1, 5, 10, 2, 2, 3, 2, 33, 1, 2, 2, 1, 1, 1, 4, 7, 1, 2, 5, 3, 7, 2, 5, 10, 1, 10, 3, 1, 1, 1, 2, 7, 2, 3, 3, 7, 1, 30, 2, 1, 3, 2, 6, 2, 1, 7, 1, 1, 2, 3, 1, 1, 2, 2, 1, 3, 4, 3, 30, 2, 1, 1, 2, 1, 2, 3, 3, 1, 1, 2, 3, 4, 5, 2, 3, 7, 5, 1, 6, 2, 7, 2, 1, 1, 1, 1, 30, 7, 1, 1, 1, 2, 3, 3, 1, 2, 3, 15, 3, 1, 4, 2, 1, 2, 2, 5, 4, 3, 3, 2, 7, 2, 3, 2, 2, 1, 5, 2, 3, 29, 29, 2, 30, 1, 2, 4, 3, 3, 2, 22, 4, 1, 1, 1, 1, 2, 4, 4, 3, 2, 1, 1, 1, 5, 6, 1, 3, 3, 2, 4, 4, 1, 2, 1, 3, 3, 2, 1, 2, 25, 3, 1, 1, 1, 1, 1, 4, 4, 1, 3, 3, 3, 5, 1, 4, 4, 5, 1, 2, 3, 1, 1, 1, 2, 2, 5, 2, 11, 3, 2, 5, 3, 4, 1, 1, 1, 5, 1, 2, 5, 2, 2, 3, 2, 1, 4, 2, 1, 1, 5, 1, 3, 2, 2, 2, 1, 2, 1, 1, 2, 3, 5, 3, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 4, 8, 3, 3, 14, 2, 3, 2, 1, 1, 2, 20, 3, 1, 3, 2, 2, 3, 3, 2, 1, 1, 1, 1, 1, 2, 7, 3, 3, 6, 2, 28, 3, 2, 3, 4, 2, 28, 1, 1, 3, 1, 2, 3, 1, 4, 1, 7, 2, 5, 4, 5, 30, 30, 3, 5, 1, 5, 3, 2, 2, 2, 7, 1, 2, 1, 2, 7, 7, 2, 1, 4, 2, 1, 2, 2, 2, 30, 2, 30, 3, 5, 30, 1, 1, 2, 1, 2, 1, 2, 3, 2, 30, 2, 7, 3, 1, 4, 2, 1, 2, 1, 4, 2, 2, 2, 2, 3, 1, 1, 30, 2, 2, 1, 20, 1, 1, 3, 4, 12, 30, 1, 3, 2, 14, 4, 1, 2, 2, 2, 2, 30, 2, 2, 2, 1, 2, 25, 4, 3, 2, 1, 1, 1, 1, 2, 3, 1, 1, 1, 1, 3, 1, 7, 1, 1, 3, 2, 1, 5, 30, 1, 4, 1, 1, 1, 1, 3, 1, 4, 1, 2, 2, 3, 2, 9, 2, 1, 2, 20, 2, 2, 3, 2, 2, 3, 5, 2, 2, 3, 30, 3, 30, 30, 2, 20, 2, 1, 5, 30, 30, 30, 30, 30, 3, 7, 3, 3, 6, 2, 5, 3, 1, 7, 9, 3, 1, 1, 2, 3, 3, 2, 2, 1, 21, 30, 7, 3, 2, 2, 2, 1, 3, 1, 2, 2, 1, 30, 1, 5, 30, 3, 5, 6, 6, 2, 1, 1, 4, 20, 2, 10, 30, 2, 2, 2, 4, 2, 5, 1, 1, 3, 1, 1, 30, 14, 30, 7, 2, 30, 30, 1, 3, 2, 1, 2, 3, 15, 2, 6, 30, 5, 5, 1, 2, 2, 2, 2, 2, 9, 5, 1, 1, 3, 4, 4, 3, 1, 1, 4, 2, 1, 1, 30, 30, 30, 30, 3, 2, 2, 7, 3, 5, 1, 3, 2, 2, 2, 30, 2, 5, 4, 7, 1, 5, 3, 2, 3, 2, 30, 30, 2, 1, 5, 2, 4, 1, 3, 2, 2, 2, 3, 2, 2, 4, 2, 3, 1, 1, 3, 3, 30, 2, 2, 2, 2, 2, 2, 14, 1, 3, 2, 1, 3, 3, 1, 2, 30, 2, 1, 1, 30, 2, 1, 3, 4, 2, 2, 2, 13, 2, 21, 1, 2, 2, 2, 1, 30, 3, 30, 3, 2, 4, 30, 5, 2, 2, 2, 3, 2, 23, 2, 1, 3, 3, 30, 6, 5, 2, 4, 2, 2, 1, 1, 2, 3, 2, 2, 2, 1, 1, 1, 2, 14, 1, 7, 4, 3, 5, 3, 1, 2, 1, 1, 30, 30, 1, 1, 1, 3, 3, 1, 3, 3, 2, 30, 1, 1, 3, 7, 2, 1, 4, 2, 2, 1, 1, 2, 5, 1, 7, 3, 1, 3, 1, 1, 30, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 10, 3, 10, 4, 2, 1, 2, 6, 3, 5, 1, 1, 1, 7, 3, 2, 2, 4, 2, 1, 2, 13, 5, 4, 2, 3, 4, 2, 14, 30, 1, 2, 6, 2, 1, 1, 4, 2, 30, 2, 2, 5, 1, 2, 5, 2, 6, 2, 1, 5, 1, 3, 3, 7, 2, 1, 1, 3, 1, 1, 3, 2, 2, 2, 2, 3, 2, 2, 1, 2, 6, 1, 2, 1, 2, 1, 3, 2, 3, 4, 1, 1, 4, 3, 2, 2, 2, 1, 1, 4, 5, 3, 5, 7, 2, 3, 2, 2, 2, 2, 2, 2, 3, 1, 30, 1, 5, 3, 2, 7, 7, 5, 1, 2, 1, 2, 1, 3, 1, 30, 2, 2, 5, 3, 3, 1, 7, 2, 2, 6, 2, 31, 2, 2, 2, 2, 30, 1, 2, 2, 1, 1, 2, 1, 3, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 30, 1, 2, 2, 2, 1, 30, 3, 2, 2, 2, 2, 3, 30, 2, 1, 1, 3, 1, 7, 5, 2, 4, 1, 1, 1, 1, 2, 30, 2, 2, 30, 30, 30, 30, 30, 3, 1, 3, 1, 1, 5, 1, 1, 1, 1, 2, 1, 1, 5, 30, 3, 1, 1, 3, 1, 4, 1, 1, 5, 7, 1, 2, 1, 4, 30, 1, 2, 2, 30, 1, 5, 4, 5, 5, 2, 2, 2, 2, 2, 4, 2, 2, 2, 4, 1, 3, 2, 5, 7, 7, 2, 2, 1, 4, 3, 1, 20, 1, 2, 1, 1, 3, 2, 1, 3, 1, 29, 29, 29, 1, 1, 1, 1, 2, 2, 7, 2, 2, 3, 1, 3, 30, 2, 4, 3, 1, 2, 30, 1, 7, 2, 2, 1, 1, 2, 3, 2, 2, 2, 1, 3, 7, 2, 1, 3, 3, 3, 4, 2, 3, 1, 5, 3, 5, 10, 21, 2, 4, 30, 2, 1, 5, 2, 6, 4, 30, 10, 2, 2, 2, 3, 1, 3, 30, 1, 2, 1, 2, 30, 3, 3, 1, 2, 1, 30, 3, 2, 1, 3, 5, 3, 3, 2, 5, 2, 4, 1, 2, 3, 1, 2, 2, 1, 2, 2, 30, 1, 1, 5, 1, 2, 3, 2, 3, 3, 1, 1, 1, 4, 1, 2, 3, 3, 2, 10, 5, 2, 3, 1, 1, 1, 2, 3, 5, 5, 2, 2, 2, 7, 3, 5, 3, 1, 2, 2, 2, 1, 2, 5, 30, 1, 1, 30, 3, 1, 14, 1, 1, 3, 3, 3, 2, 1, 1, 1, 1, 2, 1, 1, 2, 3, 1, 5, 1, 3, 3, 1, 4, 2, 1, 1, 2, 1, 2, 30, 4, 6, 4, 7, 7, 1, 4, 30, 1, 3, 2, 7, 7, 1, 4, 2, 3, 4, 2, 3, 3, 3, 1, 30, 2, 31, 2, 3, 30, 2, 30, 4, 27, 1, 7, 4, 5, 2, 3, 15, 5, 3, 2, 3, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 5, 4, 4, 7, 1, 2, 1, 1, 5, 4, 1, 1, 3, 1, 1, 2, 5, 3, 3, 3, 3, 20, 5, 4, 1, 3, 1, 3, 4, 4, 3, 4, 4, 4, 2, 1, 1, 1, 2, 2, 5, 4, 2, 2, 4, 2, 2, 2, 7, 7, 2, 2, 2, 2, 1, 2, 2, 5, 4, 3, 4, 2, 2, 3, 5, 3, 3, 2, 2, 3, 1, 1, 1, 4, 7, 3, 2, 4, 1, 2, 1, 1, 1, 3, 10, 3, 3, 2, 2, 3, 2, 1, 2, 3, 2, 1, 4, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 3, 2, 1, 2, 3, 2, 14, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 4, 2, 1, 2, 2, 3, 14, 1, 7, 2, 1, 1, 3, 7, 30, 30, 2, 30, 3, 1, 1, 30, 7, 2, 3, 2, 1, 2, 2, 2, 1, 3, 3, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 3, 1, 2, 3, 1, 2, 1, 30, 3, 2, 1, 1, 3, 1, 2, 3, 1, 2, 2, 1, 2, 3, 1, 29, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 3, 1, 3, 3, 2, 2, 2, 2, 3, 10, 2, 1, 1, 2, 1, 3, 1, 3, 2, 2, 2, 2, 1, 1, 30, 2, 3, 7, 1, 1, 1, 1, 1, 1, 3, 3, 2, 14, 1, 3, 1, 3, 1, 5, 29, 3, 2, 5, 3, 3, 2, 2, 7, 3, 3, 3, 6, 2, 4, 1, 1, 2, 4, 3, 30, 6, 5, 1, 4, 3, 1, 3, 3, 8, 2, 3, 4, 3, 31, 3, 31, 3, 4, 2, 5, 1, 1, 4, 1, 4, 3, 3, 2, 1, 2, 2, 3, 4, 2, 1, 2, 1, 2, 30, 2, 2, 1, 3, 1, 4, 4, 2, 3, 3, 5, 5, 3, 1, 1, 3, 2, 2, 5, 1, 1, 3, 2, 2, 13, 30, 2, 2, 2, 30, 2, 2, 2, 2, 2, 1, 5, 2, 2, 2, 2, 5, 4, 2, 3, 1, 28, 30, 25, 5, 3, 2, 3, 1, 5, 2, 2, 4, 1, 2, 1, 3, 9, 1, 1, 7, 1, 4, 2, 1, 3, 2, 1, 2, 1, 1, 2, 2, 28, 2, 2, 3, 2, 3, 5, 1, 2, 3, 1, 1, 3, 2, 30, 30, 2, 1, 4, 1, 4, 1, 3, 3, 30, 3, 1, 6, 15, 5, 1, 2, 3, 1, 2, 2, 30, 1, 2, 2, 20, 6, 6, 5, 3, 2, 5, 1, 1, 2, 6, 2, 1, 2, 2, 30, 4, 1, 3, 2, 4, 1, 1, 2, 3, 1, 3, 2, 1, 1, 2, 1, 1, 3, 1, 1, 2, 3, 5, 3, 1, 5, 2, 1, 3, 4, 3, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 5, 2, 5, 3, 4, 2, 1, 3, 3, 2, 1, 8, 2, 4, 2, 30, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 5, 30, 1, 30, 2, 3, 1, 1, 1, 2, 3, 2, 2, 2, 2, 29, 2, 2, 1, 1, 2, 3, 2, 1, 1, 7, 7, 3, 1, 29, 2, 2, 5, 2, 2, 2, 1, 2, 3, 3, 3, 1, 1, 2, 2, 5, 4, 2, 29, 2, 5, 1, 5, 2, 3, 2, 1, 1, 4, 30, 4, 2, 21, 4, 3, 7, 1, 1, 1, 2, 7, 30, 1, 1, 5, 1, 5, 3, 2, 2, 5, 4, 1, 4, 3, 3, 3, 4, 2, 3, 5, 5, 1, 2, 2, 2, 2, 1, 3, 1, 1, 3, 5, 5, 1, 1, 2, 1, 1, 1, 1, 3, 1, 3, 1, 14, 1, 3, 6, 2, 7, 3, 3, 1, 2, 1, 1, 7, 2, 3, 5, 2, 5, 3, 7, 1, 3, 1, 2, 2, 3, 1, 2, 2, 5, 3, 3, 2, 2, 2, 4, 2, 1, 2, 1, 2, 2, 2, 1, 2, 3, 1, 5, 2, 3, 2, 3, 3, 2, 2, 2, 21, 2, 1, 1, 1, 1, 3, 3, 7, 2, 3, 2, 3, 1, 6, 2, 1, 3, 4, 13, 8, 2, 2, 2, 1, 5, 2, 2, 2, 1, 20, 2, 3, 2, 2, 3, 5, 3, 5, 3, 1, 4, 3, 14, 1, 1, 2, 1, 5, 2, 2, 1, 3, 1, 2, 3, 30, 4, 2, 1, 1, 2, 2, 1, 5, 2, 2, 30, 1, 3, 1, 30, 14, 31, 2, 2, 4, 3, 1, 4, 1, 3, 5, 1, 1, 4, 2, 1, 1, 5, 10, 2, 2, 2, 3, 3, 3, 4, 1, 1, 29, 2, 2, 1, 1, 4, 28, 3, 1, 3, 2, 3, 2, 5, 30, 1, 1, 1, 1, 3, 2, 1, 2, 1, 2, 2, 2, 1, 30, 1, 14, 1, 1, 3, 1, 2, 1, 1, 7, 2, 2, 4, 30, 1, 10, 2, 5, 2, 1, 3, 1, 2, 1, 3, 1, 2, 2, 2, 1, 3, 3, 1, 1, 4, 4, 3, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 30, 1, 30, 1, 30, 3, 3, 30, 2, 5, 1, 7, 2, 3, 2, 1, 1, 3, 2, 2, 3, 20, 1, 1, 4, 3, 5, 2, 7, 7, 4, 4, 1, 1, 1, 7, 2, 3, 2, 2, 1, 2, 1, 1, 2, 3, 1, 2, 2, 1, 2, 1, 30, 4, 2, 2, 1, 2, 4, 4, 4, 3, 1, 1, 1, 1, 2, 3, 1, 3, 4, 4, 10, 3, 3, 1, 2, 2, 30, 3, 7, 2, 2, 2, 3, 1, 3, 1, 2, 2, 3, 1, 3, 3, 2, 1, 6, 5, 3, 2, 1, 4, 3, 7, 2, 3, 29, 2, 3, 1, 1, 1, 1, 5, 1, 2, 6, 1, 5, 1, 2, 2, 2, 1, 4, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 5, 30, 1, 2, 28, 3, 3, 28, 2, 1, 1, 2, 1, 1, 2, 3, 4, 5, 1, 3, 29, 1, 1, 3, 2, 1, 1, 30, 2, 2, 3, 1, 1, 30, 5, 4, 3, 4, 8, 1, 1, 1, 3, 5, 2, 3, 1, 2, 1, 1, 2, 2, 3, 2, 1, 4, 3, 1, 2, 3, 2, 28, 1, 1, 4, 2, 2, 5, 5, 2, 2, 1, 30, 4, 2, 1, 5, 30, 3, 30, 30, 30, 2, 35, 30, 1, 5, 1, 7, 2, 3, 2, 3, 5, 2, 5, 2, 1, 1, 1, 1, 2, 2, 2, 3, 2, 1, 2, 12, 1, 1, 2, 1, 7, 2, 3, 1, 3, 30, 14, 3, 3, 2, 10, 2, 3, 1, 30, 1, 2, 1, 2, 2, 2, 1, 2, 3, 2, 2, 1, 2, 3, 5, 3, 1, 2, 3, 2, 2, 1, 1, 3, 4, 1, 2, 1, 2, 1, 1, 1, 2, 2, 4, 2, 1, 32, 3, 6, 2, 2, 1, 7, 7, 30, 3, 10, 1, 2, 3, 5, 1, 1, 3, 4, 1, 4, 2, 1, 5, 2, 2, 3, 3, 2, 4, 2, 1, 3, 15, 3, 3, 3, 2, 2, 2, 2, 5, 4, 2, 1, 2, 1, 5, 1, 4, 3, 2, 1, 30, 6, 3, 3, 1, 1, 3, 2, 2, 2, 1, 10, 3, 1, 5, 2, 2, 7, 1, 30, 2, 3, 2, 2, 1, 1, 3, 3, 1, 1, 2, 5, 2, 1, 1, 2, 1, 30, 3, 2, 2, 5, 1, 2, 1, 4, 3, 5, 1, 2, 2, 3, 5, 4, 5, 2, 30, 30, 2, 1, 2, 2, 1, 5, 2, 5, 29, 3, 30, 2, 2, 2, 2, 7, 30, 1, 4, 1, 1, 2, 3, 8, 4, 1, 2, 2, 3, 1, 1, 1, 2, 2, 2, 4, 2, 3, 2, 2, 5, 29, 2, 1, 1, 1, 2, 20, 1, 1, 1, 1, 2, 5, 2, 1, 1, 2, 2, 1, 1, 7, 1, 3, 4, 3, 2, 2, 1, 1, 2, 10, 30, 15, 1, 3, 2, 2, 5, 4, 1, 2, 2, 2, 2, 7, 3, 29, 2, 1, 2, 2, 4, 5, 3, 2, 2, 2, 2, 1, 7, 7, 5, 2, 1, 30, 3, 30, 1, 5, 5, 1, 1, 2, 7, 4, 2, 3, 1, 6, 3, 1, 7, 2, 30, 2, 2, 3, 4, 3, 2, 3, 1, 1, 4, 10, 4, 2, 2, 1, 2, 1, 30, 1, 1, 1, 3, 3, 2, 30, 1, 1, 1, 2, 30, 2, 2, 1, 1, 7, 1, 7, 2, 3, 7, 2, 8, 2, 1, 2, 2, 2, 3, 1, 1, 5, 2, 1, 3, 28, 2, 28, 2, 4, 3, 2, 5, 1, 2, 1, 1, 32, 3, 2, 1, 6, 2, 1, 2, 3, 2, 1, 6, 1, 1, 1, 1, 3, 1, 4, 4, 2, 31, 1, 30, 1, 3, 2, 2, 2, 3, 1, 2, 2, 1, 1, 30, 2, 1, 1, 4, 2, 1, 1, 1, 4, 1, 1, 2, 2, 5, 3, 1, 2, 2, 1, 7, 2, 1, 3, 3, 1, 3, 5, 1, 1, 3, 3, 2, 1, 5, 30, 1, 2, 3, 3, 1, 5, 1, 2, 2, 1, 3, 2, 3, 1, 2, 3, 1, 1, 2, 1, 2, 1, 5, 2, 2, 2, 2, 30, 2, 3, 1, 1, 3, 1, 3, 2, 3, 2, 1, 1, 1, 3, 30, 1, 7, 2, 2, 2, 1, 1, 1, 3, 2, 1, 7, 2, 1, 1, 2, 5, 30, 30, 2, 3, 2, 2, 2, 3, 3, 9, 3, 2, 2, 2, 5, 1, 2, 1, 3, 30, 30, 1, 3, 2, 1, 3, 3, 1, 2, 3, 2, 8, 2, 30, 1, 1, 1, 1, 2, 2, 10, 2, 1, 4, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 1, 1, 2, 3, 30, 3, 2, 1, 2, 5, 1, 2, 1, 3, 30, 2, 30, 1, 30, 1, 28, 3, 5, 3, 3, 1, 1, 5, 2, 1, 2, 1, 1, 3, 2, 30, 30, 1, 30, 30, 3, 2, 7, 1, 2, 2, 2, 1, 1, 1, 1, 3, 1, 3, 1, 2, 3, 3, 3, 1, 1, 2, 2, 4, 1, 6, 6, 1, 2, 5, 20, 2, 2, 2, 5, 25, 2, 3, 1, 3, 2, 4, 3, 2, 2, 10, 1, 3, 1, 2, 1, 1, 7, 2, 5, 12, 3, 1, 3, 1, 3, 3, 5, 2, 1, 3, 1, 5, 2, 1, 2, 1, 5, 2, 1, 1, 1, 3, 2, 3, 1, 3, 2, 1, 1, 1, 5, 5, 2, 5, 1, 1, 2, 5, 2, 2, 1, 14, 9, 2, 2, 2, 2, 5, 1, 3, 1, 4, 1, 1, 2, 5, 2, 2, 2, 1, 1, 1, 2, 5, 1, 4, 2, 2, 4, 2, 2, 7, 7, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 4, 1, 4, 7, 4, 1, 2, 1, 1, 1, 1, 3, 3, 5, 3, 6, 1, 2, 2, 2, 2, 3, 2, 7, 2, 3, 1, 2, 2, 3, 2, 1, 2, 3, 2, 1, 1, 3, 1, 2, 2, 3, 4, 1, 1, 2, 1, 2, 30, 1, 7, 14, 2, 2, 2, 4, 2, 5, 1, 2, 3, 4, 1, 8, 1, 3, 2, 2, 4, 2, 2, 2, 30, 5, 2, 1, 2, 3, 1, 2, 1, 3, 5, 1, 2, 2, 2, 2, 2, 2, 2, 1, 5, 1, 6, 1, 4, 30, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 30, 3, 5, 30, 2, 2, 2, 8, 2, 2, 1, 7, 3, 2, 2, 4, 4, 20, 2, 2, 1, 1, 1, 2, 2, 1, 1, 5, 1, 3, 1, 3, 5, 2, 2, 7, 2, 3, 6, 4, 1, 1, 1, 2, 1, 2, 1, 2, 2, 3, 1, 2, 1, 1, 2, 2, 2, 2, 12, 1, 1, 30, 30, 7, 2, 1, 2, 30, 3, 2, 30, 30, 30, 1, 2, 2, 1, 5, 5, 3, 2, 1, 3, 2, 1, 2, 2, 2, 1, 1, 1, 2, 5, 2, 2, 3, 3, 1, 5, 3, 7, 6, 3, 2, 1, 4, 2, 1, 2, 2, 2, 2, 6, 2, 2, 1, 1, 2, 5, 1, 2, 2, 1, 4, 3, 1, 1, 2, 2, 5, 1, 5, 2, 5, 3, 1, 3, 15, 14, 1, 3, 7, 2, 2, 4, 2, 3, 28, 4, 2, 1, 2, 14, 1, 30, 5, 3, 1, 4, 1, 5, 1, 2, 1, 1, 2, 5, 1, 3, 1, 1, 4, 1, 1, 2, 3, 5, 3, 1, 3, 2, 1, 1, 1, 2, 10, 5, 1, 4, 3, 3, 1, 1, 3, 30, 7, 2, 2, 2, 5, 5, 2, 1, 3, 3, 1, 4, 1, 1, 1, 2, 5, 2, 4, 1, 3, 2, 1, 5, 3, 5, 5, 1, 1, 2, 3, 1, 2, 1, 2, 1, 3, 5, 1, 5, 3, 2, 3, 2, 1, 3, 2, 2, 5, 4, 2, 5, 10, 3, 2, 2, 1, 5, 1, 3, 3, 1, 3, 2, 1, 1, 3, 1, 28, 3, 5, 2, 3, 3, 4, 3, 4, 30, 1, 3, 2, 3, 1, 3, 2, 2, 29, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 3, 2, 1, 1, 4, 1, 2, 3, 1, 1, 3, 4, 2, 29, 29, 1, 1, 6, 1, 2, 2, 4, 2, 5, 2, 1, 2, 2, 1, 5, 7, 7, 2, 3, 2, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 7, 7, 6, 30, 2, 5, 3, 3, 7, 2, 7, 5, 3, 11, 2, 1, 2, 1, 2, 1, 1, 28, 7, 1, 1, 3, 1, 3, 1, 3, 1, 7, 2, 7, 1, 3, 1, 1, 1, 3, 2, 1, 1, 3, 1, 3, 1, 1, 3, 1, 1, 6, 4, 6, 2, 3, 1, 4, 3, 3, 5, 2, 2, 3, 2, 2, 2, 2, 1, 2, 29, 1, 2, 7, 2, 3, 3, 3, 1, 20, 1, 2, 3, 2, 1, 1, 2, 1, 2, 10, 1, 3, 1, 3, 2, 1, 1, 2, 4, 30, 30, 2, 2, 30, 2, 3, 30, 2, 2, 3, 2, 2, 3, 2, 1, 4, 2, 2, 1, 1, 1, 2, 7, 1, 8, 2, 2, 5, 3, 4, 2, 2, 1, 7, 2, 3, 4, 7, 3, 2, 30, 2, 3, 6, 2, 3, 1, 2, 1, 2, 7, 2, 2, 2, 1, 1, 13, 1, 3, 3, 2, 2, 1, 4, 7, 1, 2, 3, 4, 3, 1, 18, 2, 3, 1, 4, 1, 4, 7, 1, 2, 2, 2, 6, 6, 30, 30, 30, 1, 2, 5, 3, 1, 1, 2, 1, 2, 1, 3, 2, 2, 7, 1, 1, 5, 3, 30, 3, 1, 3, 2, 5, 5, 1, 2, 1, 3, 30, 1, 1, 1, 2, 1, 1, 4, 6, 1, 1, 4, 2, 7, 30, 5, 10, 2, 3, 3, 3, 2, 1, 3, 3, 2, 2, 1, 30, 2, 5, 2, 1, 6, 1, 2, 1, 1, 3, 7, 5, 7, 2, 3, 5, 3, 1, 3, 4, 6, 1, 2, 2, 4, 2, 1, 1, 1, 2, 3, 5, 4, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 3, 3, 2, 1, 2, 3, 2, 7, 2, 4, 2, 2, 2, 1, 3, 1, 4, 2, 3, 2, 3, 3, 3, 1, 3, 1, 2, 2, 4, 2, 1, 5, 30, 2, 1, 14, 29, 5, 2, 2, 3, 2, 2, 2, 1, 1, 1, 5, 2, 2, 31, 2, 30, 1, 8, 2, 2, 1, 1, 3, 31, 31, 2, 2, 4, 3, 4, 3, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 3, 3, 2, 5, 2, 4, 2, 2, 30, 1, 2, 2, 5, 2, 3, 1, 3, 2, 3, 4, 2, 4, 3, 7, 7, 2, 2, 3, 1, 3, 1, 3, 1, 3, 2, 2, 30, 29, 2, 3, 3, 1, 7, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 8, 2, 3, 3, 3, 3, 2, 4, 5, 5, 2, 1, 4, 2, 3, 1, 13, 3, 5, 3, 2, 20, 8, 5, 5, 1, 1, 2, 5, 3, 3, 3, 1, 1, 1, 2, 3, 3, 2, 2, 14, 1, 2, 1, 2, 30, 2, 2, 2, 3, 1, 2, 2, 3, 3, 4, 1, 1, 2, 1, 3, 1, 1, 2, 1, 2, 4, 3, 5, 2, 2, 30, 1, 1, 2, 1, 1, 30, 4, 2, 1, 2, 1, 2, 7, 1, 2, 30, 1, 2, 3, 2, 30, 2, 3, 1, 3, 4, 1, 1, 4, 2, 2, 1, 30, 1, 1, 4, 3, 3, 3, 7, 1, 3, 3, 5, 4, 3, 30, 3, 30, 1, 2, 14, 1, 1, 2, 7, 3, 1, 3, 1, 3, 30, 2, 5, 4, 1, 2, 30, 5, 30, 3, 3, 6, 1, 3, 1, 1, 7, 3, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 5, 3, 3, 2, 5, 1, 1, 1, 3, 30, 5, 1, 1, 2, 1, 3, 1, 1, 1, 30, 1, 2, 2, 5, 3, 5, 1, 2, 7, 2, 4, 2, 2, 3, 2, 29, 30, 10, 2, 5, 1, 3, 4, 1, 1, 5, 3, 2, 4, 1, 3, 1, 1, 4, 4, 14, 1, 3, 3, 30, 2, 5, 1, 2, 1, 2, 2, 3, 1, 2, 7, 2, 1, 1, 1, 30, 29, 1, 3, 3, 30, 2, 2, 4, 3, 4, 2, 1, 1, 1, 2, 2, 2, 1, 2, 2, 3, 2, 1, 2, 3, 3, 5, 7, 2, 5, 2, 2, 2, 2, 2, 3, 2, 5, 4, 1, 2, 1, 7, 1, 1, 1, 3, 1, 1, 30, 1, 1, 3, 1, 3, 1, 3, 2, 2, 10, 1, 1, 1, 1, 2, 1, 1, 1, 2, 12, 1, 2, 30, 1, 5, 30, 4, 1, 4, 1, 23, 1, 5, 1, 2, 4, 2, 21, 3, 1, 3, 2, 2, 2, 1, 4, 1, 4, 4, 1, 2, 30, 1, 4, 1, 1, 1, 1, 5, 7, 1, 3, 5, 2, 3, 2, 3, 3, 1, 3, 1, 6, 1, 1, 1, 6, 3, 3, 1, 2, 30, 5, 2, 4, 1, 1, 1, 2, 29, 3, 4, 3, 2, 3, 2, 7, 3, 3, 1, 2, 3, 4, 1, 30, 2, 2, 1, 3, 8, 1, 2, 1, 2, 5, 1, 3, 3, 3, 5, 3, 29, 2, 5, 1, 2, 1, 3, 2, 2, 3, 1, 1, 5, 6, 3, 2, 30, 2, 1, 14, 30, 14, 2, 30, 30, 4, 3, 5, 2, 7, 2, 7, 1, 30, 30, 1, 7, 2, 5, 4, 3, 3, 2, 2, 2, 2, 30, 1, 8, 1, 2, 2, 30, 7, 30, 30, 14, 2, 30, 2, 1, 3, 30, 30, 30, 30, 30, 30, 30, 30, 30, 2, 1, 30, 30, 30, 30, 30, 3, 1, 30, 7, 30, 30, 2, 3, 2, 30, 2, 2, 2, 3, 2, 2, 2, 1, 1, 1, 1, 2, 6, 4, 1, 1, 5, 3, 1, 2, 4, 1, 1, 1, 6, 4, 1, 3, 5, 5, 1, 1, 1, 30, 2, 2, 14, 1, 2, 5, 2, 1, 1, 5, 14, 3, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 21, 3, 6, 2, 5, 2, 1, 12, 30, 2, 3, 3, 3, 4, 1, 1, 1, 30, 30, 1, 30, 2, 1, 30, 1, 30, 2, 1, 30, 5, 6, 2, 2, 3, 19, 2, 3, 3, 4, 6, 1, 1, 2, 1, 2, 1, 3, 1, 1, 2, 6, 2, 3, 2, 1, 1, 2, 3, 1, 2, 3, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 2, 4, 1, 2, 3, 3, 3, 2, 4, 2, 2, 2, 3, 2, 1, 3, 9, 5, 3, 3, 1, 3, 2, 2, 3, 2, 3, 1, 2, 2, 2, 1, 2, 3, 1, 1, 2, 1, 1, 2, 5, 2, 3, 2, 3, 2, 4, 3, 5, 4, 1, 2, 2, 6, 1, 30, 1, 3, 1, 4, 2, 30, 3, 1, 4, 3, 4, 1, 1, 2, 1, 3, 30, 15, 1, 30, 5, 2, 1, 7, 2, 1, 1, 2, 1, 1, 3, 1, 6, 1, 3, 3, 5, 5, 30, 2, 6, 7, 1, 4, 2, 2, 3, 2, 15, 1, 5, 15, 15, 15, 15, 2, 1, 2, 2, 3, 15, 2, 1, 7, 15, 1, 1, 3, 3, 1, 2, 1, 1, 2, 15, 5, 1, 2, 1, 7, 3, 15, 15, 2, 1, 30, 3, 2, 15, 1, 3, 1, 1, 1, 1, 3, 3, 2, 1, 2, 3, 1, 2, 2, 5, 1, 1, 2, 2, 2, 3, 3, 30, 1, 2, 20, 1, 2, 2, 1, 4, 1, 1, 1, 8, 1, 1, 2, 2, 2, 30, 1, 1, 1, 3, 7, 8, 30, 11, 4, 3, 3, 7, 1, 3, 1, 5, 1, 2, 7, 2, 1, 3, 3, 3, 30, 1, 1, 2, 2, 3, 1, 4, 10, 2, 1, 5, 4, 2, 1, 1, 1, 3, 5, 2, 1, 8, 2, 5, 1, 4, 30, 3, 3, 5, 3, 1, 1, 1, 7, 30, 2, 3, 2, 3, 2, 1, 2, 1, 2, 3, 2, 2, 2, 4, 5, 3, 5, 1, 2, 3, 5, 3, 1, 1, 1, 2, 3, 7, 5, 3, 3, 2, 2, 2, 2, 1, 2, 3, 2, 2, 3, 3, 2, 14, 2, 7, 2, 1, 2, 1, 2, 30, 30, 21, 1, 1, 4, 21, 2, 30, 5, 3, 5, 2, 2, 9, 1, 2, 1, 1, 4, 2, 30, 1, 5, 3, 2, 2, 1, 6, 2, 2, 1, 4, 1, 1, 10, 1, 1, 5, 1, 3, 2, 1, 30, 2, 3, 30, 2, 30, 1, 1, 4, 30, 2, 30, 3, 30, 3, 2, 3, 30, 4, 1, 2, 1, 3, 1, 2, 2, 1, 3, 7, 1, 2, 1, 5, 6, 1, 1, 1, 3, 4, 2, 2, 3, 1, 1, 15, 7, 2, 2, 2, 2, 15, 1, 1, 2, 2, 2, 1, 2, 10, 3, 2, 2, 1, 7, 1, 2, 1, 15, 2, 2, 3, 3, 3, 30, 30, 1, 1, 1, 1, 2, 30, 2, 1, 5, 7, 1, 1, 2, 3, 7, 1, 3, 3, 25, 3, 4, 3, 20, 6, 2, 3, 1, 1, 2, 3, 3, 2, 3, 1, 2, 5, 4, 6, 1, 5, 4, 1, 3, 2, 4, 2, 2, 1, 1, 30, 1, 7, 2, 4, 3, 3, 1, 3, 30, 2, 1, 1, 5, 1, 1, 4, 3, 30, 2, 2, 28, 30, 1, 1, 1, 1, 1, 1, 2, 3, 1, 2, 4, 1, 2, 4, 1, 5, 2, 30, 5, 1, 1, 1, 3, 4, 2, 15, 2, 14, 2, 6, 5, 1, 2, 2, 21, 1, 2, 3, 3, 3, 1, 3, 2, 3, 2, 1, 2, 1, 5, 1, 30, 1, 2, 2, 2, 2, 3, 2, 1, 1, 2, 3, 2, 3, 2, 2, 1, 2, 4, 5, 2, 2, 2, 29, 29, 2, 29, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 2, 2, 3, 5, 5, 1, 2, 1, 5, 2, 3, 1, 1, 3, 1, 1, 1, 1, 1, 3, 5, 4, 2, 1, 2, 7, 5, 4, 2, 7, 1, 2, 2, 4, 3, 3, 30, 2, 5, 1, 1, 2, 1, 1, 5, 1, 2, 2, 7, 2, 3, 1, 2, 3, 2, 25, 3, 2, 1, 9, 3, 3, 1, 1, 3, 2, 2, 3, 2, 3, 1, 1, 4, 5, 1, 1, 3, 2, 2, 2, 2, 3, 2, 2, 3, 2, 1, 3, 1, 2, 4, 3, 1, 4, 1, 1, 2, 4, 1, 3, 1, 1, 30, 30, 2, 3, 6, 3, 5, 2, 5, 5, 13, 4, 2, 1, 2, 2, 2, 3, 1, 2, 6, 2, 6, 1, 4, 2, 2, 1, 3, 2, 1, 1, 2, 1, 2, 1, 2, 3, 2, 5, 7, 3, 7, 3, 7, 2, 1, 2, 1, 2, 2, 31, 1, 2, 2, 1, 3, 5, 2, 30, 31, 1, 2, 1, 3, 3, 1, 1, 3, 2, 2, 1, 1, 1, 1, 3, 5, 1, 2, 1, 1, 1, 4, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 3, 40, 3, 1, 2, 5, 1, 4, 1, 2, 1, 7, 2, 1, 1, 1, 7, 1, 2, 3, 1, 3, 3, 2, 4, 1, 4, 1, 2, 1, 1, 2, 1, 4, 3, 3, 1, 1, 6, 3, 5, 3, 1, 3, 1, 2, 2, 1, 2, 1, 3, 1, 2, 2, 3, 1, 3, 1, 6, 14, 1, 30, 1, 2, 15, 1, 1, 2, 3, 1, 2, 1, 1, 3, 1, 2, 7, 1, 1, 2, 30, 2, 2, 1, 1, 3, 4, 2, 1, 30, 1, 1, 3, 30, 2, 1, 2, 2, 4, 30, 3, 1, 3, 3, 2, 1, 2, 1, 2, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1, 3, 3, 2, 3, 2, 2, 2, 2, 1, 5, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 30, 1, 2, 1, 1, 1, 6, 2, 2, 1, 2, 3, 2, 2, 1, 3, 1, 1, 1, 10, 2, 1, 5, 1, 6, 2, 1, 7, 2, 3, 1, 1, 1, 30, 1, 2, 2, 28, 30, 1, 3, 2, 1, 6, 2, 2, 28, 1, 2, 2, 4, 2, 2, 1, 1, 1, 5, 4, 2, 2, 1, 1, 1, 1, 4, 2, 6, 4, 1, 1, 2, 1, 1, 6, 2, 1, 2, 1, 1, 2, 1, 1, 5, 2, 1, 30, 1, 2, 3, 1, 1, 4, 1, 1, 1, 2, 3, 2, 1, 2, 2, 1, 1, 2, 1, 1, 3, 4, 2, 3, 6, 2, 2, 2, 5, 2, 30, 2, 1, 2, 1, 2, 3, 2, 1, 1, 4, 3, 1, 1, 2, 3, 3, 1, 1, 1, 2, 1, 30, 6, 6, 5, 3, 2, 2, 2, 4, 2, 1, 2, 2, 4, 2, 1, 2, 2, 1, 1, 3, 5, 3, 2, 29, 2, 14, 4, 2, 1, 1, 3, 2, 1, 2, 1, 5, 2, 2, 5, 3, 7, 1, 2, 1, 25, 3, 2, 2, 3, 1, 2, 6, 2, 3, 1, 1, 1, 1, 1, 2, 31, 1, 2, 6, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 4, 1, 4, 2, 4, 3, 2, 4, 2, 1, 3, 2, 1, 3, 2, 1, 2, 2, 1, 4, 7, 1, 5, 1, 3, 4, 7, 2, 3, 3, 1, 1, 3, 1, 1, 1, 2, 1, 1, 2, 2, 4, 1, 2, 3, 3, 3, 3, 1, 1, 4, 1, 1, 1, 3, 1, 1, 1, 1, 1, 3, 3, 30, 1, 1, 7, 1, 7, 5, 1, 30, 30, 1, 2, 1, 3, 3, 2, 3, 3, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 3, 2, 30, 3, 2, 3, 21, 2, 2, 1, 5, 1, 1, 1, 30, 1, 3, 1, 2, 2, 5, 2, 2, 4, 3, 1, 30, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 3, 1, 1, 2, 2, 5, 3, 3, 2, 5, 1, 1, 2, 1, 1, 1, 2, 4, 3, 3, 2, 4, 30, 2, 1, 2, 2, 14, 6, 2, 2, 1, 1, 2, 31, 2, 12, 30, 2, 3, 5, 2, 3, 3, 7, 7, 1, 5, 3, 2, 25, 2, 7, 5, 1, 5, 2, 2, 2, 4, 2, 1, 30, 2, 15, 2, 3, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 5, 1, 1, 2, 3, 1, 2, 7, 1, 3, 1, 3, 3, 2, 2, 3, 2, 2, 1, 5, 1, 2, 3, 3, 2, 2, 5, 6, 2, 5, 1, 1, 2, 2, 1, 1, 30, 1, 3, 1, 5, 5, 1, 3, 2, 2, 3, 3, 1, 30, 3, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 5, 30, 30, 3, 1, 3, 1, 5, 1, 3, 30, 30, 2, 2, 1, 30, 1, 1, 3, 4, 1, 2, 3, 1, 1, 2, 1, 2, 1, 7, 4, 5, 2, 4, 2, 4, 1, 1, 1, 3, 1, 30, 30, 30, 30, 1, 30, 30, 30, 30, 30, 28, 2, 1, 2, 1, 2, 2, 3, 2, 2, 2, 2, 12, 10, 2, 2, 2, 30, 2, 2, 2, 2, 2, 2, 2, 7, 1, 3, 3, 2, 1, 3, 2, 2, 2, 5, 4, 3, 2, 1, 1, 1, 1, 2, 3, 1, 1, 2, 7, 5, 1, 1, 3, 1, 1, 30, 2, 2, 3, 2, 3, 2, 3, 1, 1, 1, 2, 1, 2, 2, 1, 2, 3, 13, 1, 3, 2, 2, 2, 1, 1, 28, 3, 2, 2, 3, 2, 1, 3, 2, 2, 1, 1, 3, 1, 1, 2, 2, 2, 2, 4, 2, 4, 2, 3, 18, 3, 30, 1, 1, 1, 2, 2, 4, 2, 13, 1, 3, 2, 4, 2, 2, 2, 1, 1, 1, 30, 3, 1, 1, 1, 5, 2, 2, 1, 1, 20, 3, 30, 5, 1, 1, 2, 1, 2, 1, 1, 3, 7, 2, 1, 1, 2, 3, 2, 4, 2, 5, 1, 3, 2, 5, 5, 2, 1, 2, 1, 2, 4, 30, 2, 3, 1, 1, 1, 5, 1, 1, 3, 1, 1, 2, 1, 1, 1, 2, 3, 3, 3, 2, 1, 30, 1, 1, 3, 3, 5, 5, 1, 2, 2, 2, 1, 2, 1, 4, 1, 1, 7, 3, 1, 1, 3, 1, 4, 2, 2, 3, 1, 3, 5, 3, 1, 2, 10, 1, 2, 1, 1, 3, 2, 1, 3, 2, 2, 2, 12, 2, 30, 30, 1, 3, 30, 2, 4, 2, 1, 1, 1, 2, 3, 4, 3, 2, 3, 7, 1, 2, 1, 2, 2, 1, 1, 30, 4, 3, 2, 2, 2, 2, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 30, 2, 1, 2, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1, 1, 4, 1, 3, 1, 4, 3, 1, 5, 1, 1, 1, 2, 1, 30, 1, 2, 2, 30, 3, 5, 1, 1, 2, 2, 1, 2, 1, 3, 1, 6, 3, 3, 2, 2, 3, 2, 1, 3, 1, 2, 3, 3, 1, 5, 1, 4, 3, 1, 3, 1, 2, 2, 2, 2, 1, 2, 3, 3, 4, 4, 1, 3, 2, 1, 2, 1, 2, 1, 2, 1, 3, 3, 5, 1, 3, 3, 2, 1, 2, 6, 30, 1, 21, 6, 1, 1, 1, 1, 1, 30, 30, 30, 1, 1, 2, 1, 1, 2, 3, 2, 1, 1, 3, 5, 1, 1, 2, 7, 2, 2, 2, 5, 2, 1, 1, 2, 1, 14, 4, 4, 2, 1, 1, 4, 2, 3, 2, 2, 2, 1, 4, 2, 1, 25, 1, 1, 2, 1, 1, 1, 1, 3, 2, 2, 2, 7, 2, 3, 3, 2, 1, 5, 1, 4, 2, 2, 5, 4, 2, 1, 2, 3, 5, 3, 2, 3, 1, 4, 7, 1, 30, 3, 1, 1, 1, 2, 29, 29, 29, 1, 29, 2, 4, 2, 1, 2, 6, 2, 3, 2, 3, 4, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 15, 30, 2, 2, 2, 6, 3, 3, 1, 30, 2, 3, 30, 2, 1, 1, 6, 2, 2, 2, 2, 2, 3, 2, 1, 1, 1, 3, 3, 3, 4, 2, 2, 2, 30, 2, 30, 30, 1, 5, 30, 5, 30, 1, 2, 2, 2, 5, 1, 2, 5, 1, 1, 3, 1, 1, 1, 1, 1, 4, 1, 3, 2, 2, 1, 2, 1, 6, 2, 2, 1, 2, 2, 4, 1, 1, 1, 31, 2, 4, 7, 2, 4, 1, 2, 2, 20, 3, 2, 2, 1, 4, 3, 2, 2, 2, 2, 1, 2, 2, 5, 2, 2, 2, 14, 1, 3, 1, 1, 2, 3, 2, 2, 5, 1, 1, 1, 10, 7, 7, 3, 7, 2, 1, 7, 7, 7, 7, 29, 1, 4, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 5, 1, 5, 3, 1, 30, 1, 30, 3, 3, 1, 2, 1, 4, 1, 2, 1, 14, 7, 14, 3, 2, 5, 3, 1, 5, 2, 2, 3, 2, 3, 4, 1, 29, 29, 3, 5, 1, 1, 2, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 28, 2, 7, 30, 30, 2, 15, 2, 3, 1, 3, 2, 2, 1, 1, 2, 3, 2, 2, 2, 1, 3, 30, 1, 2, 2, 30, 30, 3, 5, 1, 3, 1, 1, 4, 2, 3, 1, 1, 3, 1, 1, 1, 2, 10, 2, 1, 2, 30, 2, 2, 2, 2, 2, 1, 4, 7, 1, 2, 2, 2, 5, 3, 1, 1, 1, 1, 9, 2, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 3, 1, 1, 1, 3, 1, 4, 3, 3, 3, 5, 7, 5, 7, 2, 1, 1, 1, 7, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1, 3, 2, 1, 5, 2, 1, 2, 2, 2, 2, 3, 13, 2, 7, 1, 2, 1, 3, 2, 2, 30, 2, 2, 3, 2, 1, 7, 2, 1, 3, 2, 2, 1, 1, 1, 7, 3, 30, 2, 2, 1, 2, 3, 2, 2, 2, 1, 1, 1, 2, 1, 1, 3, 1, 2, 3, 3, 3, 1, 3, 2, 2, 1, 1, 2, 1, 5, 2, 2, 1, 2, 1, 1, 1, 3, 5, 5, 1, 7, 5, 3, 2, 1, 5, 2, 2, 2, 1, 2, 3, 2, 3, 3, 1, 1, 7, 1, 7, 3, 3, 1, 2, 1, 1, 2, 2, 29, 1, 1, 1, 30, 1, 3, 3, 1, 1, 2, 3, 3, 4, 1, 2, 2, 30, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 3, 1, 2, 4, 1, 1, 2, 2, 2, 2, 2, 2, 20, 4, 1, 1, 1, 4, 3, 2, 7, 7, 30, 1, 1, 4, 1, 3, 1, 3, 1, 1, 2, 2, 3, 1, 1, 3, 3, 3, 1, 2, 1, 7, 3, 5, 2, 1, 1, 3, 7, 1, 3, 3, 7, 3, 1, 3, 2, 3, 14, 1, 1, 5, 1, 5, 1, 1, 1, 6, 1, 6, 3, 2, 30, 1, 30, 2, 2, 3, 2, 30, 4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 35, 2, 4, 1, 2, 1, 1, 2, 2, 3, 2, 2, 1, 3, 1, 2, 5, 1, 4, 2, 3, 3, 2, 1, 2, 3, 4, 5, 3, 6, 1, 2, 3, 2, 30, 1, 30, 1, 1, 30, 2, 3, 3, 30, 2, 5, 30, 2, 1, 2, 2, 30, 2, 4, 3, 3, 1, 4, 1, 2, 1, 5, 3, 6, 2, 5, 2, 1, 21, 10, 4, 2, 1, 4, 1, 3, 4, 3, 2, 2, 1, 2, 3, 2, 3, 2, 4, 1, 1, 2, 3, 2, 4, 2, 3, 1, 2, 30, 2, 13, 2, 30, 1, 7, 2, 3, 30, 2, 2, 1, 1, 2, 2, 1, 5, 2, 6, 4, 3, 2, 2, 2, 3, 2, 3, 2, 2, 1, 2, 30, 30, 2, 3, 4, 2, 30, 1, 1, 1, 1, 30, 2, 3, 3, 2, 1, 2, 1, 30, 2, 1, 1, 3, 2, 28, 1, 1, 1, 1, 7, 3, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 30, 2, 29, 2, 2, 2, 1, 1, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 5, 4, 2, 6, 1, 2, 1, 1, 2, 7, 2, 2, 1, 2, 3, 2, 1, 1, 1, 3, 2, 3, 3, 2, 2, 1, 2, 3, 3, 2, 1, 1, 2, 2, 14, 1, 1, 5, 2, 14, 2, 2, 2, 2, 20, 1, 30, 3, 1, 1, 1, 1, 1, 4, 4, 2, 5, 1, 3, 4, 1, 5, 1, 3, 1, 3, 1, 3, 2, 1, 2, 2, 2, 5, 1, 5, 2, 4, 2, 5, 1, 2, 1, 3, 1, 2, 1, 1, 1, 10, 1, 7, 2, 4, 4, 2, 2, 2, 1, 4, 1, 5, 1, 2, 7, 2, 1, 1, 2, 1, 2, 1, 3, 2, 5, 1, 2, 3, 14, 1, 5, 6, 2, 4, 1, 1, 2, 1, 2, 2, 5, 3, 4, 2, 1, 1, 2, 1, 1, 1, 1, 1, 30, 1, 1, 2, 2, 3, 1, 1, 3, 7, 7, 1, 7, 1, 3, 2, 1, 10, 3, 3, 7, 2, 3, 7, 7, 7, 7, 3, 3, 3, 3, 2, 1, 30, 2, 3, 1, 1, 3, 1, 1, 5, 1, 2, 1, 2, 1, 2, 30, 1, 1, 4, 2, 3, 3, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 10, 4, 1, 1, 2, 2, 1, 3, 1, 1, 3, 1, 3, 1, 1, 4, 4, 1, 3, 1, 3, 1, 1, 1, 2, 3, 5, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 3, 5, 1, 1, 1, 7, 3, 30, 1, 1, 7, 1, 1, 1, 1, 1, 14, 1, 30, 4, 4, 1, 3, 3, 5, 1, 3, 1, 2, 5, 2, 4, 1, 2, 2, 1, 15, 1, 2, 1, 1, 2, 1, 2, 2, 3, 1, 2, 3, 3, 3, 2, 5, 7, 30, 1, 1, 2, 3, 2, 3, 2, 1, 1, 2, 3, 2, 2, 1, 2, 3, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 4, 1, 4, 1, 1, 1, 3, 2, 2, 1, 2, 2, 2, 1, 5, 1, 1, 31, 7, 1, 4, 1, 2, 3, 1, 2, 7, 2, 3, 3, 1, 3, 5, 1, 4, 5, 1, 2, 30, 1, 7, 27, 1, 3, 4, 1, 4, 3, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 30, 30, 5, 1, 2, 2, 1, 1, 1, 2, 3, 5, 2, 1, 1, 1, 1, 1, 2, 2, 3, 1, 2, 7, 3, 2, 22, 1, 3, 3, 1, 3, 7, 4, 31, 7, 2, 1, 1, 3, 3, 10, 3, 3, 1, 2, 1, 1, 5, 4, 1, 2, 3, 2, 2, 4, 2, 2, 2, 29, 29, 1, 1, 4, 5, 1, 1, 2, 2, 1, 2, 3, 1, 1, 2, 1, 1, 1, 1, 30, 1, 30, 1, 1, 2, 2, 6, 7, 1, 2, 2, 1, 1, 1, 3, 1, 1, 2, 3, 1, 2, 3, 2, 2, 1, 1, 1, 2, 2, 2, 4, 2, 2, 1, 6, 5, 3, 5, 2, 3, 30, 3, 5, 14, 30, 1, 30, 1, 2, 1, 1, 2, 2, 4, 4, 14, 1, 1, 1, 1, 2, 4, 2, 29, 2, 2, 2, 2, 2, 2, 3, 2, 1, 2, 1, 2, 2, 2, 2, 2, 3, 4, 3, 1, 2, 1, 1, 2, 2, 2, 2, 3, 2, 7, 4, 29, 1, 2, 7, 1, 3, 4, 2, 2, 1, 3, 2, 3, 2, 2, 3, 2, 1, 1, 2, 5, 5, 4, 3, 1, 1, 1, 3, 1, 1, 1, 2, 5, 2, 10, 3, 5, 1, 1, 2, 5, 1, 4, 1, 2, 1, 1, 4, 4, 2, 1, 2, 1, 3, 12, 31, 2, 5, 1, 2, 5, 2, 3, 2, 1, 31, 2, 10, 2, 1, 2, 1, 1, 1, 2, 2, 2, 1, 4, 2, 1, 2, 15, 2, 3, 5, 1, 5, 1, 3, 2, 2, 6, 1, 2, 1, 30, 1, 4, 2, 2, 1, 1, 1, 3, 2, 2, 5, 30, 1, 30, 5, 2, 1, 3, 2, 2, 2, 2, 7, 2, 1, 1, 2, 1, 2, 5, 2, 3, 5, 1, 1, 30, 30, 2, 2, 1, 5, 2, 2, 2, 2, 2, 1, 1, 3, 1, 2, 28, 3, 2, 3, 5, 2, 1, 31, 2, 2, 1, 2, 1, 8, 2, 1, 1, 2, 2, 2, 2, 4, 5, 5, 3, 31, 2, 2, 1, 2, 15, 2, 2, 2, 30, 2, 4, 1, 2, 3, 3, 2, 2, 1, 2, 2, 4, 5, 5, 2, 2, 1, 30, 3, 5, 2, 29, 30, 3, 1, 20, 2, 1, 1, 1, 2, 2, 30, 31, 1, 1, 1, 2, 2, 2, 3, 1, 3, 2, 1, 7, 1, 2, 1, 2, 2, 4, 2, 6, 2, 17, 30, 2, 3, 2, 4, 2, 1, 1, 7, 4, 1, 3, 2, 1, 3, 2, 3, 1, 1, 3, 2, 6, 1, 31, 2, 3, 3, 1, 1, 3, 1, 1, 31, 1, 2, 7, 7, 7, 5, 1, 2, 2, 1, 1, 3, 2, 1, 4, 2, 1, 2, 1, 7, 3, 1, 2, 3, 1, 2, 1, 1, 1, 1, 2, 7, 3, 2, 1, 3, 3, 1, 2, 30, 2, 4, 3, 3, 2, 2, 2, 2, 2, 3, 2, 1, 1, 3, 2, 1, 2, 1, 20, 1, 2, 1, 2, 5, 3, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 31, 4, 5, 2, 2, 2, 2, 25, 31, 2, 2, 2, 2, 5, 30, 1, 30, 30, 1, 14, 3, 4, 1, 1, 4, 4, 1, 1, 31, 31, 2, 3, 1, 1, 7, 30, 2, 3, 7, 5, 4, 1, 2, 5, 1, 1, 1, 3, 2, 5, 4, 2, 1, 5, 2, 4, 1, 2, 5, 2, 3, 6, 7, 5, 3, 3, 2, 1, 1, 1, 1, 2, 5, 30, 2, 2, 2, 1, 2, 5, 1, 7, 2, 7, 7, 1, 2, 2, 2, 2, 2, 1, 3, 3, 14, 1, 2, 1, 3, 3, 1, 1, 1, 1, 1, 3, 7, 1, 2, 3, 2, 1, 3, 2, 2, 6, 2, 30, 2, 2, 3, 3, 2, 1, 2, 2, 2, 1, 5, 3, 30, 1, 2, 2, 1, 3, 1, 30, 2, 30, 2, 5, 30, 1, 1, 12, 2, 1, 3, 1, 3, 2, 2, 2, 2, 3, 1, 1, 3, 1, 5, 1, 2, 15, 1, 1, 2, 4, 4, 4, 2, 1, 1, 4, 1, 1, 1, 2, 1, 1, 2, 4, 2, 2, 1, 2, 1, 3, 1, 5, 1, 2, 1, 1, 1, 2, 1, 1, 3, 2, 1, 30, 14, 1, 1, 30, 1, 4, 1, 1, 2, 1, 2, 30, 7, 2, 1, 1, 3, 4, 3, 30, 1, 1, 3, 1, 3, 1, 1, 1, 2, 2, 5, 5, 1, 3, 7, 2, 4, 1, 2, 2, 1, 1, 3, 3, 1, 1, 2, 1, 1, 3, 2, 1, 3, 1, 3, 5, 2, 2, 5, 5, 3, 1, 2, 3, 18, 14, 1, 5, 1, 1, 1, 1, 1, 2, 3, 2, 7, 1, 1, 14, 1, 2, 1, 1, 2, 3, 7, 4, 7, 1, 4, 3, 7, 3, 4, 2, 30, 7, 3, 2, 2, 1, 2, 1, 2, 7, 2, 1, 29, 3, 1, 1, 10, 1, 1, 3, 5, 6, 2, 3, 5, 3, 3, 1, 6, 4, 6, 4, 1, 2, 3, 5, 1, 1, 1, 1, 2, 3, 3, 2, 1, 5, 2, 1, 2, 1, 1, 6, 2, 3, 2, 5, 1, 6, 3, 1, 1, 2, 1, 1, 2, 1, 4, 1, 30, 1, 3, 3, 30, 3, 2, 1, 30, 4, 3, 2, 2, 3, 1, 4, 1, 1, 1, 3, 1, 29, 1, 1, 1, 2, 2, 2, 1, 6, 4, 3, 2, 2, 1, 1, 1, 10, 1, 7, 2, 1, 4, 1, 4, 2, 4, 1, 1, 1, 1, 3, 3, 5, 1, 2, 5, 6, 3, 3, 3, 3, 28, 2, 3, 3, 2, 2, 5, 3, 5, 5, 1, 1, 6, 1, 1, 1, 1, 6, 1, 4, 5, 1, 5, 1, 2, 2, 30, 2, 4, 3, 2, 1, 3, 1, 1, 5, 3, 7, 2, 3, 4, 7, 3, 2, 4, 2, 2, 7, 30, 2, 3, 3, 1, 5, 1, 2, 5, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 6, 2, 4, 2, 1, 1, 1, 1, 2, 3, 2, 1, 6, 1, 1, 4, 1, 2, 2, 2, 3, 2, 2, 3, 2, 3, 1, 6, 4, 7, 3, 1, 2, 2, 1, 2, 2, 3, 3, 14, 1, 2, 1, 2, 5, 1, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 4, 2, 2, 1, 1, 6, 1, 10, 4, 2, 3, 5, 3, 31, 3, 1, 7, 3, 6, 7, 1, 7, 7, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 2, 1, 30, 2, 1, 2, 1, 2, 4, 4, 2, 3, 3, 1, 2, 1, 2, 2, 2, 1, 1, 30, 30, 3, 1, 1, 3, 1, 2, 2, 2, 1, 1, 1, 2, 3, 3, 1, 3, 2, 21, 3, 2, 3, 2, 1, 1, 2, 3, 5, 3, 1, 1, 1, 3, 1, 2, 7, 3, 2, 2, 3, 5, 1, 2, 4, 2, 12, 1, 3, 5, 1, 1, 2, 1, 2, 2, 4, 1, 1, 1, 2, 29, 2, 2, 14, 10, 2, 2, 6, 4, 2, 3, 2, 1, 2, 2, 3, 1, 3, 2, 2, 3, 3, 3, 31, 2, 3, 2, 1, 1, 2, 2, 2, 2, 1, 30, 3, 2, 1, 3, 2, 3, 1, 1, 1, 1, 5, 1, 7, 1, 1, 2, 3, 1, 3, 1, 1, 1, 1, 1, 5, 2, 1, 1, 3, 3, 1, 3, 5, 15, 4, 1, 2, 1, 3, 30, 1, 3, 5, 1, 2, 1, 1, 3, 2, 2, 2, 2, 1, 1, 1, 5, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 3, 1, 2, 3, 1, 2, 1, 2, 1, 7, 2, 1, 3, 3, 2, 1, 2, 5, 3, 3, 1, 3, 1, 1, 4, 3, 1, 15, 2, 1, 1, 3, 3, 2, 2, 1, 3, 3, 1, 3, 2, 5, 1, 1, 1, 2, 1, 1, 1, 1, 3, 4, 3, 1, 1, 3, 1, 2, 2, 1, 1, 2, 2, 1, 2, 3, 2, 2, 2, 2, 2, 2, 3, 1, 3, 1, 3, 1, 2, 3, 2, 1, 1, 7, 1, 3, 2, 3, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 5, 2, 2, 1, 4, 1, 1, 2, 14, 2, 2, 2, 1, 3, 4, 3, 1, 2, 5, 9, 1, 2, 30, 1, 1, 2, 4, 2, 3, 2, 1, 3, 3, 1, 3, 1, 2, 3, 1, 3, 2, 1, 4, 1, 1, 3, 2, 1, 1, 1, 3, 1, 3, 1, 7, 1, 1, 3, 1, 1, 4, 1, 30, 30, 30, 3, 2, 1, 2, 3, 3, 2, 1, 2, 3, 2, 1, 2, 6, 3, 2, 2, 2, 1, 1, 3, 1, 1, 5, 7, 5, 3, 2, 2, 1, 2, 3, 3, 14, 1, 1, 3, 3, 3, 1, 2, 5, 1, 1, 1, 2, 5, 2, 1, 1, 3, 1, 2, 3, 2, 3, 2, 1, 4, 14, 2, 3, 3, 3, 3, 2, 3, 1, 3, 1, 1, 7, 1, 1, 1, 1, 15, 1, 2, 1, 3, 8, 3, 3, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 14, 2, 2, 1, 7, 1, 3, 1, 14, 1, 7, 3, 2, 3, 1, 2, 3, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 3, 2, 4, 7, 1, 1, 1, 1, 2, 2, 3, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 20, 2, 3, 1, 7, 3, 1, 1, 3, 3, 3, 3, 3, 1, 2, 2, 3, 5, 2, 4, 6, 2, 2, 1, 3, 5, 2, 1, 7, 4, 1, 1, 3, 2, 1, 2, 2, 1, 2, 2, 3, 3, 2, 3, 1, 1, 2, 5, 1, 2, 1, 2, 2, 2, 2, 4, 2, 2, 4, 1, 1, 30, 1, 2, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 2, 1, 3, 1, 1, 1, 1, 2, 1, 2, 30, 2, 1, 3, 3, 2, 1, 2, 2, 2, 9, 1, 3, 2, 1, 30, 1, 1, 3, 1, 3, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 5, 3, 3, 5, 1, 1, 1, 3, 2, 1, 4, 1, 1, 3, 1, 1, 1, 2, 3, 2, 1, 4, 2, 1, 30, 3, 1, 2, 1, 2, 2, 3, 3, 1, 1, 1, 1, 3, 3, 1, 1, 3, 2, 3, 3, 2, 3, 2, 1, 3, 3, 3, 3, 4, 3, 4, 2, 4, 3, 3, 3, 3, 3, 5, 3, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 1, 1, 2, 1, 2, 4, 3, 4, 2, 30, 1, 3, 2, 1, 1, 1, 3, 3, 3, 3, 2, 1, 3, 1, 1, 7, 2, 2, 2, 3, 3, 1, 2, 1, 2, 1, 3, 3, 2, 7, 3, 21, 1, 21, 1, 1, 1, 3, 2, 3, 2, 3, 3, 1, 2, 2, 2, 2, 1, 3, 1, 3, 1, 1, 1, 2, 1, 3, 1, 2, 4, 3, 4, 2, 7, 2, 2, 6, 6, 1, 1, 30, 1, 1, 1, 3, 2, 2, 1, 2, 2, 2, 3, 3, 3, 1, 1, 4, 1, 2, 2, 6, 1, 1, 3, 1, 1, 5, 2, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 3, 6, 1, 5, 1, 3, 1, 1, 1, 2, 4, 1, 2, 1, 2, 2, 1, 7, 2, 1, 2, 3, 7, 2, 1, 1, 2, 14, 1, 4, 3, 3, 10, 2, 2, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 5, 2, 4, 1, 4, 1, 3, 30, 1, 2, 2, 3, 2, 1, 4, 1, 2, 2, 1, 2, 1, 2, 2, 3, 2, 1, 2, 5, 3, 3, 7, 1, 4, 3, 1, 3, 1, 3, 3, 3, 3, 2, 2, 2, 8, 7, 4, 4, 2, 1, 2, 2, 7, 3, 3, 3, 3, 2, 1, 2, 4, 2, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 30, 1, 1, 3, 2, 1, 3, 2, 3, 2, 2, 1, 3, 7, 7, 3, 3, 5, 5, 1, 1, 2, 2, 1, 1, 4, 2, 3, 1, 1, 5, 2, 15, 2, 2, 2, 1, 1, 2, 3, 2, 4, 4, 1, 1, 2, 1, 2, 2, 1, 1, 3, 1, 1, 1, 4, 2, 3, 2, 4, 3, 6, 2, 1, 2, 2, 30, 2, 3, 2, 2, 2, 3, 3, 2, 3, 3, 3, 1, 2, 3, 3, 1, 1, 2, 2, 1, 3, 2, 1, 3, 2, 1, 1, 3, 5, 1, 2, 1, 4, 2, 1, 30, 2, 2, 5, 2, 1, 1, 1, 3, 2, 4, 1, 2, 2, 2, 2, 1, 3, 3, 5, 2, 3, 1, 3, 1, 3, 14, 3, 3, 2, 1, 3, 3, 7, 2, 1, 3, 3, 1, 2, 3, 1, 2, 3, 3, 2, 1, 3, 1, 1, 1, 1, 2, 3, 1, 1, 2, 10, 3, 1, 2, 2, 2, 3, 2, 2, 3, 1, 1, 1, 2, 4, 3, 3, 1, 1, 2, 3, 1, 1, 3, 2, 1, 1, 1, 1, 1, 3, 2, 2, 6, 4, 3, 1, 2, 1, 3, 15, 1, 5, 3, 1, 30, 1, 3, 2, 1, 1, 3, 2, 2, 1, 2, 1, 4, 2, 1, 3, 3, 3, 1, 4, 1, 3, 1, 3, 1, 1, 3, 1, 1, 2, 1, 1, 3, 5, 2, 5, 1, 2, 1, 7, 5, 3, 5, 31, 1, 2, 1, 30, 30, 5, 2, 2, 1, 1, 1, 2, 2, 3, 2, 3, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 3, 2, 2, 2, 1, 3, 3, 1, 3, 3, 3, 2, 1, 2, 3, 2, 2, 3, 1, 3, 1, 2, 1, 6, 4, 1, 2, 5, 1, 5, 3, 1, 2, 1, 4, 3, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 3, 1, 1, 1, 2, 2, 1, 1, 2, 3, 1, 3, 1, 1, 3, 1, 1, 5, 4, 3, 1, 3, 2, 2, 3, 2, 4, 2, 30, 30, 1, 1, 3, 1, 1, 2, 1, 3, 1, 1, 5, 3, 4, 1, 1, 5, 1, 2, 1, 1, 3, 1, 1, 1, 1, 3, 2, 1, 1, 1, 1, 2, 3, 1, 1, 2, 2, 3, 1, 1, 2, 2, 1, 1, 1, 4, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 1, 4, 2, 1, 2, 1, 2, 2, 1, 1, 1, 3, 3, 2, 1, 1, 3, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 3, 1, 4, 1, 30, 3, 2, 3, 2, 2, 1, 5, 2, 2, 1, 2, 2, 1, 2, 1, 1, 5, 5, 1, 7, 2, 2, 1, 3, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 7, 1, 1, 8, 3, 1, 2, 1, 2, 1, 1, 3, 7, 3, 2, 1, 1, 1, 2, 3, 1, 1, 3, 3, 1, 2, 1, 1, 2, 2, 3, 5, 2, 3, 5, 1, 1, 3, 3, 3, 3, 1, 1, 2, 3, 2, 4, 1, 4, 2, 3, 2, 3, 2, 1, 4, 2, 1, 1, 2, 3, 1, 2, 3, 1, 1, 2, 1, 1, 1, 1, 2, 2, 30, 2, 2, 2, 1, 5, 2, 2, 2, 2, 1, 5, 1, 3, 1, 1, 2, 1, 2, 1, 1, 1, 5, 7, 2, 7, 5, 2, 2, 2, 21, 1, 1, 1, 2, 1, 1, 1, 1, 1, 4, 2, 2, 1, 1, 2, 2, 4, 2, 2, 1, 2, 1, 1, 2, 3, 1, 1, 1, 3, 1, 1, 1, 1, 1, 3, 3, 1, 1, 1, 1, 1, 1, 2, 1, 3, 30, 1, 1, 1, 5, 1, 1, 1, 1, 3, 1, 1, 3, 1, 2, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 2, 1, 3, 1, 1, 2, 1, 1, 4, 2, 1, 1, 1, 3, 2, 1, 2, 1, 1, 3, 1, 4, 3, 1, 1, 1, 1], \"xaxis\": \"x\", \"yaxis\": \"y\"}],\n",
              "                        {\"barmode\": \"relative\", \"legend\": {\"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"minimum_nights\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"count\"}}},\n",
              "                        {\"responsive\": true}\n",
              "                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('ed10026b-3b81-4581-94ab-2a56164fc8c6');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })\n",
              "                };\n",
              "                \n",
              "            </script>\n",
              "        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "c-WpiVqVby8a"
      },
      "source": [
        "df = df.drop(columns = ['host_id','host_name','Unnamed: 0','index'])"
      ],
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6JaEeOpammHh",
        "outputId": "86ec0f54-8b38-46ca-f9b0-7f5e6ac6bfa2"
      },
      "source": [
        "df.isnull().sum()"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "neighbourhood_group               0\n",
              "neighbourhood                     0\n",
              "latitude                          0\n",
              "longitude                         0\n",
              "room_type                         0\n",
              "price                             0\n",
              "minimum_nights                    0\n",
              "number_of_reviews                 0\n",
              "last_review                       0\n",
              "reviews_per_month                 0\n",
              "calculated_host_listings_count    0\n",
              "availability_365                  0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yVDtyjt2p_Zl",
        "outputId": "53fd6fc6-163d-4e92-fcb3-0dc5619c57ca"
      },
      "source": [
        "df.info()"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 37369 entries, 0 to 37368\n",
            "Data columns (total 12 columns):\n",
            " #   Column                          Non-Null Count  Dtype  \n",
            "---  ------                          --------------  -----  \n",
            " 0   neighbourhood_group             37369 non-null  object \n",
            " 1   neighbourhood                   37369 non-null  object \n",
            " 2   latitude                        37369 non-null  float64\n",
            " 3   longitude                       37369 non-null  float64\n",
            " 4   room_type                       37369 non-null  object \n",
            " 5   price                           37369 non-null  int64  \n",
            " 6   minimum_nights                  37369 non-null  int64  \n",
            " 7   number_of_reviews               37369 non-null  int64  \n",
            " 8   last_review                     37369 non-null  object \n",
            " 9   reviews_per_month               37369 non-null  float64\n",
            " 10  calculated_host_listings_count  37369 non-null  int64  \n",
            " 11  availability_365                37369 non-null  int64  \n",
            "dtypes: float64(3), int64(5), object(4)\n",
            "memory usage: 3.4+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-4YJvZ_YAsuD",
        "outputId": "3905d42b-5d0c-41d1-9399-0ae011f336b9"
      },
      "source": [
        "df['last_review'].astype(str)"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        2018-10-19\n",
              "1        2019-05-21\n",
              "2        2019-07-05\n",
              "3        2018-11-19\n",
              "4        2019-06-22\n",
              "            ...    \n",
              "37364    2019-07-07\n",
              "37365    2019-07-07\n",
              "37366    2019-07-07\n",
              "37367    2019-07-07\n",
              "37368    2019-07-07\n",
              "Name: last_review, Length: 37369, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KEFSGrInAJ4y"
      },
      "source": [
        "def to_year(x):\n",
        "  return x.split('-')[0]\n",
        "\n",
        "def to_month(x):\n",
        "  return x.split('-')[1]\n",
        "\n",
        "def to_day(x):\n",
        "  return x.split('-')[2]\n",
        "\n",
        "df['year'] = df.last_review.apply(to_year)\n",
        "df['month'] = df.last_review.apply(to_month)\n",
        "df['day'] = df.last_review.apply(to_day)"
      ],
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2SAz93JeBiRH"
      },
      "source": [
        "dates = sorted(df.last_review.drop_duplicates())\n",
        "\n",
        "date_dict = {}\n",
        "i = 0\n",
        "for date in dates:\n",
        "    date_dict[date] = i\n",
        "    i += 1"
      ],
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IEtgWis2BxDr"
      },
      "source": [
        "df['date_id'] = df.last_review.apply(lambda x: date_dict[x])"
      ],
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 317
        },
        "id": "2kcpYu2udqbp",
        "outputId": "abf4570f-d4d9-43a4-cdd8-541057b1b9f9"
      },
      "source": [
        "df.describe()"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>latitude</th>\n",
              "      <th>longitude</th>\n",
              "      <th>price</th>\n",
              "      <th>minimum_nights</th>\n",
              "      <th>number_of_reviews</th>\n",
              "      <th>reviews_per_month</th>\n",
              "      <th>calculated_host_listings_count</th>\n",
              "      <th>availability_365</th>\n",
              "      <th>date_id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>37369.000000</td>\n",
              "      <td>37369.000000</td>\n",
              "      <td>37369.000000</td>\n",
              "      <td>37369.000000</td>\n",
              "      <td>37369.000000</td>\n",
              "      <td>37369.000000</td>\n",
              "      <td>37369.000000</td>\n",
              "      <td>37369.000000</td>\n",
              "      <td>37369.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>40.728258</td>\n",
              "      <td>-73.951141</td>\n",
              "      <td>130.685194</td>\n",
              "      <td>4.960341</td>\n",
              "      <td>29.672028</td>\n",
              "      <td>1.385190</td>\n",
              "      <td>5.177714</td>\n",
              "      <td>113.243598</td>\n",
              "      <td>1474.740373</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.054858</td>\n",
              "      <td>0.046491</td>\n",
              "      <td>85.850110</td>\n",
              "      <td>7.458547</td>\n",
              "      <td>48.534142</td>\n",
              "      <td>1.688426</td>\n",
              "      <td>26.678298</td>\n",
              "      <td>128.854771</td>\n",
              "      <td>399.346565</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>40.506410</td>\n",
              "      <td>-74.244420</td>\n",
              "      <td>34.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.010000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>40.688740</td>\n",
              "      <td>-73.982340</td>\n",
              "      <td>70.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>0.190000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>40.721610</td>\n",
              "      <td>-73.954770</td>\n",
              "      <td>103.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>0.730000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>53.000000</td>\n",
              "      <td>1697.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>40.763220</td>\n",
              "      <td>-73.935490</td>\n",
              "      <td>166.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>34.000000</td>\n",
              "      <td>2.050000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>224.000000</td>\n",
              "      <td>1731.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>40.913060</td>\n",
              "      <td>-73.712990</td>\n",
              "      <td>550.000000</td>\n",
              "      <td>40.000000</td>\n",
              "      <td>629.000000</td>\n",
              "      <td>58.500000</td>\n",
              "      <td>327.000000</td>\n",
              "      <td>365.000000</td>\n",
              "      <td>1746.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           latitude     longitude  ...  availability_365       date_id\n",
              "count  37369.000000  37369.000000  ...      37369.000000  37369.000000\n",
              "mean      40.728258    -73.951141  ...        113.243598   1474.740373\n",
              "std        0.054858      0.046491  ...        128.854771    399.346565\n",
              "min       40.506410    -74.244420  ...          0.000000      0.000000\n",
              "25%       40.688740    -73.982340  ...          0.000000   1386.000000\n",
              "50%       40.721610    -73.954770  ...         53.000000   1697.000000\n",
              "75%       40.763220    -73.935490  ...        224.000000   1731.000000\n",
              "max       40.913060    -73.712990  ...        365.000000   1746.000000\n",
              "\n",
              "[8 rows x 9 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 609
        },
        "id": "RqxPaUAQxhA0",
        "outputId": "7466a52f-d9f4-4a22-f363-d29f5be587f2"
      },
      "source": [
        "df"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>neighbourhood_group</th>\n",
              "      <th>neighbourhood</th>\n",
              "      <th>latitude</th>\n",
              "      <th>longitude</th>\n",
              "      <th>room_type</th>\n",
              "      <th>price</th>\n",
              "      <th>minimum_nights</th>\n",
              "      <th>number_of_reviews</th>\n",
              "      <th>last_review</th>\n",
              "      <th>reviews_per_month</th>\n",
              "      <th>calculated_host_listings_count</th>\n",
              "      <th>availability_365</th>\n",
              "      <th>year</th>\n",
              "      <th>month</th>\n",
              "      <th>day</th>\n",
              "      <th>date_id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Brooklyn</td>\n",
              "      <td>Kensington</td>\n",
              "      <td>40.64749</td>\n",
              "      <td>-73.97237</td>\n",
              "      <td>Private room</td>\n",
              "      <td>149</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "      <td>2018-10-19</td>\n",
              "      <td>0.21</td>\n",
              "      <td>6</td>\n",
              "      <td>365</td>\n",
              "      <td>2018</td>\n",
              "      <td>10</td>\n",
              "      <td>19</td>\n",
              "      <td>1484</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Manhattan</td>\n",
              "      <td>Midtown</td>\n",
              "      <td>40.75362</td>\n",
              "      <td>-73.98377</td>\n",
              "      <td>Entire home/apt</td>\n",
              "      <td>225</td>\n",
              "      <td>1</td>\n",
              "      <td>45</td>\n",
              "      <td>2019-05-21</td>\n",
              "      <td>0.38</td>\n",
              "      <td>2</td>\n",
              "      <td>355</td>\n",
              "      <td>2019</td>\n",
              "      <td>05</td>\n",
              "      <td>21</td>\n",
              "      <td>1698</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Brooklyn</td>\n",
              "      <td>Clinton Hill</td>\n",
              "      <td>40.68514</td>\n",
              "      <td>-73.95976</td>\n",
              "      <td>Entire home/apt</td>\n",
              "      <td>89</td>\n",
              "      <td>1</td>\n",
              "      <td>270</td>\n",
              "      <td>2019-07-05</td>\n",
              "      <td>4.64</td>\n",
              "      <td>1</td>\n",
              "      <td>194</td>\n",
              "      <td>2019</td>\n",
              "      <td>07</td>\n",
              "      <td>05</td>\n",
              "      <td>1743</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manhattan</td>\n",
              "      <td>East Harlem</td>\n",
              "      <td>40.79851</td>\n",
              "      <td>-73.94399</td>\n",
              "      <td>Entire home/apt</td>\n",
              "      <td>80</td>\n",
              "      <td>10</td>\n",
              "      <td>9</td>\n",
              "      <td>2018-11-19</td>\n",
              "      <td>0.10</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2018</td>\n",
              "      <td>11</td>\n",
              "      <td>19</td>\n",
              "      <td>1515</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Manhattan</td>\n",
              "      <td>Murray Hill</td>\n",
              "      <td>40.74767</td>\n",
              "      <td>-73.97500</td>\n",
              "      <td>Entire home/apt</td>\n",
              "      <td>200</td>\n",
              "      <td>3</td>\n",
              "      <td>74</td>\n",
              "      <td>2019-06-22</td>\n",
              "      <td>0.59</td>\n",
              "      <td>1</td>\n",
              "      <td>129</td>\n",
              "      <td>2019</td>\n",
              "      <td>06</td>\n",
              "      <td>22</td>\n",
              "      <td>1730</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37364</th>\n",
              "      <td>Brooklyn</td>\n",
              "      <td>Brooklyn Heights</td>\n",
              "      <td>40.69827</td>\n",
              "      <td>-73.99649</td>\n",
              "      <td>Entire home/apt</td>\n",
              "      <td>550</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2019-07-07</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1</td>\n",
              "      <td>230</td>\n",
              "      <td>2019</td>\n",
              "      <td>07</td>\n",
              "      <td>07</td>\n",
              "      <td>1745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37365</th>\n",
              "      <td>Manhattan</td>\n",
              "      <td>Upper East Side</td>\n",
              "      <td>40.78099</td>\n",
              "      <td>-73.95366</td>\n",
              "      <td>Private room</td>\n",
              "      <td>129</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2019-07-07</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1</td>\n",
              "      <td>147</td>\n",
              "      <td>2019</td>\n",
              "      <td>07</td>\n",
              "      <td>07</td>\n",
              "      <td>1745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37366</th>\n",
              "      <td>Queens</td>\n",
              "      <td>Flushing</td>\n",
              "      <td>40.75104</td>\n",
              "      <td>-73.81459</td>\n",
              "      <td>Private room</td>\n",
              "      <td>45</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2019-07-07</td>\n",
              "      <td>1.00</td>\n",
              "      <td>6</td>\n",
              "      <td>339</td>\n",
              "      <td>2019</td>\n",
              "      <td>07</td>\n",
              "      <td>07</td>\n",
              "      <td>1745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37367</th>\n",
              "      <td>Staten Island</td>\n",
              "      <td>Great Kills</td>\n",
              "      <td>40.54179</td>\n",
              "      <td>-74.14275</td>\n",
              "      <td>Private room</td>\n",
              "      <td>235</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2019-07-07</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1</td>\n",
              "      <td>87</td>\n",
              "      <td>2019</td>\n",
              "      <td>07</td>\n",
              "      <td>07</td>\n",
              "      <td>1745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37368</th>\n",
              "      <td>Bronx</td>\n",
              "      <td>Mott Haven</td>\n",
              "      <td>40.80787</td>\n",
              "      <td>-73.92400</td>\n",
              "      <td>Entire home/apt</td>\n",
              "      <td>100</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2019-07-07</td>\n",
              "      <td>2.00</td>\n",
              "      <td>1</td>\n",
              "      <td>40</td>\n",
              "      <td>2019</td>\n",
              "      <td>07</td>\n",
              "      <td>07</td>\n",
              "      <td>1745</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>37369 rows × 16 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      neighbourhood_group     neighbourhood  latitude  ...  month day  date_id\n",
              "0                Brooklyn        Kensington  40.64749  ...     10  19     1484\n",
              "1               Manhattan           Midtown  40.75362  ...     05  21     1698\n",
              "2                Brooklyn      Clinton Hill  40.68514  ...     07  05     1743\n",
              "3               Manhattan       East Harlem  40.79851  ...     11  19     1515\n",
              "4               Manhattan       Murray Hill  40.74767  ...     06  22     1730\n",
              "...                   ...               ...       ...  ...    ...  ..      ...\n",
              "37364            Brooklyn  Brooklyn Heights  40.69827  ...     07  07     1745\n",
              "37365           Manhattan   Upper East Side  40.78099  ...     07  07     1745\n",
              "37366              Queens          Flushing  40.75104  ...     07  07     1745\n",
              "37367       Staten Island       Great Kills  40.54179  ...     07  07     1745\n",
              "37368               Bronx        Mott Haven  40.80787  ...     07  07     1745\n",
              "\n",
              "[37369 rows x 16 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TuceUZYOG7jU",
        "outputId": "1d3d0bff-d839-4c4d-f7eb-2062c0f358e6"
      },
      "source": [
        "#for user request\n",
        "user_request =df.iloc[37368,:]\n",
        "print(user_request)\n",
        "\n",
        "#to remove user request from machine learning testing\n",
        "df = df.iloc[:37367,:]"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "neighbourhood_group                         Bronx\n",
            "neighbourhood                          Mott Haven\n",
            "latitude                                  40.8079\n",
            "longitude                                 -73.924\n",
            "room_type                         Entire home/apt\n",
            "price                                         100\n",
            "minimum_nights                                  1\n",
            "number_of_reviews                               2\n",
            "last_review                            2019-07-07\n",
            "reviews_per_month                               2\n",
            "calculated_host_listings_count                  1\n",
            "availability_365                               40\n",
            "year                                         2019\n",
            "month                                          07\n",
            "day                                            07\n",
            "date_id                                      1745\n",
            "Name: 37368, dtype: object\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FS-e3fPmRSs8"
      },
      "source": [
        "from pycaret.regression import *"
      ],
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "4e61b01d79a748138ff0a57ae98cd036",
            "b912e18879bd49fc830954739b43e3a9",
            "2387d52524e942eea64deeb4241bffeb",
            "18b95d05864d446eb0717039e91bf9ea",
            "7fedd176274e4bcb9b821830e3feef14",
            "4641e402dd7149c8890588c611355bb8"
          ]
        },
        "id": "wvKd_2EKz66f",
        "outputId": "6544c3af-d240-41e8-e2bd-3ace37a63136"
      },
      "source": [
        "model = setup(\n",
        "    data=df,\n",
        "    target='price',\n",
        "    ignore_features=['last_review'],\n",
        "    train_size = 0.9\n",
        "    \n",
        ")"
      ],
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Description</th>\n",
              "      <th>Value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>session_id</td>\n",
              "      <td>3814</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Target</td>\n",
              "      <td>price</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Original Data</td>\n",
              "      <td>(37367, 16)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Missing Values</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Numeric Features</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Categorical Features</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Ordinal Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>High Cardinality Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>High Cardinality Method</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Transformed Train Set</td>\n",
              "      <td>(33630, 255)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Transformed Test Set</td>\n",
              "      <td>(3737, 255)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Shuffle Train-Test</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Stratify Train-Test</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Fold Generator</td>\n",
              "      <td>KFold</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Fold Number</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>CPU Jobs</td>\n",
              "      <td>-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Use GPU</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Log Experiment</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Experiment Name</td>\n",
              "      <td>reg-default-name</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>USI</td>\n",
              "      <td>7da1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Imputation Type</td>\n",
              "      <td>simple</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Iterative Imputation Iteration</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Numeric Imputer</td>\n",
              "      <td>mean</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Iterative Imputation Numeric Model</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Categorical Imputer</td>\n",
              "      <td>constant</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Iterative Imputation Categorical Model</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Unknown Categoricals Handling</td>\n",
              "      <td>least_frequent</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Normalize</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Normalize Method</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>Transformation</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Transformation Method</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>PCA</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>PCA Method</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>PCA Components</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>Ignore Low Variance</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Combine Rare Levels</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Rare Level Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Numeric Binning</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>Remove Outliers</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Outliers Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Remove Multicollinearity</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>Multicollinearity Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Remove Perfect Collinearity</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Clustering</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>Clustering Iteration</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Polynomial Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Polynomial Degree</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>Trignometry Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>Polynomial Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>Group Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>Feature Selection</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>Feature Selection Method</td>\n",
              "      <td>classic</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Features Selection Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>Feature Interaction</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>Feature Ratio</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>Interaction Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>56</th>\n",
              "      <td>Transform Target</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>Transform Target Method</td>\n",
              "      <td>box-cox</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                               Description             Value\n",
              "0                               session_id              3814\n",
              "1                                   Target             price\n",
              "2                            Original Data       (37367, 16)\n",
              "3                           Missing Values             False\n",
              "4                         Numeric Features                 9\n",
              "5                     Categorical Features                 5\n",
              "6                         Ordinal Features             False\n",
              "7                High Cardinality Features             False\n",
              "8                  High Cardinality Method              None\n",
              "9                    Transformed Train Set      (33630, 255)\n",
              "10                    Transformed Test Set       (3737, 255)\n",
              "11                      Shuffle Train-Test              True\n",
              "12                     Stratify Train-Test             False\n",
              "13                          Fold Generator             KFold\n",
              "14                             Fold Number                10\n",
              "15                                CPU Jobs                -1\n",
              "16                                 Use GPU             False\n",
              "17                          Log Experiment             False\n",
              "18                         Experiment Name  reg-default-name\n",
              "19                                     USI              7da1\n",
              "20                         Imputation Type            simple\n",
              "21          Iterative Imputation Iteration              None\n",
              "22                         Numeric Imputer              mean\n",
              "23      Iterative Imputation Numeric Model              None\n",
              "24                     Categorical Imputer          constant\n",
              "25  Iterative Imputation Categorical Model              None\n",
              "26           Unknown Categoricals Handling    least_frequent\n",
              "27                               Normalize             False\n",
              "28                        Normalize Method              None\n",
              "29                          Transformation             False\n",
              "30                   Transformation Method              None\n",
              "31                                     PCA             False\n",
              "32                              PCA Method              None\n",
              "33                          PCA Components              None\n",
              "34                     Ignore Low Variance             False\n",
              "35                     Combine Rare Levels             False\n",
              "36                    Rare Level Threshold              None\n",
              "37                         Numeric Binning             False\n",
              "38                         Remove Outliers             False\n",
              "39                      Outliers Threshold              None\n",
              "40                Remove Multicollinearity             False\n",
              "41             Multicollinearity Threshold              None\n",
              "42             Remove Perfect Collinearity              True\n",
              "43                              Clustering             False\n",
              "44                    Clustering Iteration              None\n",
              "45                     Polynomial Features             False\n",
              "46                       Polynomial Degree              None\n",
              "47                    Trignometry Features             False\n",
              "48                    Polynomial Threshold              None\n",
              "49                          Group Features             False\n",
              "50                       Feature Selection             False\n",
              "51                Feature Selection Method           classic\n",
              "52            Features Selection Threshold              None\n",
              "53                     Feature Interaction             False\n",
              "54                           Feature Ratio             False\n",
              "55                   Interaction Threshold              None\n",
              "56                        Transform Target             False\n",
              "57                 Transform Target Method           box-cox"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 473
        },
        "id": "AHv-6EzH0v8Y",
        "outputId": "8d14d24b-40d3-4288-ba55-e722ef6be318"
      },
      "source": [
        "get_config('X_train')"
      ],
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>latitude</th>\n",
              "      <th>longitude</th>\n",
              "      <th>minimum_nights</th>\n",
              "      <th>number_of_reviews</th>\n",
              "      <th>reviews_per_month</th>\n",
              "      <th>calculated_host_listings_count</th>\n",
              "      <th>availability_365</th>\n",
              "      <th>day</th>\n",
              "      <th>date_id</th>\n",
              "      <th>neighbourhood_group_Bronx</th>\n",
              "      <th>neighbourhood_group_Brooklyn</th>\n",
              "      <th>neighbourhood_group_Manhattan</th>\n",
              "      <th>neighbourhood_group_Queens</th>\n",
              "      <th>neighbourhood_group_Staten Island</th>\n",
              "      <th>neighbourhood_Allerton</th>\n",
              "      <th>neighbourhood_Arden Heights</th>\n",
              "      <th>neighbourhood_Arrochar</th>\n",
              "      <th>neighbourhood_Arverne</th>\n",
              "      <th>neighbourhood_Astoria</th>\n",
              "      <th>neighbourhood_Bath Beach</th>\n",
              "      <th>neighbourhood_Battery Park City</th>\n",
              "      <th>neighbourhood_Bay Ridge</th>\n",
              "      <th>neighbourhood_Bay Terrace</th>\n",
              "      <th>neighbourhood_Bay Terrace Staten Island</th>\n",
              "      <th>neighbourhood_Baychester</th>\n",
              "      <th>neighbourhood_Bayside</th>\n",
              "      <th>neighbourhood_Bayswater</th>\n",
              "      <th>neighbourhood_Bedford-Stuyvesant</th>\n",
              "      <th>neighbourhood_Belle Harbor</th>\n",
              "      <th>neighbourhood_Bellerose</th>\n",
              "      <th>neighbourhood_Belmont</th>\n",
              "      <th>neighbourhood_Bensonhurst</th>\n",
              "      <th>neighbourhood_Bergen Beach</th>\n",
              "      <th>neighbourhood_Boerum Hill</th>\n",
              "      <th>neighbourhood_Borough Park</th>\n",
              "      <th>neighbourhood_Breezy Point</th>\n",
              "      <th>neighbourhood_Briarwood</th>\n",
              "      <th>neighbourhood_Brighton Beach</th>\n",
              "      <th>neighbourhood_Bronxdale</th>\n",
              "      <th>neighbourhood_Brooklyn Heights</th>\n",
              "      <th>...</th>\n",
              "      <th>neighbourhood_Vinegar Hill</th>\n",
              "      <th>neighbourhood_Wakefield</th>\n",
              "      <th>neighbourhood_Washington Heights</th>\n",
              "      <th>neighbourhood_West Brighton</th>\n",
              "      <th>neighbourhood_West Farms</th>\n",
              "      <th>neighbourhood_West Village</th>\n",
              "      <th>neighbourhood_Westchester Square</th>\n",
              "      <th>neighbourhood_Westerleigh</th>\n",
              "      <th>neighbourhood_Whitestone</th>\n",
              "      <th>neighbourhood_Williamsbridge</th>\n",
              "      <th>neighbourhood_Williamsburg</th>\n",
              "      <th>neighbourhood_Willowbrook</th>\n",
              "      <th>neighbourhood_Windsor Terrace</th>\n",
              "      <th>neighbourhood_Woodhaven</th>\n",
              "      <th>neighbourhood_Woodlawn</th>\n",
              "      <th>neighbourhood_Woodside</th>\n",
              "      <th>room_type_Entire home/apt</th>\n",
              "      <th>room_type_Private room</th>\n",
              "      <th>room_type_Shared room</th>\n",
              "      <th>year_2011</th>\n",
              "      <th>year_2012</th>\n",
              "      <th>year_2013</th>\n",
              "      <th>year_2014</th>\n",
              "      <th>year_2015</th>\n",
              "      <th>year_2016</th>\n",
              "      <th>year_2017</th>\n",
              "      <th>year_2018</th>\n",
              "      <th>year_2019</th>\n",
              "      <th>month_1</th>\n",
              "      <th>month_10</th>\n",
              "      <th>month_11</th>\n",
              "      <th>month_12</th>\n",
              "      <th>month_2</th>\n",
              "      <th>month_3</th>\n",
              "      <th>month_4</th>\n",
              "      <th>month_5</th>\n",
              "      <th>month_6</th>\n",
              "      <th>month_7</th>\n",
              "      <th>month_8</th>\n",
              "      <th>month_9</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>7387</th>\n",
              "      <td>40.728649</td>\n",
              "      <td>-73.980232</td>\n",
              "      <td>35.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>0.14</td>\n",
              "      <td>1.0</td>\n",
              "      <td>304.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>485.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20725</th>\n",
              "      <td>40.709492</td>\n",
              "      <td>-74.014381</td>\n",
              "      <td>30.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.0</td>\n",
              "      <td>81.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>1738.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10742</th>\n",
              "      <td>40.753422</td>\n",
              "      <td>-73.987289</td>\n",
              "      <td>4.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.07</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>557.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25719</th>\n",
              "      <td>40.709332</td>\n",
              "      <td>-73.947792</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.29</td>\n",
              "      <td>2.0</td>\n",
              "      <td>89.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>1472.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19711</th>\n",
              "      <td>40.733940</td>\n",
              "      <td>-74.004898</td>\n",
              "      <td>30.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.27</td>\n",
              "      <td>6.0</td>\n",
              "      <td>153.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1619.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21207</th>\n",
              "      <td>40.687099</td>\n",
              "      <td>-73.905457</td>\n",
              "      <td>3.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>1.21</td>\n",
              "      <td>4.0</td>\n",
              "      <td>347.0</td>\n",
              "      <td>23.0</td>\n",
              "      <td>1731.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10378</th>\n",
              "      <td>40.642399</td>\n",
              "      <td>-73.912750</td>\n",
              "      <td>2.0</td>\n",
              "      <td>172.0</td>\n",
              "      <td>4.01</td>\n",
              "      <td>2.0</td>\n",
              "      <td>155.0</td>\n",
              "      <td>23.0</td>\n",
              "      <td>1731.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4124</th>\n",
              "      <td>40.735481</td>\n",
              "      <td>-73.988960</td>\n",
              "      <td>5.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>0.50</td>\n",
              "      <td>1.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>1730.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33919</th>\n",
              "      <td>40.649220</td>\n",
              "      <td>-73.933006</td>\n",
              "      <td>1.0</td>\n",
              "      <td>31.0</td>\n",
              "      <td>8.02</td>\n",
              "      <td>3.0</td>\n",
              "      <td>66.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1743.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21348</th>\n",
              "      <td>40.794830</td>\n",
              "      <td>-73.934776</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.09</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>1123.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>33630 rows × 255 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        latitude  longitude  minimum_nights  ...  month_7  month_8  month_9\n",
              "7387   40.728649 -73.980232            35.0  ...      0.0      0.0      0.0\n",
              "20725  40.709492 -74.014381            30.0  ...      0.0      0.0      0.0\n",
              "10742  40.753422 -73.987289             4.0  ...      0.0      0.0      0.0\n",
              "25719  40.709332 -73.947792             2.0  ...      0.0      0.0      0.0\n",
              "19711  40.733940 -74.004898            30.0  ...      0.0      0.0      0.0\n",
              "...          ...        ...             ...  ...      ...      ...      ...\n",
              "21207  40.687099 -73.905457             3.0  ...      0.0      0.0      0.0\n",
              "10378  40.642399 -73.912750             2.0  ...      0.0      0.0      0.0\n",
              "4124   40.735481 -73.988960             5.0  ...      0.0      0.0      0.0\n",
              "33919  40.649220 -73.933006             1.0  ...      1.0      0.0      0.0\n",
              "21348  40.794830 -73.934776             3.0  ...      0.0      0.0      0.0\n",
              "\n",
              "[33630 rows x 255 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 824
        },
        "id": "JxlKh8YX0qso",
        "outputId": "6378a197-b01a-4916-d33a-5dd4b15a56cc"
      },
      "source": [
        "models()"
      ],
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Name</th>\n",
              "      <th>Reference</th>\n",
              "      <th>Turbo</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>lr</th>\n",
              "      <td>Linear Regression</td>\n",
              "      <td>sklearn.linear_model._base.LinearRegression</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>lasso</th>\n",
              "      <td>Lasso Regression</td>\n",
              "      <td>sklearn.linear_model._coordinate_descent.Lasso</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ridge</th>\n",
              "      <td>Ridge Regression</td>\n",
              "      <td>sklearn.linear_model._ridge.Ridge</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>en</th>\n",
              "      <td>Elastic Net</td>\n",
              "      <td>sklearn.linear_model._coordinate_descent.Elast...</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>lar</th>\n",
              "      <td>Least Angle Regression</td>\n",
              "      <td>sklearn.linear_model._least_angle.Lars</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>llar</th>\n",
              "      <td>Lasso Least Angle Regression</td>\n",
              "      <td>sklearn.linear_model._least_angle.LassoLars</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>omp</th>\n",
              "      <td>Orthogonal Matching Pursuit</td>\n",
              "      <td>sklearn.linear_model._omp.OrthogonalMatchingPu...</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>br</th>\n",
              "      <td>Bayesian Ridge</td>\n",
              "      <td>sklearn.linear_model._bayes.BayesianRidge</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ard</th>\n",
              "      <td>Automatic Relevance Determination</td>\n",
              "      <td>sklearn.linear_model._bayes.ARDRegression</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>par</th>\n",
              "      <td>Passive Aggressive Regressor</td>\n",
              "      <td>sklearn.linear_model._passive_aggressive.Passi...</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ransac</th>\n",
              "      <td>Random Sample Consensus</td>\n",
              "      <td>sklearn.linear_model._ransac.RANSACRegressor</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>tr</th>\n",
              "      <td>TheilSen Regressor</td>\n",
              "      <td>sklearn.linear_model._theil_sen.TheilSenRegressor</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>huber</th>\n",
              "      <td>Huber Regressor</td>\n",
              "      <td>sklearn.linear_model._huber.HuberRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>kr</th>\n",
              "      <td>Kernel Ridge</td>\n",
              "      <td>sklearn.kernel_ridge.KernelRidge</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>svm</th>\n",
              "      <td>Support Vector Regression</td>\n",
              "      <td>sklearn.svm._classes.SVR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>knn</th>\n",
              "      <td>K Neighbors Regressor</td>\n",
              "      <td>sklearn.neighbors._regression.KNeighborsRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>dt</th>\n",
              "      <td>Decision Tree Regressor</td>\n",
              "      <td>sklearn.tree._classes.DecisionTreeRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>rf</th>\n",
              "      <td>Random Forest Regressor</td>\n",
              "      <td>sklearn.ensemble._forest.RandomForestRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>et</th>\n",
              "      <td>Extra Trees Regressor</td>\n",
              "      <td>sklearn.ensemble._forest.ExtraTreesRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ada</th>\n",
              "      <td>AdaBoost Regressor</td>\n",
              "      <td>sklearn.ensemble._weight_boosting.AdaBoostRegr...</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>gbr</th>\n",
              "      <td>Gradient Boosting Regressor</td>\n",
              "      <td>sklearn.ensemble._gb.GradientBoostingRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mlp</th>\n",
              "      <td>MLP Regressor</td>\n",
              "      <td>sklearn.neural_network._multilayer_perceptron....</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>lightgbm</th>\n",
              "      <td>Light Gradient Boosting Machine</td>\n",
              "      <td>lightgbm.sklearn.LGBMRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>dummy</th>\n",
              "      <td>Dummy Regressor</td>\n",
              "      <td>sklearn.dummy.DummyRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                       Name  ...  Turbo\n",
              "ID                                           ...       \n",
              "lr                        Linear Regression  ...   True\n",
              "lasso                      Lasso Regression  ...   True\n",
              "ridge                      Ridge Regression  ...   True\n",
              "en                              Elastic Net  ...   True\n",
              "lar                  Least Angle Regression  ...   True\n",
              "llar           Lasso Least Angle Regression  ...   True\n",
              "omp             Orthogonal Matching Pursuit  ...   True\n",
              "br                           Bayesian Ridge  ...   True\n",
              "ard       Automatic Relevance Determination  ...  False\n",
              "par            Passive Aggressive Regressor  ...   True\n",
              "ransac              Random Sample Consensus  ...  False\n",
              "tr                       TheilSen Regressor  ...  False\n",
              "huber                       Huber Regressor  ...   True\n",
              "kr                             Kernel Ridge  ...  False\n",
              "svm               Support Vector Regression  ...  False\n",
              "knn                   K Neighbors Regressor  ...   True\n",
              "dt                  Decision Tree Regressor  ...   True\n",
              "rf                  Random Forest Regressor  ...   True\n",
              "et                    Extra Trees Regressor  ...   True\n",
              "ada                      AdaBoost Regressor  ...   True\n",
              "gbr             Gradient Boosting Regressor  ...   True\n",
              "mlp                           MLP Regressor  ...  False\n",
              "lightgbm    Light Gradient Boosting Machine  ...   True\n",
              "dummy                       Dummy Regressor  ...   True\n",
              "\n",
              "[24 rows x 3 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 368,
          "referenced_widgets": [
            "2e8ab5ca3ed44cbabb59784e534bdcd0",
            "e39ac459e5ef456da9415d4144d3d3bb",
            "64c4910097e4482bbcdf74a1165e0895"
          ]
        },
        "id": "54vhoJF7TWsS",
        "outputId": "f2f7f216-f146-4887-a85f-511e3967d9a9"
      },
      "source": [
        "compare_models(include=['rf','dt','lr','lightgbm','ridge','lasso','huber'],\n",
        "               sort = 'MAPE')"
      ],
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Model</th>\n",
              "      <th>MAE</th>\n",
              "      <th>MSE</th>\n",
              "      <th>RMSE</th>\n",
              "      <th>R2</th>\n",
              "      <th>RMSLE</th>\n",
              "      <th>MAPE</th>\n",
              "      <th>TT (Sec)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>lightgbm</th>\n",
              "      <td>Light Gradient Boosting Machine</td>\n",
              "      <td>38.7465</td>\n",
              "      <td>3569.0170</td>\n",
              "      <td>59.7180</td>\n",
              "      <td>0.5186</td>\n",
              "      <td>0.3612</td>\n",
              "      <td>0.3120</td>\n",
              "      <td>0.526</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>rf</th>\n",
              "      <td>Random Forest Regressor</td>\n",
              "      <td>39.3384</td>\n",
              "      <td>3635.5356</td>\n",
              "      <td>60.2727</td>\n",
              "      <td>0.5097</td>\n",
              "      <td>0.3656</td>\n",
              "      <td>0.3181</td>\n",
              "      <td>42.936</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ridge</th>\n",
              "      <td>Ridge Regression</td>\n",
              "      <td>42.2271</td>\n",
              "      <td>4018.4181</td>\n",
              "      <td>63.3664</td>\n",
              "      <td>0.4581</td>\n",
              "      <td>0.4199</td>\n",
              "      <td>0.3507</td>\n",
              "      <td>0.115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>lr</th>\n",
              "      <td>Linear Regression</td>\n",
              "      <td>42.3016</td>\n",
              "      <td>4029.5525</td>\n",
              "      <td>63.4536</td>\n",
              "      <td>0.4566</td>\n",
              "      <td>0.4224</td>\n",
              "      <td>0.3523</td>\n",
              "      <td>0.358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>lasso</th>\n",
              "      <td>Lasso Regression</td>\n",
              "      <td>44.5531</td>\n",
              "      <td>4448.8200</td>\n",
              "      <td>66.6766</td>\n",
              "      <td>0.4000</td>\n",
              "      <td>0.4228</td>\n",
              "      <td>0.3816</td>\n",
              "      <td>0.118</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>huber</th>\n",
              "      <td>Huber Regressor</td>\n",
              "      <td>48.3496</td>\n",
              "      <td>5705.0680</td>\n",
              "      <td>75.2912</td>\n",
              "      <td>0.2317</td>\n",
              "      <td>0.4673</td>\n",
              "      <td>0.3929</td>\n",
              "      <td>8.972</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>dt</th>\n",
              "      <td>Decision Tree Regressor</td>\n",
              "      <td>53.8686</td>\n",
              "      <td>7240.6659</td>\n",
              "      <td>85.0595</td>\n",
              "      <td>0.0233</td>\n",
              "      <td>0.4961</td>\n",
              "      <td>0.4259</td>\n",
              "      <td>0.705</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                    Model      MAE        MSE     RMSE  \\\n",
              "lightgbm  Light Gradient Boosting Machine  38.7465  3569.0170  59.7180   \n",
              "rf                Random Forest Regressor  39.3384  3635.5356  60.2727   \n",
              "ridge                    Ridge Regression  42.2271  4018.4181  63.3664   \n",
              "lr                      Linear Regression  42.3016  4029.5525  63.4536   \n",
              "lasso                    Lasso Regression  44.5531  4448.8200  66.6766   \n",
              "huber                     Huber Regressor  48.3496  5705.0680  75.2912   \n",
              "dt                Decision Tree Regressor  53.8686  7240.6659  85.0595   \n",
              "\n",
              "              R2   RMSLE    MAPE  TT (Sec)  \n",
              "lightgbm  0.5186  0.3612  0.3120     0.526  \n",
              "rf        0.5097  0.3656  0.3181    42.936  \n",
              "ridge     0.4581  0.4199  0.3507     0.115  \n",
              "lr        0.4566  0.4224  0.3523     0.358  \n",
              "lasso     0.4000  0.4228  0.3816     0.118  \n",
              "huber     0.2317  0.4673  0.3929     8.972  \n",
              "dt        0.0233  0.4961  0.4259     0.705  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,\n",
              "              importance_type='split', learning_rate=0.1, max_depth=-1,\n",
              "              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,\n",
              "              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,\n",
              "              random_state=3814, reg_alpha=0.0, reg_lambda=0.0, silent='warn',\n",
              "              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "1019ec912ba74fb4a4aa4859f94f2362",
            "33cec5a8b1724163a919c906225bbb37",
            "9accf28856114e22ad9840de53894788",
            "5a2a0b8c4d8a499ba69f879de82432dd",
            "07201278b7174d0481341f7ccdb1a973",
            "980b62def5c949c6b07509a4d647071f"
          ]
        },
        "id": "8eKRdZQeRZVH",
        "outputId": "04f54aab-7671-44c0-eb55-7a378be824c9"
      },
      "source": [
        "model = setup(\n",
        "    data=df,\n",
        "    target='price',\n",
        "    normalize=True,                         # pre-processing\n",
        "    normalize_method='zscore',              # pre-processing\n",
        "    ignore_features=['last_review'],\n",
        "    train_size = 0.9\n",
        "    \n",
        ")"
      ],
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Description</th>\n",
              "      <th>Value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>session_id</td>\n",
              "      <td>3023</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Target</td>\n",
              "      <td>price</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Original Data</td>\n",
              "      <td>(37367, 16)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Missing Values</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Numeric Features</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Categorical Features</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Ordinal Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>High Cardinality Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>High Cardinality Method</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Transformed Train Set</td>\n",
              "      <td>(33630, 255)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Transformed Test Set</td>\n",
              "      <td>(3737, 255)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Shuffle Train-Test</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Stratify Train-Test</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Fold Generator</td>\n",
              "      <td>KFold</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Fold Number</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>CPU Jobs</td>\n",
              "      <td>-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Use GPU</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Log Experiment</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Experiment Name</td>\n",
              "      <td>reg-default-name</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>USI</td>\n",
              "      <td>1a5d</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Imputation Type</td>\n",
              "      <td>simple</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Iterative Imputation Iteration</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Numeric Imputer</td>\n",
              "      <td>mean</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Iterative Imputation Numeric Model</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Categorical Imputer</td>\n",
              "      <td>constant</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Iterative Imputation Categorical Model</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Unknown Categoricals Handling</td>\n",
              "      <td>least_frequent</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Normalize</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Normalize Method</td>\n",
              "      <td>zscore</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>Transformation</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Transformation Method</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>PCA</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>PCA Method</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>PCA Components</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>Ignore Low Variance</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Combine Rare Levels</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Rare Level Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Numeric Binning</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>Remove Outliers</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Outliers Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Remove Multicollinearity</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>Multicollinearity Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Remove Perfect Collinearity</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Clustering</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>Clustering Iteration</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Polynomial Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Polynomial Degree</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>Trignometry Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>Polynomial Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>Group Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>Feature Selection</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>Feature Selection Method</td>\n",
              "      <td>classic</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Features Selection Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>Feature Interaction</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>Feature Ratio</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>Interaction Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>56</th>\n",
              "      <td>Transform Target</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>Transform Target Method</td>\n",
              "      <td>box-cox</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                               Description             Value\n",
              "0                               session_id              3023\n",
              "1                                   Target             price\n",
              "2                            Original Data       (37367, 16)\n",
              "3                           Missing Values             False\n",
              "4                         Numeric Features                 9\n",
              "5                     Categorical Features                 5\n",
              "6                         Ordinal Features             False\n",
              "7                High Cardinality Features             False\n",
              "8                  High Cardinality Method              None\n",
              "9                    Transformed Train Set      (33630, 255)\n",
              "10                    Transformed Test Set       (3737, 255)\n",
              "11                      Shuffle Train-Test              True\n",
              "12                     Stratify Train-Test             False\n",
              "13                          Fold Generator             KFold\n",
              "14                             Fold Number                10\n",
              "15                                CPU Jobs                -1\n",
              "16                                 Use GPU             False\n",
              "17                          Log Experiment             False\n",
              "18                         Experiment Name  reg-default-name\n",
              "19                                     USI              1a5d\n",
              "20                         Imputation Type            simple\n",
              "21          Iterative Imputation Iteration              None\n",
              "22                         Numeric Imputer              mean\n",
              "23      Iterative Imputation Numeric Model              None\n",
              "24                     Categorical Imputer          constant\n",
              "25  Iterative Imputation Categorical Model              None\n",
              "26           Unknown Categoricals Handling    least_frequent\n",
              "27                               Normalize              True\n",
              "28                        Normalize Method            zscore\n",
              "29                          Transformation             False\n",
              "30                   Transformation Method              None\n",
              "31                                     PCA             False\n",
              "32                              PCA Method              None\n",
              "33                          PCA Components              None\n",
              "34                     Ignore Low Variance             False\n",
              "35                     Combine Rare Levels             False\n",
              "36                    Rare Level Threshold              None\n",
              "37                         Numeric Binning             False\n",
              "38                         Remove Outliers             False\n",
              "39                      Outliers Threshold              None\n",
              "40                Remove Multicollinearity             False\n",
              "41             Multicollinearity Threshold              None\n",
              "42             Remove Perfect Collinearity              True\n",
              "43                              Clustering             False\n",
              "44                    Clustering Iteration              None\n",
              "45                     Polynomial Features             False\n",
              "46                       Polynomial Degree              None\n",
              "47                    Trignometry Features             False\n",
              "48                    Polynomial Threshold              None\n",
              "49                          Group Features             False\n",
              "50                       Feature Selection             False\n",
              "51                Feature Selection Method           classic\n",
              "52            Features Selection Threshold              None\n",
              "53                     Feature Interaction             False\n",
              "54                           Feature Ratio             False\n",
              "55                   Interaction Threshold              None\n",
              "56                        Transform Target             False\n",
              "57                 Transform Target Method           box-cox"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300,
          "referenced_widgets": [
            "4337628a58ab4da0b595521197f4501f",
            "0c35fdc9b3c34308a469db2ce6b296c2",
            "f0eaa58c18104a89a2c76f4414d9fa4f"
          ]
        },
        "id": "Qt1qcKw6E9aj",
        "outputId": "09ddc086-2227-4b85-aa99-ceaf99d0dca2"
      },
      "source": [
        "compare_models(include=['rf','dt','lr','lightgbm','ridge','lasso','huber'],\n",
        "               sort = 'MAPE')"
      ],
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Model</th>\n",
              "      <th>MAE</th>\n",
              "      <th>MSE</th>\n",
              "      <th>RMSE</th>\n",
              "      <th>R2</th>\n",
              "      <th>RMSLE</th>\n",
              "      <th>MAPE</th>\n",
              "      <th>TT (Sec)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>huber</th>\n",
              "      <td>Huber Regressor</td>\n",
              "      <td>39.7619</td>\n",
              "      <td>4196.2875</td>\n",
              "      <td>64.7682</td>\n",
              "      <td>0.4279</td>\n",
              "      <td>0.3871</td>\n",
              "      <td>0.2990</td>\n",
              "      <td>8.271</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>lightgbm</th>\n",
              "      <td>Light Gradient Boosting Machine</td>\n",
              "      <td>38.6511</td>\n",
              "      <td>3534.3613</td>\n",
              "      <td>59.4445</td>\n",
              "      <td>0.5179</td>\n",
              "      <td>0.3615</td>\n",
              "      <td>0.3124</td>\n",
              "      <td>0.509</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>rf</th>\n",
              "      <td>Random Forest Regressor</td>\n",
              "      <td>39.2854</td>\n",
              "      <td>3599.4404</td>\n",
              "      <td>59.9885</td>\n",
              "      <td>0.5089</td>\n",
              "      <td>0.3666</td>\n",
              "      <td>0.3192</td>\n",
              "      <td>42.915</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ridge</th>\n",
              "      <td>Ridge Regression</td>\n",
              "      <td>42.0114</td>\n",
              "      <td>3968.7520</td>\n",
              "      <td>62.9893</td>\n",
              "      <td>0.4588</td>\n",
              "      <td>0.4212</td>\n",
              "      <td>0.3501</td>\n",
              "      <td>0.114</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>lr</th>\n",
              "      <td>Linear Regression</td>\n",
              "      <td>42.4617</td>\n",
              "      <td>4671.1509</td>\n",
              "      <td>67.9341</td>\n",
              "      <td>0.3612</td>\n",
              "      <td>0.4252</td>\n",
              "      <td>0.3568</td>\n",
              "      <td>0.356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>lasso</th>\n",
              "      <td>Lasso Regression</td>\n",
              "      <td>43.9283</td>\n",
              "      <td>4338.9403</td>\n",
              "      <td>65.8603</td>\n",
              "      <td>0.4083</td>\n",
              "      <td>0.4236</td>\n",
              "      <td>0.3769</td>\n",
              "      <td>0.115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>dt</th>\n",
              "      <td>Decision Tree Regressor</td>\n",
              "      <td>53.8490</td>\n",
              "      <td>7142.5257</td>\n",
              "      <td>84.4965</td>\n",
              "      <td>0.0256</td>\n",
              "      <td>0.4966</td>\n",
              "      <td>0.4255</td>\n",
              "      <td>0.707</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                    Model      MAE        MSE     RMSE  \\\n",
              "huber                     Huber Regressor  39.7619  4196.2875  64.7682   \n",
              "lightgbm  Light Gradient Boosting Machine  38.6511  3534.3613  59.4445   \n",
              "rf                Random Forest Regressor  39.2854  3599.4404  59.9885   \n",
              "ridge                    Ridge Regression  42.0114  3968.7520  62.9893   \n",
              "lr                      Linear Regression  42.4617  4671.1509  67.9341   \n",
              "lasso                    Lasso Regression  43.9283  4338.9403  65.8603   \n",
              "dt                Decision Tree Regressor  53.8490  7142.5257  84.4965   \n",
              "\n",
              "              R2   RMSLE    MAPE  TT (Sec)  \n",
              "huber     0.4279  0.3871  0.2990     8.271  \n",
              "lightgbm  0.5179  0.3615  0.3124     0.509  \n",
              "rf        0.5089  0.3666  0.3192    42.915  \n",
              "ridge     0.4588  0.4212  0.3501     0.114  \n",
              "lr        0.3612  0.4252  0.3568     0.356  \n",
              "lasso     0.4083  0.4236  0.3769     0.115  \n",
              "dt        0.0256  0.4966  0.4255     0.707  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,\n",
              "               tol=1e-05, warm_start=False)"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "f3d182e38a934f7f8e8511273f6d5fc7",
            "137fa0b5232f4a31909df52a11f9ff5b",
            "682529f04f4d4305b16e5709ef05e622",
            "fd4b4236eda44f0296787e4362675190",
            "bc3f8b2277f94ace8cb81421aaa8f3f3",
            "7a77777cea4f4556b17af0a96b7b770a"
          ]
        },
        "id": "XIwFXMV1b6pQ",
        "outputId": "93815ec8-bdf0-4acb-f6d2-909fa87f9233"
      },
      "source": [
        "model = setup(\n",
        "    data=df,\n",
        "    target='price',\n",
        "    normalize=True,                         # pre-processing\n",
        "    normalize_method='minmax',              # pre-processing\n",
        "    ignore_features=['last_review'],\n",
        ")\n"
      ],
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Description</th>\n",
              "      <th>Value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>session_id</td>\n",
              "      <td>3121</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Target</td>\n",
              "      <td>price</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Original Data</td>\n",
              "      <td>(37367, 16)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Missing Values</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Numeric Features</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Categorical Features</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Ordinal Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>High Cardinality Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>High Cardinality Method</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Transformed Train Set</td>\n",
              "      <td>(26156, 255)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Transformed Test Set</td>\n",
              "      <td>(11211, 255)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Shuffle Train-Test</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Stratify Train-Test</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Fold Generator</td>\n",
              "      <td>KFold</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Fold Number</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>CPU Jobs</td>\n",
              "      <td>-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Use GPU</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Log Experiment</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Experiment Name</td>\n",
              "      <td>reg-default-name</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>USI</td>\n",
              "      <td>1200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Imputation Type</td>\n",
              "      <td>simple</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Iterative Imputation Iteration</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Numeric Imputer</td>\n",
              "      <td>mean</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Iterative Imputation Numeric Model</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Categorical Imputer</td>\n",
              "      <td>constant</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Iterative Imputation Categorical Model</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Unknown Categoricals Handling</td>\n",
              "      <td>least_frequent</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Normalize</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Normalize Method</td>\n",
              "      <td>minmax</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>Transformation</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Transformation Method</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>PCA</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>PCA Method</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>PCA Components</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>Ignore Low Variance</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Combine Rare Levels</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Rare Level Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Numeric Binning</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>Remove Outliers</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Outliers Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Remove Multicollinearity</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>Multicollinearity Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Remove Perfect Collinearity</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Clustering</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>Clustering Iteration</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Polynomial Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Polynomial Degree</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>Trignometry Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>Polynomial Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>Group Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>Feature Selection</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>Feature Selection Method</td>\n",
              "      <td>classic</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Features Selection Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>Feature Interaction</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>Feature Ratio</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>Interaction Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>56</th>\n",
              "      <td>Transform Target</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>Transform Target Method</td>\n",
              "      <td>box-cox</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                               Description             Value\n",
              "0                               session_id              3121\n",
              "1                                   Target             price\n",
              "2                            Original Data       (37367, 16)\n",
              "3                           Missing Values             False\n",
              "4                         Numeric Features                 9\n",
              "5                     Categorical Features                 5\n",
              "6                         Ordinal Features             False\n",
              "7                High Cardinality Features             False\n",
              "8                  High Cardinality Method              None\n",
              "9                    Transformed Train Set      (26156, 255)\n",
              "10                    Transformed Test Set      (11211, 255)\n",
              "11                      Shuffle Train-Test              True\n",
              "12                     Stratify Train-Test             False\n",
              "13                          Fold Generator             KFold\n",
              "14                             Fold Number                10\n",
              "15                                CPU Jobs                -1\n",
              "16                                 Use GPU             False\n",
              "17                          Log Experiment             False\n",
              "18                         Experiment Name  reg-default-name\n",
              "19                                     USI              1200\n",
              "20                         Imputation Type            simple\n",
              "21          Iterative Imputation Iteration              None\n",
              "22                         Numeric Imputer              mean\n",
              "23      Iterative Imputation Numeric Model              None\n",
              "24                     Categorical Imputer          constant\n",
              "25  Iterative Imputation Categorical Model              None\n",
              "26           Unknown Categoricals Handling    least_frequent\n",
              "27                               Normalize              True\n",
              "28                        Normalize Method            minmax\n",
              "29                          Transformation             False\n",
              "30                   Transformation Method              None\n",
              "31                                     PCA             False\n",
              "32                              PCA Method              None\n",
              "33                          PCA Components              None\n",
              "34                     Ignore Low Variance             False\n",
              "35                     Combine Rare Levels             False\n",
              "36                    Rare Level Threshold              None\n",
              "37                         Numeric Binning             False\n",
              "38                         Remove Outliers             False\n",
              "39                      Outliers Threshold              None\n",
              "40                Remove Multicollinearity             False\n",
              "41             Multicollinearity Threshold              None\n",
              "42             Remove Perfect Collinearity              True\n",
              "43                              Clustering             False\n",
              "44                    Clustering Iteration              None\n",
              "45                     Polynomial Features             False\n",
              "46                       Polynomial Degree              None\n",
              "47                    Trignometry Features             False\n",
              "48                    Polynomial Threshold              None\n",
              "49                          Group Features             False\n",
              "50                       Feature Selection             False\n",
              "51                Feature Selection Method           classic\n",
              "52            Features Selection Threshold              None\n",
              "53                     Feature Interaction             False\n",
              "54                           Feature Ratio             False\n",
              "55                   Interaction Threshold              None\n",
              "56                        Transform Target             False\n",
              "57                 Transform Target Method           box-cox"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300,
          "referenced_widgets": [
            "600f9cbfd74247dd8aa76f566aacffb0",
            "6f97e01e07a646639220c4e6d4719392",
            "fe1ebf2267a5471fa0060d0ae467ca97"
          ]
        },
        "id": "OtvaxmsqOPH-",
        "outputId": "bff153c4-96b7-4fdc-b41d-65896d299be2"
      },
      "source": [
        "compare_models(include=['rf','dt','lr','lightgbm','ridge','lasso','huber'],\n",
        "               sort = 'MAPE')"
      ],
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Model</th>\n",
              "      <th>MAE</th>\n",
              "      <th>MSE</th>\n",
              "      <th>RMSE</th>\n",
              "      <th>R2</th>\n",
              "      <th>RMSLE</th>\n",
              "      <th>MAPE</th>\n",
              "      <th>TT (Sec)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>huber</th>\n",
              "      <td>Huber Regressor</td>\n",
              "      <td>40.2705</td>\n",
              "      <td>4348.3528</td>\n",
              "      <td>65.9101</td>\n",
              "      <td>0.4221</td>\n",
              "      <td>0.3898</td>\n",
              "      <td>0.2997</td>\n",
              "      <td>5.715</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>lightgbm</th>\n",
              "      <td>Light Gradient Boosting Machine</td>\n",
              "      <td>39.2662</td>\n",
              "      <td>3657.8809</td>\n",
              "      <td>60.4537</td>\n",
              "      <td>0.5137</td>\n",
              "      <td>0.3641</td>\n",
              "      <td>0.3151</td>\n",
              "      <td>0.429</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>rf</th>\n",
              "      <td>Random Forest Regressor</td>\n",
              "      <td>39.9117</td>\n",
              "      <td>3723.8836</td>\n",
              "      <td>60.9877</td>\n",
              "      <td>0.5050</td>\n",
              "      <td>0.3695</td>\n",
              "      <td>0.3223</td>\n",
              "      <td>32.748</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ridge</th>\n",
              "      <td>Ridge Regression</td>\n",
              "      <td>42.6654</td>\n",
              "      <td>4096.8635</td>\n",
              "      <td>63.9820</td>\n",
              "      <td>0.4553</td>\n",
              "      <td>0.4223</td>\n",
              "      <td>0.3529</td>\n",
              "      <td>0.094</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>lr</th>\n",
              "      <td>Linear Regression</td>\n",
              "      <td>45.6774</td>\n",
              "      <td>26016.2705</td>\n",
              "      <td>134.5149</td>\n",
              "      <td>-2.4692</td>\n",
              "      <td>0.4344</td>\n",
              "      <td>0.3772</td>\n",
              "      <td>0.273</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>lasso</th>\n",
              "      <td>Lasso Regression</td>\n",
              "      <td>45.0090</td>\n",
              "      <td>4618.5216</td>\n",
              "      <td>67.9343</td>\n",
              "      <td>0.3860</td>\n",
              "      <td>0.4213</td>\n",
              "      <td>0.3814</td>\n",
              "      <td>0.086</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>dt</th>\n",
              "      <td>Decision Tree Regressor</td>\n",
              "      <td>54.1378</td>\n",
              "      <td>7276.4052</td>\n",
              "      <td>85.2879</td>\n",
              "      <td>0.0312</td>\n",
              "      <td>0.4973</td>\n",
              "      <td>0.4277</td>\n",
              "      <td>0.546</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                    Model      MAE         MSE      RMSE  \\\n",
              "huber                     Huber Regressor  40.2705   4348.3528   65.9101   \n",
              "lightgbm  Light Gradient Boosting Machine  39.2662   3657.8809   60.4537   \n",
              "rf                Random Forest Regressor  39.9117   3723.8836   60.9877   \n",
              "ridge                    Ridge Regression  42.6654   4096.8635   63.9820   \n",
              "lr                      Linear Regression  45.6774  26016.2705  134.5149   \n",
              "lasso                    Lasso Regression  45.0090   4618.5216   67.9343   \n",
              "dt                Decision Tree Regressor  54.1378   7276.4052   85.2879   \n",
              "\n",
              "              R2   RMSLE    MAPE  TT (Sec)  \n",
              "huber     0.4221  0.3898  0.2997     5.715  \n",
              "lightgbm  0.5137  0.3641  0.3151     0.429  \n",
              "rf        0.5050  0.3695  0.3223    32.748  \n",
              "ridge     0.4553  0.4223  0.3529     0.094  \n",
              "lr       -2.4692  0.4344  0.3772     0.273  \n",
              "lasso     0.3860  0.4213  0.3814     0.086  \n",
              "dt        0.0312  0.4973  0.4277     0.546  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,\n",
              "               tol=1e-05, warm_start=False)"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "9a8a3a4d7c7f4fe18532e983f82b8490",
            "581dcc927bae42fa8dff7aa45d1a8ff3",
            "b0f951dab0524252ab4afe4847bd1056",
            "1ec42cd29bcc41d0ba68c53878e0572d",
            "c0be71279420403e9c0085f324bece43",
            "ce6f64f8088446a998f5baac00d31fb5"
          ]
        },
        "id": "wvWfCqSjdiB5",
        "outputId": "19a5cac8-9b64-4ad4-d192-f8280e0eb3db"
      },
      "source": [
        "model = setup(\n",
        "    data=df,\n",
        "    target='price',\n",
        "    ignore_features=['last_review'],\n",
        "    normalize=True,\n",
        "    normalize_method='minmax',\n",
        "    polynomial_features=True,\n",
        "    polynomial_degree=2\n",
        "        \n",
        ")"
      ],
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Description</th>\n",
              "      <th>Value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>session_id</td>\n",
              "      <td>5774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Target</td>\n",
              "      <td>price</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Original Data</td>\n",
              "      <td>(37367, 16)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Missing Values</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Numeric Features</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Categorical Features</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Ordinal Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>High Cardinality Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>High Cardinality Method</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Transformed Train Set</td>\n",
              "      <td>(26156, 253)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Transformed Test Set</td>\n",
              "      <td>(11211, 253)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Shuffle Train-Test</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Stratify Train-Test</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Fold Generator</td>\n",
              "      <td>KFold</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Fold Number</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>CPU Jobs</td>\n",
              "      <td>-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Use GPU</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Log Experiment</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Experiment Name</td>\n",
              "      <td>reg-default-name</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>USI</td>\n",
              "      <td>6b7a</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Imputation Type</td>\n",
              "      <td>simple</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Iterative Imputation Iteration</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Numeric Imputer</td>\n",
              "      <td>mean</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Iterative Imputation Numeric Model</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Categorical Imputer</td>\n",
              "      <td>constant</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Iterative Imputation Categorical Model</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Unknown Categoricals Handling</td>\n",
              "      <td>least_frequent</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Normalize</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Normalize Method</td>\n",
              "      <td>minmax</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>Transformation</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Transformation Method</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>PCA</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>PCA Method</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>PCA Components</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>Ignore Low Variance</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Combine Rare Levels</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Rare Level Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Numeric Binning</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>Remove Outliers</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Outliers Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Remove Multicollinearity</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>Multicollinearity Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Remove Perfect Collinearity</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Clustering</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>Clustering Iteration</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Polynomial Features</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Polynomial Degree</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>Trignometry Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>Polynomial Threshold</td>\n",
              "      <td>0.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>Group Features</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>Feature Selection</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>Feature Selection Method</td>\n",
              "      <td>classic</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Features Selection Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>Feature Interaction</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>Feature Ratio</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>Interaction Threshold</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>56</th>\n",
              "      <td>Transform Target</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>Transform Target Method</td>\n",
              "      <td>box-cox</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                               Description             Value\n",
              "0                               session_id              5774\n",
              "1                                   Target             price\n",
              "2                            Original Data       (37367, 16)\n",
              "3                           Missing Values             False\n",
              "4                         Numeric Features                 9\n",
              "5                     Categorical Features                 5\n",
              "6                         Ordinal Features             False\n",
              "7                High Cardinality Features             False\n",
              "8                  High Cardinality Method              None\n",
              "9                    Transformed Train Set      (26156, 253)\n",
              "10                    Transformed Test Set      (11211, 253)\n",
              "11                      Shuffle Train-Test              True\n",
              "12                     Stratify Train-Test             False\n",
              "13                          Fold Generator             KFold\n",
              "14                             Fold Number                10\n",
              "15                                CPU Jobs                -1\n",
              "16                                 Use GPU             False\n",
              "17                          Log Experiment             False\n",
              "18                         Experiment Name  reg-default-name\n",
              "19                                     USI              6b7a\n",
              "20                         Imputation Type            simple\n",
              "21          Iterative Imputation Iteration              None\n",
              "22                         Numeric Imputer              mean\n",
              "23      Iterative Imputation Numeric Model              None\n",
              "24                     Categorical Imputer          constant\n",
              "25  Iterative Imputation Categorical Model              None\n",
              "26           Unknown Categoricals Handling    least_frequent\n",
              "27                               Normalize              True\n",
              "28                        Normalize Method            minmax\n",
              "29                          Transformation             False\n",
              "30                   Transformation Method              None\n",
              "31                                     PCA             False\n",
              "32                              PCA Method              None\n",
              "33                          PCA Components              None\n",
              "34                     Ignore Low Variance             False\n",
              "35                     Combine Rare Levels             False\n",
              "36                    Rare Level Threshold              None\n",
              "37                         Numeric Binning             False\n",
              "38                         Remove Outliers             False\n",
              "39                      Outliers Threshold              None\n",
              "40                Remove Multicollinearity             False\n",
              "41             Multicollinearity Threshold              None\n",
              "42             Remove Perfect Collinearity              True\n",
              "43                              Clustering             False\n",
              "44                    Clustering Iteration              None\n",
              "45                     Polynomial Features              True\n",
              "46                       Polynomial Degree                 2\n",
              "47                    Trignometry Features             False\n",
              "48                    Polynomial Threshold               0.1\n",
              "49                          Group Features             False\n",
              "50                       Feature Selection             False\n",
              "51                Feature Selection Method           classic\n",
              "52            Features Selection Threshold              None\n",
              "53                     Feature Interaction             False\n",
              "54                           Feature Ratio             False\n",
              "55                   Interaction Threshold              None\n",
              "56                        Transform Target             False\n",
              "57                 Transform Target Method           box-cox"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300,
          "referenced_widgets": [
            "dc5c1a91620147b0a7bab2000d2bc09f",
            "2b42b12f51f743389dc31fd88f232345",
            "0aa722f2ba4e4ecaaff16aad4cb8e727"
          ]
        },
        "id": "FOIrW79DzyBC",
        "outputId": "a2d593e1-260b-444d-ac78-677c1fdbfa45"
      },
      "source": [
        "compare_models(include=['rf','dt','lr','lightgbm','ridge','lasso','huber'],\n",
        "               sort = 'MAPE')"
      ],
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Model</th>\n",
              "      <th>MAE</th>\n",
              "      <th>MSE</th>\n",
              "      <th>RMSE</th>\n",
              "      <th>R2</th>\n",
              "      <th>RMSLE</th>\n",
              "      <th>MAPE</th>\n",
              "      <th>TT (Sec)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>huber</th>\n",
              "      <td>Huber Regressor</td>\n",
              "      <td>39.9232</td>\n",
              "      <td>4246.2577</td>\n",
              "      <td>65.1459</td>\n",
              "      <td>0.4220</td>\n",
              "      <td>0.3888</td>\n",
              "      <td>0.2995</td>\n",
              "      <td>5.771</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>lightgbm</th>\n",
              "      <td>Light Gradient Boosting Machine</td>\n",
              "      <td>38.8929</td>\n",
              "      <td>3579.8912</td>\n",
              "      <td>59.8158</td>\n",
              "      <td>0.5125</td>\n",
              "      <td>0.3638</td>\n",
              "      <td>0.3139</td>\n",
              "      <td>0.397</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>rf</th>\n",
              "      <td>Random Forest Regressor</td>\n",
              "      <td>39.6315</td>\n",
              "      <td>3675.7026</td>\n",
              "      <td>60.6134</td>\n",
              "      <td>0.4995</td>\n",
              "      <td>0.3701</td>\n",
              "      <td>0.3222</td>\n",
              "      <td>32.132</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ridge</th>\n",
              "      <td>Ridge Regression</td>\n",
              "      <td>42.1969</td>\n",
              "      <td>4011.6394</td>\n",
              "      <td>63.3225</td>\n",
              "      <td>0.4538</td>\n",
              "      <td>0.4183</td>\n",
              "      <td>0.3512</td>\n",
              "      <td>0.093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>lasso</th>\n",
              "      <td>Lasso Regression</td>\n",
              "      <td>44.4844</td>\n",
              "      <td>4514.1984</td>\n",
              "      <td>67.1747</td>\n",
              "      <td>0.3853</td>\n",
              "      <td>0.4200</td>\n",
              "      <td>0.3791</td>\n",
              "      <td>0.089</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>dt</th>\n",
              "      <td>Decision Tree Regressor</td>\n",
              "      <td>53.9194</td>\n",
              "      <td>7150.4797</td>\n",
              "      <td>84.5449</td>\n",
              "      <td>0.0254</td>\n",
              "      <td>0.4997</td>\n",
              "      <td>0.4305</td>\n",
              "      <td>0.543</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>lr</th>\n",
              "      <td>Linear Regression</td>\n",
              "      <td>49.2598</td>\n",
              "      <td>301741.6531</td>\n",
              "      <td>321.5882</td>\n",
              "      <td>-39.4325</td>\n",
              "      <td>0.4370</td>\n",
              "      <td>0.4794</td>\n",
              "      <td>0.268</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                    Model      MAE          MSE      RMSE  \\\n",
              "huber                     Huber Regressor  39.9232    4246.2577   65.1459   \n",
              "lightgbm  Light Gradient Boosting Machine  38.8929    3579.8912   59.8158   \n",
              "rf                Random Forest Regressor  39.6315    3675.7026   60.6134   \n",
              "ridge                    Ridge Regression  42.1969    4011.6394   63.3225   \n",
              "lasso                    Lasso Regression  44.4844    4514.1984   67.1747   \n",
              "dt                Decision Tree Regressor  53.9194    7150.4797   84.5449   \n",
              "lr                      Linear Regression  49.2598  301741.6531  321.5882   \n",
              "\n",
              "               R2   RMSLE    MAPE  TT (Sec)  \n",
              "huber      0.4220  0.3888  0.2995     5.771  \n",
              "lightgbm   0.5125  0.3638  0.3139     0.397  \n",
              "rf         0.4995  0.3701  0.3222    32.132  \n",
              "ridge      0.4538  0.4183  0.3512     0.093  \n",
              "lasso      0.3853  0.4200  0.3791     0.089  \n",
              "dt         0.0254  0.4997  0.4305     0.543  \n",
              "lr       -39.4325  0.4370  0.4794     0.268  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,\n",
              "               tol=1e-05, warm_start=False)"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 421,
          "referenced_widgets": [
            "b071dc35d33743159b36702da20c82f5",
            "ea1b3b4daf2444b4b84034d62dc4ec9b",
            "efa2966c005147028f31b99fc4af33cb"
          ]
        },
        "id": "a3G_AWu71rpe",
        "outputId": "540f9f61-dc46-4afd-a00b-93a694a0ee4c"
      },
      "source": [
        "huber_zscore = create_model('huber')"
      ],
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>MAE</th>\n",
              "      <th>MSE</th>\n",
              "      <th>RMSE</th>\n",
              "      <th>R2</th>\n",
              "      <th>RMSLE</th>\n",
              "      <th>MAPE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>40.1248</td>\n",
              "      <td>4178.4340</td>\n",
              "      <td>64.6408</td>\n",
              "      <td>0.4297</td>\n",
              "      <td>0.3898</td>\n",
              "      <td>0.3025</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>39.5869</td>\n",
              "      <td>4142.0546</td>\n",
              "      <td>64.3588</td>\n",
              "      <td>0.4173</td>\n",
              "      <td>0.3823</td>\n",
              "      <td>0.3022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>40.0729</td>\n",
              "      <td>4213.7710</td>\n",
              "      <td>64.9136</td>\n",
              "      <td>0.4297</td>\n",
              "      <td>0.3946</td>\n",
              "      <td>0.3059</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39.0935</td>\n",
              "      <td>3820.2092</td>\n",
              "      <td>61.8078</td>\n",
              "      <td>0.4437</td>\n",
              "      <td>0.3853</td>\n",
              "      <td>0.3038</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>40.3312</td>\n",
              "      <td>4444.1324</td>\n",
              "      <td>66.6643</td>\n",
              "      <td>0.4291</td>\n",
              "      <td>0.3867</td>\n",
              "      <td>0.2966</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>41.9349</td>\n",
              "      <td>4678.3252</td>\n",
              "      <td>68.3983</td>\n",
              "      <td>0.4193</td>\n",
              "      <td>0.4000</td>\n",
              "      <td>0.3069</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>39.7385</td>\n",
              "      <td>4205.0477</td>\n",
              "      <td>64.8463</td>\n",
              "      <td>0.4332</td>\n",
              "      <td>0.3850</td>\n",
              "      <td>0.3007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>39.1693</td>\n",
              "      <td>4010.5615</td>\n",
              "      <td>63.3290</td>\n",
              "      <td>0.4359</td>\n",
              "      <td>0.3777</td>\n",
              "      <td>0.2917</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>39.6134</td>\n",
              "      <td>4134.1422</td>\n",
              "      <td>64.2973</td>\n",
              "      <td>0.4329</td>\n",
              "      <td>0.3837</td>\n",
              "      <td>0.2936</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>39.8322</td>\n",
              "      <td>4310.5847</td>\n",
              "      <td>65.6550</td>\n",
              "      <td>0.4036</td>\n",
              "      <td>0.3898</td>\n",
              "      <td>0.2991</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Mean</th>\n",
              "      <td>39.9498</td>\n",
              "      <td>4213.7263</td>\n",
              "      <td>64.8911</td>\n",
              "      <td>0.4274</td>\n",
              "      <td>0.3875</td>\n",
              "      <td>0.3003</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SD</th>\n",
              "      <td>0.7601</td>\n",
              "      <td>220.7360</td>\n",
              "      <td>1.6934</td>\n",
              "      <td>0.0107</td>\n",
              "      <td>0.0060</td>\n",
              "      <td>0.0048</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          MAE        MSE     RMSE      R2   RMSLE    MAPE\n",
              "0     40.1248  4178.4340  64.6408  0.4297  0.3898  0.3025\n",
              "1     39.5869  4142.0546  64.3588  0.4173  0.3823  0.3022\n",
              "2     40.0729  4213.7710  64.9136  0.4297  0.3946  0.3059\n",
              "3     39.0935  3820.2092  61.8078  0.4437  0.3853  0.3038\n",
              "4     40.3312  4444.1324  66.6643  0.4291  0.3867  0.2966\n",
              "5     41.9349  4678.3252  68.3983  0.4193  0.4000  0.3069\n",
              "6     39.7385  4205.0477  64.8463  0.4332  0.3850  0.3007\n",
              "7     39.1693  4010.5615  63.3290  0.4359  0.3777  0.2917\n",
              "8     39.6134  4134.1422  64.2973  0.4329  0.3837  0.2936\n",
              "9     39.8322  4310.5847  65.6550  0.4036  0.3898  0.2991\n",
              "Mean  39.9498  4213.7263  64.8911  0.4274  0.3875  0.3003\n",
              "SD     0.7601   220.7360   1.6934  0.0107  0.0060  0.0048"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 421,
          "referenced_widgets": [
            "b3cced2c3ff740459509a2023ec9f204",
            "a08c8ca9e1b7453f94800592302e67e5",
            "b5c11eca01b1412eb8ed765313beaad1"
          ]
        },
        "id": "AF_M_eWoSeZO",
        "outputId": "b6c67b9b-38f6-4edc-fcd2-d5127353fe38"
      },
      "source": [
        "huber_zscore_tuned = tune_model(huber_zscore,\n",
        "           optimize='MAPE',\n",
        "           search_library='scikit-learn',\n",
        "           search_algorithm='random'\n",
        "           )"
      ],
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>MAE</th>\n",
              "      <th>MSE</th>\n",
              "      <th>RMSE</th>\n",
              "      <th>R2</th>\n",
              "      <th>RMSLE</th>\n",
              "      <th>MAPE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>40.1898</td>\n",
              "      <td>4315.2109</td>\n",
              "      <td>65.6903</td>\n",
              "      <td>0.4110</td>\n",
              "      <td>0.3884</td>\n",
              "      <td>0.2951</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>39.3930</td>\n",
              "      <td>4202.9584</td>\n",
              "      <td>64.8302</td>\n",
              "      <td>0.4087</td>\n",
              "      <td>0.3811</td>\n",
              "      <td>0.2943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>40.1027</td>\n",
              "      <td>4308.0644</td>\n",
              "      <td>65.6358</td>\n",
              "      <td>0.4169</td>\n",
              "      <td>0.3909</td>\n",
              "      <td>0.2984</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39.0287</td>\n",
              "      <td>3922.1765</td>\n",
              "      <td>62.6273</td>\n",
              "      <td>0.4288</td>\n",
              "      <td>0.3815</td>\n",
              "      <td>0.2953</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>40.5050</td>\n",
              "      <td>4579.5207</td>\n",
              "      <td>67.6722</td>\n",
              "      <td>0.4117</td>\n",
              "      <td>0.3877</td>\n",
              "      <td>0.2899</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>41.8982</td>\n",
              "      <td>4783.9382</td>\n",
              "      <td>69.1660</td>\n",
              "      <td>0.4062</td>\n",
              "      <td>0.3960</td>\n",
              "      <td>0.2988</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>39.7370</td>\n",
              "      <td>4314.2615</td>\n",
              "      <td>65.6830</td>\n",
              "      <td>0.4185</td>\n",
              "      <td>0.3824</td>\n",
              "      <td>0.2924</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>39.2475</td>\n",
              "      <td>4132.0937</td>\n",
              "      <td>64.2814</td>\n",
              "      <td>0.4188</td>\n",
              "      <td>0.3779</td>\n",
              "      <td>0.2853</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>39.7529</td>\n",
              "      <td>4269.9434</td>\n",
              "      <td>65.3448</td>\n",
              "      <td>0.4143</td>\n",
              "      <td>0.3832</td>\n",
              "      <td>0.2870</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>39.7767</td>\n",
              "      <td>4410.6900</td>\n",
              "      <td>66.4130</td>\n",
              "      <td>0.3898</td>\n",
              "      <td>0.3854</td>\n",
              "      <td>0.2908</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Mean</th>\n",
              "      <td>39.9631</td>\n",
              "      <td>4323.8858</td>\n",
              "      <td>65.7344</td>\n",
              "      <td>0.4125</td>\n",
              "      <td>0.3854</td>\n",
              "      <td>0.2927</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SD</th>\n",
              "      <td>0.7713</td>\n",
              "      <td>223.7495</td>\n",
              "      <td>1.6953</td>\n",
              "      <td>0.0097</td>\n",
              "      <td>0.0051</td>\n",
              "      <td>0.0043</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          MAE        MSE     RMSE      R2   RMSLE    MAPE\n",
              "0     40.1898  4315.2109  65.6903  0.4110  0.3884  0.2951\n",
              "1     39.3930  4202.9584  64.8302  0.4087  0.3811  0.2943\n",
              "2     40.1027  4308.0644  65.6358  0.4169  0.3909  0.2984\n",
              "3     39.0287  3922.1765  62.6273  0.4288  0.3815  0.2953\n",
              "4     40.5050  4579.5207  67.6722  0.4117  0.3877  0.2899\n",
              "5     41.8982  4783.9382  69.1660  0.4062  0.3960  0.2988\n",
              "6     39.7370  4314.2615  65.6830  0.4185  0.3824  0.2924\n",
              "7     39.2475  4132.0937  64.2814  0.4188  0.3779  0.2853\n",
              "8     39.7529  4269.9434  65.3448  0.4143  0.3832  0.2870\n",
              "9     39.7767  4410.6900  66.4130  0.3898  0.3854  0.2908\n",
              "Mean  39.9631  4323.8858  65.7344  0.4125  0.3854  0.2927\n",
              "SD     0.7713   223.7495   1.6953  0.0097  0.0051  0.0043"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 478
        },
        "id": "jJJdFg8TY3wB",
        "outputId": "6a6dd7e5-0da6-409f-efb1-39a2141fd568"
      },
      "source": [
        "%matplotlib inline\n",
        "plot_model(huber_zscore_tuned, plot='feature')"
      ],
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "oCyDC2EH54Mx",
        "outputId": "1df162c8-be95-42ad-f9f6-44e4597f04cf"
      },
      "source": [
        "%matplotlib inline\n",
        "plot_model(huber_zscore_tuned, plot='error')"
      ],
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295,
          "referenced_widgets": [
            "f8c2b3e87a3b434a98afeb09ba979830",
            "233110c4811e4aad9481db4336cbeb97",
            "d2b23e601b6b4fbe83f61b895a11867f",
            "224e7ffc724b453a8a8dfc5d15e0e4fb",
            "82cc9f3fc03f46d8b9ed7630f35938b7",
            "2576d58ccfdc4e93a7d6462cc7120bdc",
            "81ec63da42b541bea580950bc55da154",
            "8dd4c1344b064adfb2875d94604334f8",
            "2207686824b4436fbd32cdf6fd618649",
            "a9ebf10849d741589325676669cd4049"
          ]
        },
        "id": "UoM6TZ2a6F_o",
        "outputId": "0faa4bd5-a687-427f-f032-e43f4cbc847b"
      },
      "source": [
        "%matplotlib inline\n",
        "evaluate_model(huber_zscore_tuned)"
      ],
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "f8c2b3e87a3b434a98afeb09ba979830",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(ToggleButtons(description='Plot Type:', icons=('',), options=(('Hyperparameters', 'param…"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lCJfeBV4eJI6",
        "outputId": "85d206cb-4fde-438d-be0e-ec20053968b7"
      },
      "source": [
        "save_model(huber_zscore_tuned, model_name='airbnb2019')"
      ],
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Transformation Pipeline and Model Successfully Saved\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(Pipeline(memory=None,\n",
              "          steps=[('dtypes',\n",
              "                  DataTypes_Auto_infer(categorical_features=[],\n",
              "                                       display_types=True,\n",
              "                                       features_todrop=['last_review'],\n",
              "                                       id_columns=[], ml_usecase='regression',\n",
              "                                       numerical_features=[], target='price',\n",
              "                                       time_features=[])),\n",
              "                 ('imputer',\n",
              "                  Simple_Imputer(categorical_strategy='not_available',\n",
              "                                 fill_value_categorical=None,\n",
              "                                 fill_value_numerical=None,\n",
              "                                 numer...\n",
              "                 ('rem_outliers', 'passthrough'), ('cluster_all', 'passthrough'),\n",
              "                 ('dummy', Dummify(target='price')),\n",
              "                 ('fix_perfect', Remove_100(target='price')),\n",
              "                 ('clean_names', Clean_Colum_Names()),\n",
              "                 ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),\n",
              "                 ('dfs', 'passthrough'), ('pca', 'passthrough'),\n",
              "                 ['trained_model',\n",
              "                  HuberRegressor(alpha=0.7, epsilon=1, fit_intercept=False,\n",
              "                                 max_iter=100, tol=1e-05, warm_start=False)]],\n",
              "          verbose=False), 'airbnb2019.pkl')"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gAlEGaz-clmV",
        "outputId": "9ce08e33-17e5-4d80-c71b-e4b4c90d1d95"
      },
      "source": [
        "#check out the price here and compare\n",
        "user_request"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "neighbourhood_group                         Bronx\n",
              "neighbourhood                          Mott Haven\n",
              "latitude                                  40.8079\n",
              "longitude                                 -73.924\n",
              "room_type                         Entire home/apt\n",
              "price                                         100\n",
              "minimum_nights                                  1\n",
              "number_of_reviews                               2\n",
              "last_review                            2019-07-07\n",
              "reviews_per_month                               2\n",
              "calculated_host_listings_count                  1\n",
              "availability_365                               40\n",
              "year                                         2019\n",
              "month                                          07\n",
              "day                                            07\n",
              "date_id                                      1745\n",
              "Name: 37368, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ib81adaAkzkR"
      },
      "source": [
        "user_request.drop(columns=['price'],inplace=True)"
      ],
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JCpHg3Q9kZ7n"
      },
      "source": [
        "user_request = pd.DataFrame(user_request)\n",
        "user_request = user_request.T"
      ],
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "T_ZLAMyLlCCI",
        "outputId": "b5f2b24e-a8f5-4fd4-b79c-09485f1c20e4"
      },
      "source": [
        "loaded_model = load_model('airbnb2019')"
      ],
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Transformation Pipeline and Model Successfully Loaded\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 117
        },
        "id": "e0ltKvFLlMI1",
        "outputId": "96e9eb36-e9ee-42a5-bcfe-3722b1599ae5"
      },
      "source": [
        "predict_model(loaded_model, user_request)"
      ],
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>neighbourhood_group</th>\n",
              "      <th>neighbourhood</th>\n",
              "      <th>latitude</th>\n",
              "      <th>longitude</th>\n",
              "      <th>room_type</th>\n",
              "      <th>price</th>\n",
              "      <th>minimum_nights</th>\n",
              "      <th>number_of_reviews</th>\n",
              "      <th>last_review</th>\n",
              "      <th>reviews_per_month</th>\n",
              "      <th>calculated_host_listings_count</th>\n",
              "      <th>availability_365</th>\n",
              "      <th>year</th>\n",
              "      <th>month</th>\n",
              "      <th>day</th>\n",
              "      <th>date_id</th>\n",
              "      <th>Label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37368</th>\n",
              "      <td>Bronx</td>\n",
              "      <td>Mott Haven</td>\n",
              "      <td>40.8079</td>\n",
              "      <td>-73.924</td>\n",
              "      <td>Entire home/apt</td>\n",
              "      <td>100</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2019-07-07</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>40</td>\n",
              "      <td>2019</td>\n",
              "      <td>07</td>\n",
              "      <td>07</td>\n",
              "      <td>1745</td>\n",
              "      <td>110.576903</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      neighbourhood_group neighbourhood latitude  ... day date_id       Label\n",
              "37368               Bronx    Mott Haven  40.8079  ...  07    1745  110.576903\n",
              "\n",
              "[1 rows x 17 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    }
  ]
}